/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.autoidentreactsample;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int btn_checkbox_to_checked_box_inner_merged_animation=0x7f01000c;
    public static final int btn_checkbox_to_checked_box_outer_merged_animation=0x7f01000d;
    public static final int btn_checkbox_to_checked_icon_null_animation=0x7f01000e;
    public static final int btn_checkbox_to_unchecked_box_inner_merged_animation=0x7f01000f;
    public static final int btn_checkbox_to_unchecked_check_path_merged_animation=0x7f010010;
    public static final int btn_checkbox_to_unchecked_icon_null_animation=0x7f010011;
    public static final int btn_radio_to_off_mtrl_dot_group_animation=0x7f010012;
    public static final int btn_radio_to_off_mtrl_ring_outer_animation=0x7f010013;
    public static final int btn_radio_to_off_mtrl_ring_outer_path_animation=0x7f010014;
    public static final int btn_radio_to_on_mtrl_dot_group_animation=0x7f010015;
    public static final int btn_radio_to_on_mtrl_ring_outer_animation=0x7f010016;
    public static final int btn_radio_to_on_mtrl_ring_outer_path_animation=0x7f010017;
    public static final int catalyst_fade_in=0x7f010018;
    public static final int catalyst_fade_out=0x7f010019;
    public static final int catalyst_push_up_in=0x7f01001a;
    public static final int catalyst_push_up_out=0x7f01001b;
    public static final int catalyst_slide_down=0x7f01001c;
    public static final int catalyst_slide_up=0x7f01001d;
    public static final int fade_in=0x7f01001e;
    public static final int no_change=0x7f01001f;
    public static final int slide_down=0x7f010020;
    public static final int slide_in_right=0x7f010021;
    public static final int slide_up=0x7f010022;
    public static final int zoom_activity_finish=0x7f010023;
    public static final int zoom_check_animation=0x7f010024;
    public static final int zoom_circle_stroke_end_animation=0x7f010025;
    public static final int zoom_circle_stroke_path_animation=0x7f010026;
    public static final int zoom_circle_stroke_width_animation=0x7f010027;
    public static final int zoom_cross_1_animation=0x7f010028;
    public static final int zoom_cross_2_animation=0x7f010029;
    public static final int zoom_fade_out=0x7f01002a;
    public static final int zoom_slide_in_left=0x7f01002b;
    public static final int zoom_slide_out_left=0x7f01002c;
    public static final int zoom_text_from_center=0x7f01002d;
  }
  public static final class animator {
    public static final int zoom_enter_right_slow=0x7f020000;
    public static final int zoom_exit_left_slow=0x7f020001;
    public static final int zoom_no_delay_fade_in=0x7f020002;
  }
  public static final class array {
    public static final int idnow_samsung_s5_model=0x7f030000;
  }
  public static final class attr {
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int SpinKitViewStyle=0x7f040000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int SpinKit_Color=0x7f040001;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ChasingDots</td><td>5</td><td></td></tr>
     * <tr><td>Circle</td><td>7</td><td></td></tr>
     * <tr><td>CubeGrid</td><td>8</td><td></td></tr>
     * <tr><td>DoubleBounce</td><td>1</td><td></td></tr>
     * <tr><td>FadingCircle</td><td>9</td><td></td></tr>
     * <tr><td>FoldingCube</td><td>a</td><td></td></tr>
     * <tr><td>MultiplePulse</td><td>c</td><td></td></tr>
     * <tr><td>MultiplePulseRing</td><td>e</td><td></td></tr>
     * <tr><td>Pulse</td><td>4</td><td></td></tr>
     * <tr><td>PulseRing</td><td>d</td><td></td></tr>
     * <tr><td>RotatingCircle</td><td>b</td><td></td></tr>
     * <tr><td>RotatingPlane</td><td>0</td><td></td></tr>
     * <tr><td>ThreeBounce</td><td>6</td><td></td></tr>
     * <tr><td>WanderingCubes</td><td>3</td><td></td></tr>
     * <tr><td>Wave</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int SpinKit_Style=0x7f040002;
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040003;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040004;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040005;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040006;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040007;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040008;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040009;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f04000a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f04000b;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f04000c;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000d;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000e;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000f;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f040010;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f040011;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f040012;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040013;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040014;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040015;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040016;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040017;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040018;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040019;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f04001a;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f04001b;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f04001c;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001e;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f040020;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f040021;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f040022;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040023;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040024;
    /**
     * An image reference
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actualImageResource=0x7f040025;
    /**
     * Scale type of the actual image.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int actualImageScaleType=0x7f040026;
    /**
     * An image uri .
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actualImageUri=0x7f040027;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040028;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040029;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f04002a;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f04002b;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f04002c;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f04002d;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f04002e;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f04002f;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f040030;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f040031;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040032;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040033;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040034;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040035;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040036;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040037;
    /**
     * A drawable or color to be used as a background.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int backgroundImage=0x7f040038;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f040039;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f04003a;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f04003b;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f04003c;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f04003d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int barrierAllowsGoneWidgets=0x7f04003e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int barrierDirection=0x7f04003f;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f040040;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f040041;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f040042;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f040043;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040044;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040045;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonCompat=0x7f040046;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f040047;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f040048;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f040049;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f04004a;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f04004b;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f04004c;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f04004d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chainUseRtl=0x7f04004e;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f04004f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checked=0x7f040050;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f040051;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int circle_color=0x7f040052;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f040053;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f040054;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f040055;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f040056;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f040057;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f040058;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f040059;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f04005a;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f04005b;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f04005c;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f04005d;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f04005e;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f04005f;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f040060;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f040061;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f040062;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSet=0x7f040063;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int constraint_referenced_ids=0x7f040064;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int content=0x7f040065;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f040066;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f040067;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f040068;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f040069;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f04006a;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f04006b;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f04006c;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f04006d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f04006e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_autoTextColor=0x7f04006f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_autoTextSize=0x7f040070;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor=0x7f040071;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor1=0x7f040072;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor2=0x7f040073;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor3=0x7f040074;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Both</td><td>3</td><td></td></tr>
     * <tr><td>End</td><td>2</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Start</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int cpv_barStartEndLine=0x7f040075;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barStartEndLineColor=0x7f040076;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_barStartEndLineSweep=0x7f040077;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_barStartEndLineWidth=0x7f040078;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Butt</td><td>0</td><td></td></tr>
     * <tr><td>Round</td><td>1</td><td></td></tr>
     * <tr><td>Square</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int cpv_barStrokeCap=0x7f040079;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_barWidth=0x7f04007a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int cpv_blockCount=0x7f04007b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_blockScale=0x7f04007c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_decimalFormat=0x7f04007d;
    /**
     * Progress Bar
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>CCW</td><td>1</td><td></td></tr>
     * <tr><td>CW</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cpv_direction=0x7f04007e;
    /**
     * Background color
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_fillColor=0x7f04007f;
    /**
     * Inner Contour
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_innerContourColor=0x7f040080;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_innerContourSize=0x7f040081;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_maxValue=0x7f040082;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_maxValueAllowed=0x7f040083;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_minValueAllowed=0x7f040084;
    /**
     * Outer Contour
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_outerContourColor=0x7f040085;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_outerContourSize=0x7f040086;
    /**
     * Rim
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_rimColor=0x7f040087;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_rimWidth=0x7f040088;
    /**
     * Block
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_roundToBlock=0x7f040089;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_roundToWholeNumber=0x7f04008a;
    /**
     * Seek mode
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_seekMode=0x7f04008b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_showTextInSpinningMode=0x7f04008c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_showUnit=0x7f04008d;
    /**
     * Spinner
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_spin=0x7f04008e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_spinBarLength=0x7f04008f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_spinColor=0x7f040090;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_spinSpeed=0x7f040091;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int cpv_startAngle=0x7f040092;
    /**
     * Text
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_text=0x7f040093;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_textColor=0x7f040094;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Percent</td><td>1</td><td></td></tr>
     * <tr><td>Text</td><td>0</td><td></td></tr>
     * <tr><td>Value</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int cpv_textMode=0x7f040095;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_textScale=0x7f040096;
    /**
     * Text sizes
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_textSize=0x7f040097;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_textTypeface=0x7f040098;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_unit=0x7f040099;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_unitColor=0x7f04009a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>left_bottom</td><td>4</td><td></td></tr>
     * <tr><td>left_top</td><td>2</td><td></td></tr>
     * <tr><td>right_bottom</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cpv_unitPosition=0x7f04009b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_unitScale=0x7f04009c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_unitSize=0x7f04009d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_unitToTextScale=0x7f04009e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_unitTypeface=0x7f04009f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_value=0x7f0400a0;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f0400a1;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f0400a2;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f0400a3;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f0400a4;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f0400a5;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f0400a6;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f0400a7;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f0400a8;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f0400a9;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f0400aa;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableBottomCompat=0x7f0400ab;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableEndCompat=0x7f0400ac;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableLeftCompat=0x7f0400ad;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableRightCompat=0x7f0400ae;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f0400af;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableStartCompat=0x7f0400b0;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int drawableTint=0x7f0400b1;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int drawableTintMode=0x7f0400b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableTopCompat=0x7f0400b3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f0400b4;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f0400b5;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f0400b6;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f0400b7;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f0400b8;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f0400b9;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f0400ba;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>0</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int emptyVisibility=0x7f0400bb;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f0400bc;
    /**
     * Fade duration in milliseconds.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fadeDuration=0x7f0400bd;
    /**
     * A drawable to be be used as a failure image.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int failureImage=0x7f0400be;
    /**
     * Scale type of the failure image. Ignored if failureImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int failureImageScaleType=0x7f0400bf;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0400c0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0400c1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f0400c2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f0400c3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0400c4;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f0400c5;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0400c6;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0400c7;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0400c8;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0400c9;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0400ca;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0400cb;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0400cc;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0400cd;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f0400ce;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f0400cf;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f0400d0;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f0400d1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int gif=0x7f0400d2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int gifMoviewViewStyle=0x7f0400d3;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f0400d4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f0400d5;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f0400d6;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f0400d7;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0400d8;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0400d9;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0400da;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0400db;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0400dc;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int idnow_buttonColor=0x7f0400dd;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int idnow_cornerRadius=0x7f0400de;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int idnow_textColor=0x7f0400df;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0400e0;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0400e1;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0400e2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0400e3;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0400e4;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f0400e5;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f0400e6;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f0400e7;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f0400e8;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f0400e9;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f0400ea;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f0400eb;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int layout_constrainedHeight=0x7f0400ec;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int layout_constrainedWidth=0x7f0400ed;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintBaseline_creator=0x7f0400ee;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBaseline_toBaselineOf=0x7f0400ef;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintBottom_creator=0x7f0400f0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBottom_toBottomOf=0x7f0400f1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBottom_toTopOf=0x7f0400f2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_constraintCircle=0x7f0400f3;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintCircleAngle=0x7f0400f4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintCircleRadius=0x7f0400f5;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_constraintDimensionRatio=0x7f0400f6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintEnd_toEndOf=0x7f0400f7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintEnd_toStartOf=0x7f0400f8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintGuide_begin=0x7f0400f9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintGuide_end=0x7f0400fa;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintGuide_percent=0x7f0400fb;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_default=0x7f0400fc;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_max=0x7f0400fd;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_min=0x7f0400fe;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHeight_percent=0x7f0400ff;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHorizontal_bias=0x7f040100;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHorizontal_chainStyle=0x7f040101;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHorizontal_weight=0x7f040102;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintLeft_creator=0x7f040103;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintLeft_toLeftOf=0x7f040104;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintLeft_toRightOf=0x7f040105;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintRight_creator=0x7f040106;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintRight_toLeftOf=0x7f040107;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintRight_toRightOf=0x7f040108;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintStart_toEndOf=0x7f040109;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintStart_toStartOf=0x7f04010a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintTop_creator=0x7f04010b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintTop_toBottomOf=0x7f04010c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintTop_toTopOf=0x7f04010d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintVertical_bias=0x7f04010e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintVertical_chainStyle=0x7f04010f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintVertical_weight=0x7f040110;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_default=0x7f040111;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_max=0x7f040112;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_min=0x7f040113;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintWidth_percent=0x7f040114;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f040115;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_editor_absoluteX=0x7f040116;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_editor_absoluteY=0x7f040117;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginBottom=0x7f040118;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginEnd=0x7f040119;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginLeft=0x7f04011a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginRight=0x7f04011b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginStart=0x7f04011c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginTop=0x7f04011d;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f04011e;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f04011f;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     */
    public static final int layout_optimizationLevel=0x7f040120;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f040121;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f040122;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorMultipleAnimated=0x7f040123;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorSingleAnimated=0x7f040124;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f040125;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f040126;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f040127;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f040128;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f040129;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f04012a;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f04012b;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f04012c;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingEnd=0x7f04012d;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f04012e;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f04012f;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingStart=0x7f040130;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f040131;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f040132;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_autoPlay=0x7f040133;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_cacheComposition=0x7f040134;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int lottie_colorFilter=0x7f040135;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_enableMergePathsForKitKatAndAbove=0x7f040136;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int lottie_fallbackRes=0x7f040137;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int lottie_fileName=0x7f040138;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int lottie_imageAssetsFolder=0x7f040139;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_loop=0x7f04013a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lottie_progress=0x7f04013b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int lottie_rawRes=0x7f04013c;
    /**
     * These values must be kept in sync with the RenderMode enum
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>hardware</td><td>1</td><td></td></tr>
     * <tr><td>software</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lottie_renderMode=0x7f04013d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int lottie_repeatCount=0x7f04013e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>restart</td><td>1</td><td></td></tr>
     * <tr><td>reverse</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lottie_repeatMode=0x7f04013f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lottie_scale=0x7f040140;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lottie_speed=0x7f040141;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int lottie_url=0x7f040142;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f040143;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f040144;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f040145;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f040146;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f040147;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f040148;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f040149;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f04014a;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f04014b;
    /**
     * A drawable or color to be used as an overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int overlayImage=0x7f04014c;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f04014d;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f04014e;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f04014f;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f040150;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f040151;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f040152;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f040153;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paused=0x7f040154;
    /**
     * A drawable or color to be be used as a placeholder.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int placeholderImage=0x7f040155;
    /**
     * Scale type of the placeholder image. Ignored if placeholderImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int placeholderImageScaleType=0x7f040156;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f040157;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f040158;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f040159;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f04015a;
    /**
     * A drawable or color to be used as a pressed-state-overlay
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int pressedStateOverlayImage=0x7f04015b;
    /**
     * Progress bar Auto Rotate interval in milliseconds
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int progressBarAutoRotateInterval=0x7f04015c;
    /**
     * A drawable to be be used as a progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarImage=0x7f04015d;
    /**
     * Scale type of the progress bar. Ignored if progressBarImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int progressBarImageScaleType=0x7f04015e;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f04015f;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f040160;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f040161;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f040162;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f040163;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f040164;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f040165;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f040166;
    /**
     * A drawable to be be used as a retry image.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int retryImage=0x7f040167;
    /**
     * Scale type of the retry image. Ignored if retryImage is not specified.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int retryImageScaleType=0x7f040168;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f040169;
    /**
     * Round as circle.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundAsCircle=0x7f04016a;
    /**
     * Round the bottom-end edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomEnd=0x7f04016b;
    /**
     * Round the bottom-left corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomLeft=0x7f04016c;
    /**
     * Round the bottom-right corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomRight=0x7f04016d;
    /**
     * Round the bottom-start edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundBottomStart=0x7f04016e;
    /**
     * Round the top-end edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopEnd=0x7f04016f;
    /**
     * Round the top-left corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopLeft=0x7f040170;
    /**
     * Round the top-right corner. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopRight=0x7f040171;
    /**
     * Round the top-start edge. Ignored if roundAsCircle is used.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundTopStart=0x7f040172;
    /**
     * Round by overlying color.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int roundWithOverlayColor=0x7f040173;
    /**
     * Rounded corner radius. Ignored if roundAsCircle is used.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int roundedCornerRadius=0x7f040174;
    /**
     * Rounding border color
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int roundingBorderColor=0x7f040175;
    /**
     * Rounding border padding
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int roundingBorderPadding=0x7f040176;
    /**
     * Rounding border width
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int roundingBorderWidth=0x7f040177;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f040178;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f040179;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f04017a;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f04017b;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f04017c;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f04017d;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f04017e;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f04017f;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f040180;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f040181;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f040182;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f040183;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f040184;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f040185;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f040186;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f040187;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f040188;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f040189;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f04018a;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f04018b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int stroke_color=0x7f04018c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int stroke_width=0x7f04018d;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f04018e;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f04018f;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f040190;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f040191;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f040192;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f040193;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f040194;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f040195;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f040196;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f040197;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f040198;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f040199;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f04019a;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f04019b;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f04019c;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f04019d;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f04019e;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f04019f;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f0401a0;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f0401a1;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f0401a2;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f0401a3;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int textLocale=0x7f0401a4;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f0401a5;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f0401a6;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f0401a7;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f0401a8;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f0401a9;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f0401aa;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f0401ab;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f0401ac;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f0401ad;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f0401ae;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f0401af;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f0401b0;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f0401b1;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f0401b2;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f0401b3;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f0401b4;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f0401b5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f0401b6;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f0401b7;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f0401b8;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f0401b9;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f0401ba;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f0401bb;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f0401bc;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f0401bd;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f0401be;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f0401bf;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f0401c0;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f0401c1;
    /**
     * Aspect ratio (width / height) of the view, not necessarily of the images.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int viewAspectRatio=0x7f0401c2;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f0401c3;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f0401c4;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f0401c5;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f0401c6;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f0401c7;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f0401c8;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f0401c9;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f0401ca;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f0401cb;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f0401cc;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f0401cd;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f0401ce;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    public static final int abc_allow_stacked_button_bar=0x7f050001;
    public static final int abc_config_actionMenuItemAllCaps=0x7f050002;
    public static final int acra_enable_job_service=0x7f050003;
    public static final int acra_enable_legacy_service=0x7f050004;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060001;
    public static final int abc_btn_colored_borderless_text_material=0x7f060002;
    public static final int abc_btn_colored_text_material=0x7f060003;
    public static final int abc_color_highlight_material=0x7f060004;
    public static final int abc_hint_foreground_material_dark=0x7f060005;
    public static final int abc_hint_foreground_material_light=0x7f060006;
    public static final int abc_input_method_navigation_guard=0x7f060007;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060008;
    public static final int abc_primary_text_disable_only_material_light=0x7f060009;
    public static final int abc_primary_text_material_dark=0x7f06000a;
    public static final int abc_primary_text_material_light=0x7f06000b;
    public static final int abc_search_url_text=0x7f06000c;
    public static final int abc_search_url_text_normal=0x7f06000d;
    public static final int abc_search_url_text_pressed=0x7f06000e;
    public static final int abc_search_url_text_selected=0x7f06000f;
    public static final int abc_secondary_text_material_dark=0x7f060010;
    public static final int abc_secondary_text_material_light=0x7f060011;
    public static final int abc_tint_btn_checkable=0x7f060012;
    public static final int abc_tint_default=0x7f060013;
    public static final int abc_tint_edittext=0x7f060014;
    public static final int abc_tint_seek_thumb=0x7f060015;
    public static final int abc_tint_spinner=0x7f060016;
    public static final int abc_tint_switch_track=0x7f060017;
    public static final int accent_material_dark=0x7f060018;
    public static final int accent_material_light=0x7f060019;
    public static final int background_floating_material_dark=0x7f06001a;
    public static final int background_floating_material_light=0x7f06001b;
    public static final int background_material_dark=0x7f06001c;
    public static final int background_material_light=0x7f06001d;
    public static final int bright_foreground_disabled_material_dark=0x7f06001e;
    public static final int bright_foreground_disabled_material_light=0x7f06001f;
    public static final int bright_foreground_inverse_material_dark=0x7f060020;
    public static final int bright_foreground_inverse_material_light=0x7f060021;
    public static final int bright_foreground_material_dark=0x7f060022;
    public static final int bright_foreground_material_light=0x7f060023;
    public static final int button_material_dark=0x7f060024;
    public static final int button_material_light=0x7f060025;
    public static final int catalyst_logbox_background=0x7f060026;
    public static final int catalyst_redbox_background=0x7f060027;
    public static final int dim_foreground_disabled_material_dark=0x7f060028;
    public static final int dim_foreground_disabled_material_light=0x7f060029;
    public static final int dim_foreground_material_dark=0x7f06002a;
    public static final int dim_foreground_material_light=0x7f06002b;
    public static final int error_color_material_dark=0x7f06002c;
    public static final int error_color_material_light=0x7f06002d;
    public static final int foreground_material_dark=0x7f06002e;
    public static final int foreground_material_light=0x7f06002f;
    public static final int highlighted_text_material_dark=0x7f060030;
    public static final int highlighted_text_material_light=0x7f060031;
    public static final int idnow_additionaldoc_background=0x7f060032;
    public static final int idnow_background_abort=0x7f060033;
    public static final int idnow_black=0x7f060034;
    public static final int idnow_cancel_feedback_background=0x7f060035;
    public static final int idnow_colorAccent=0x7f060036;
    public static final int idnow_colorPrimary=0x7f060037;
    public static final int idnow_colorPrimaryDark=0x7f060038;
    public static final int idnow_color_primary_gray=0x7f060039;
    public static final int idnow_color_text=0x7f06003a;
    public static final int idnow_country_item=0x7f06003b;
    public static final int idnow_country_item_highlight=0x7f06003c;
    public static final int idnow_darkgrey_title=0x7f06003d;
    public static final int idnow_disable_button_color=0x7f06003e;
    public static final int idnow_green=0x7f06003f;
    public static final int idnow_grey_divider=0x7f060040;
    public static final int idnow_grey_text_ocr_plain=0x7f060041;
    public static final int idnow_light_gray=0x7f060042;
    public static final int idnow_loading_background=0x7f060043;
    public static final int idnow_message_background_color=0x7f060044;
    public static final int idnow_ocr_result_color_title=0x7f060045;
    public static final int idnow_ocr_result_rounded_background=0x7f060046;
    public static final int idnow_popup_background_color=0x7f060047;
    public static final int idnow_progress_end_color=0x7f060048;
    public static final int idnow_seach_field_bg=0x7f060049;
    public static final int idnow_semi_transparent=0x7f06004a;
    public static final int idnow_text_light_color=0x7f06004b;
    public static final int idnow_transparent=0x7f06004c;
    public static final int idnow_user_feedback_grey_border=0x7f06004d;
    public static final int idnow_user_feedback_image_background=0x7f06004e;
    public static final int idnow_user_input_grey_divider=0x7f06004f;
    public static final int idnow_user_input_text_color=0x7f060050;
    public static final int idnow_white=0x7f060051;
    public static final int idnow_zoom_background=0x7f060052;
    public static final int idnow_zoom_semi_transparent=0x7f060053;
    public static final int material_blue_grey_800=0x7f060054;
    public static final int material_blue_grey_900=0x7f060055;
    public static final int material_blue_grey_950=0x7f060056;
    public static final int material_deep_teal_200=0x7f060057;
    public static final int material_deep_teal_500=0x7f060058;
    public static final int material_grey_100=0x7f060059;
    public static final int material_grey_300=0x7f06005a;
    public static final int material_grey_50=0x7f06005b;
    public static final int material_grey_600=0x7f06005c;
    public static final int material_grey_800=0x7f06005d;
    public static final int material_grey_850=0x7f06005e;
    public static final int material_grey_900=0x7f06005f;
    public static final int notification_action_color_filter=0x7f060060;
    public static final int notification_icon_bg_color=0x7f060061;
    public static final int notification_material_background_media_default_color=0x7f060062;
    public static final int primary_dark_material_dark=0x7f060063;
    public static final int primary_dark_material_light=0x7f060064;
    public static final int primary_material_dark=0x7f060065;
    public static final int primary_material_light=0x7f060066;
    public static final int primary_text_default_material_dark=0x7f060067;
    public static final int primary_text_default_material_light=0x7f060068;
    public static final int primary_text_disabled_material_dark=0x7f060069;
    public static final int primary_text_disabled_material_light=0x7f06006a;
    public static final int ripple_material_dark=0x7f06006b;
    public static final int ripple_material_light=0x7f06006c;
    public static final int secondary_text_default_material_dark=0x7f06006d;
    public static final int secondary_text_default_material_light=0x7f06006e;
    public static final int secondary_text_disabled_material_dark=0x7f06006f;
    public static final int secondary_text_disabled_material_light=0x7f060070;
    public static final int switch_thumb_disabled_material_dark=0x7f060071;
    public static final int switch_thumb_disabled_material_light=0x7f060072;
    public static final int switch_thumb_material_dark=0x7f060073;
    public static final int switch_thumb_material_light=0x7f060074;
    public static final int switch_thumb_normal_material_dark=0x7f060075;
    public static final int switch_thumb_normal_material_light=0x7f060076;
    public static final int tooltip_background_dark=0x7f060077;
    public static final int tooltip_background_light=0x7f060078;
    public static final int zoom_alert_green=0x7f060079;
    public static final int zoom_blue=0x7f06007a;
    public static final int zoom_color=0x7f06007b;
    public static final int zoom_default_fingerprint_success=0x7f06007c;
    public static final int zoom_default_foreground=0x7f06007d;
    public static final int zoom_default_foreground_progress=0x7f06007e;
    public static final int zoom_default_foreground_results=0x7f06007f;
    public static final int zoom_default_tab_selected_background=0x7f060080;
    public static final int zoom_default_tab_selected_foreground=0x7f060081;
    public static final int zoom_default_tab_success_background=0x7f060082;
    public static final int zoom_default_tab_success_foreground=0x7f060083;
    public static final int zoom_default_tab_unselected_foreground=0x7f060084;
    public static final int zoom_full_black=0x7f060085;
    public static final int zoom_grey=0x7f060086;
    public static final int zoom_hint_black=0x7f060087;
    public static final int zoom_hint_white=0x7f060088;
    public static final int zoom_outline_shadow_dark=0x7f060089;
    public static final int zoom_outline_shadow_light=0x7f06008a;
    public static final int zoom_reason_background_black=0x7f06008b;
    public static final int zoom_settings=0x7f06008c;
    public static final int zoom_transparent=0x7f06008d;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    public static final int abc_action_bar_default_height_material=0x7f070002;
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    public static final int abc_action_bar_stacked_max_height=0x7f070009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000c;
    public static final int abc_action_button_min_height_material=0x7f07000d;
    public static final int abc_action_button_min_width_material=0x7f07000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f07000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f070010;
    public static final int abc_alert_dialog_button_dimen=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    public static final int abc_button_padding_vertical_material=0x7f070015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    public static final int abc_config_prefDialogWidth=0x7f070017;
    public static final int abc_control_corner_material=0x7f070018;
    public static final int abc_control_inset_material=0x7f070019;
    public static final int abc_control_padding_material=0x7f07001a;
    public static final int abc_dialog_corner_radius_material=0x7f07001b;
    public static final int abc_dialog_fixed_height_major=0x7f07001c;
    public static final int abc_dialog_fixed_height_minor=0x7f07001d;
    public static final int abc_dialog_fixed_width_major=0x7f07001e;
    public static final int abc_dialog_fixed_width_minor=0x7f07001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f070020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070021;
    public static final int abc_dialog_min_width_major=0x7f070022;
    public static final int abc_dialog_min_width_minor=0x7f070023;
    public static final int abc_dialog_padding_material=0x7f070024;
    public static final int abc_dialog_padding_top_material=0x7f070025;
    public static final int abc_dialog_title_divider_material=0x7f070026;
    public static final int abc_disabled_alpha_material_dark=0x7f070027;
    public static final int abc_disabled_alpha_material_light=0x7f070028;
    public static final int abc_dropdownitem_icon_width=0x7f070029;
    public static final int abc_dropdownitem_text_padding_left=0x7f07002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002d;
    public static final int abc_edit_text_inset_top_material=0x7f07002e;
    public static final int abc_floating_window_z=0x7f07002f;
    public static final int abc_list_item_height_large_material=0x7f070030;
    public static final int abc_list_item_height_material=0x7f070031;
    public static final int abc_list_item_height_small_material=0x7f070032;
    public static final int abc_list_item_padding_horizontal_material=0x7f070033;
    public static final int abc_panel_menu_list_width=0x7f070034;
    public static final int abc_progress_bar_height_material=0x7f070035;
    public static final int abc_search_view_preferred_height=0x7f070036;
    public static final int abc_search_view_preferred_width=0x7f070037;
    public static final int abc_seekbar_track_background_height_material=0x7f070038;
    public static final int abc_seekbar_track_progress_height_material=0x7f070039;
    public static final int abc_select_dialog_padding_start_material=0x7f07003a;
    public static final int abc_switch_padding=0x7f07003b;
    public static final int abc_text_size_body_1_material=0x7f07003c;
    public static final int abc_text_size_body_2_material=0x7f07003d;
    public static final int abc_text_size_button_material=0x7f07003e;
    public static final int abc_text_size_caption_material=0x7f07003f;
    public static final int abc_text_size_display_1_material=0x7f070040;
    public static final int abc_text_size_display_2_material=0x7f070041;
    public static final int abc_text_size_display_3_material=0x7f070042;
    public static final int abc_text_size_display_4_material=0x7f070043;
    public static final int abc_text_size_headline_material=0x7f070044;
    public static final int abc_text_size_large_material=0x7f070045;
    public static final int abc_text_size_medium_material=0x7f070046;
    public static final int abc_text_size_menu_header_material=0x7f070047;
    public static final int abc_text_size_menu_material=0x7f070048;
    public static final int abc_text_size_small_material=0x7f070049;
    public static final int abc_text_size_subhead_material=0x7f07004a;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f07004b;
    public static final int abc_text_size_title_material=0x7f07004c;
    public static final int abc_text_size_title_material_toolbar=0x7f07004d;
    public static final int activity_horizontal_margin=0x7f07004e;
    public static final int activity_vertical_margin=0x7f07004f;
    public static final int compat_button_inset_horizontal_material=0x7f070050;
    public static final int compat_button_inset_vertical_material=0x7f070051;
    public static final int compat_button_padding_horizontal_material=0x7f070052;
    public static final int compat_button_padding_vertical_material=0x7f070053;
    public static final int compat_control_corner_material=0x7f070054;
    public static final int compat_notification_large_icon_max_height=0x7f070055;
    public static final int compat_notification_large_icon_max_width=0x7f070056;
    public static final int disabled_alpha_material_dark=0x7f070057;
    public static final int disabled_alpha_material_light=0x7f070058;
    public static final int fastscroll_default_thickness=0x7f070059;
    public static final int fastscroll_margin=0x7f07005a;
    public static final int fastscroll_minimum_range=0x7f07005b;
    public static final int highlight_alpha_material_colored=0x7f07005c;
    public static final int highlight_alpha_material_dark=0x7f07005d;
    public static final int highlight_alpha_material_light=0x7f07005e;
    public static final int hint_alpha_material_dark=0x7f07005f;
    public static final int hint_alpha_material_light=0x7f070060;
    public static final int hint_pressed_alpha_material_dark=0x7f070061;
    public static final int hint_pressed_alpha_material_light=0x7f070062;
    public static final int idnow_analyzing_screen_message_margin_top=0x7f070063;
    public static final int idnow_analyzing_screen_spinner_height=0x7f070064;
    public static final int idnow_analyzing_screen_spinner_margin_top=0x7f070065;
    public static final int idnow_di_100dp=0x7f070066;
    public static final int idnow_di_10dp=0x7f070067;
    public static final int idnow_di_120dp=0x7f070068;
    public static final int idnow_di_12dp=0x7f070069;
    public static final int idnow_di_150dp=0x7f07006a;
    public static final int idnow_di_15dp=0x7f07006b;
    public static final int idnow_di_16dp=0x7f07006c;
    public static final int idnow_di_1dp=0x7f07006d;
    public static final int idnow_di_20dp=0x7f07006e;
    public static final int idnow_di_25dp=0x7f07006f;
    public static final int idnow_di_280dp=0x7f070070;
    public static final int idnow_di_2dp=0x7f070071;
    public static final int idnow_di_30dp=0x7f070072;
    public static final int idnow_di_35dp=0x7f070073;
    public static final int idnow_di_3dp=0x7f070074;
    public static final int idnow_di_40dp=0x7f070075;
    public static final int idnow_di_45dp=0x7f070076;
    public static final int idnow_di_4dp=0x7f070077;
    public static final int idnow_di_50dp=0x7f070078;
    public static final int idnow_di_5dp=0x7f070079;
    public static final int idnow_di_60dp=0x7f07007a;
    public static final int idnow_di_6dp=0x7f07007b;
    public static final int idnow_di_70dp=0x7f07007c;
    public static final int idnow_di_80dp=0x7f07007d;
    public static final int idnow_di_8dp=0x7f07007e;
    public static final int idnow_face_oval_height=0x7f07007f;
    public static final int idnow_face_oval_width=0x7f070080;
    public static final int idnow_frame_margin=0x7f070081;
    public static final int idnow_frame_small_item_height=0x7f070082;
    public static final int idnow_instruction_min_height=0x7f070083;
    public static final int idnow_instruction_padding=0x7f070084;
    public static final int idnow_intro_message_text_size=0x7f070085;
    public static final int idnow_ln_instruction_message=0x7f070086;
    public static final int idnow_ln_instruction_message_margin_top=0x7f070087;
    public static final int idnow_ln_instruction_message_padding_bottom=0x7f070088;
    public static final int idnow_ln_instruction_title=0x7f070089;
    public static final int idnow_manual_capture_message_text_size=0x7f07008a;
    public static final int idnow_manual_classification_list_country_height_percent=0x7f07008b;
    public static final int idnow_manual_classification_list_id_type_height_percent=0x7f07008c;
    public static final int idnow_manual_classification_margin_top=0x7f07008d;
    public static final int idnow_privacy_item_margin_top=0x7f07008e;
    public static final int idnow_ts_12=0x7f07008f;
    public static final int idnow_ts_14=0x7f070090;
    public static final int idnow_ts_16=0x7f070091;
    public static final int idnow_ts_18=0x7f070092;
    public static final int idnow_ts_20=0x7f070093;
    public static final int idnow_ts_22=0x7f070094;
    public static final int idnow_ts_24=0x7f070095;
    public static final int idnow_ts_25=0x7f070096;
    public static final int idnow_ts_26=0x7f070097;
    public static final int idnow_ts_30=0x7f070098;
    public static final int idnow_ts_text_instruction=0x7f070099;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f07009a;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f07009b;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f07009c;
    public static final int notification_action_icon_size=0x7f07009d;
    public static final int notification_action_text_size=0x7f07009e;
    public static final int notification_big_circle_margin=0x7f07009f;
    public static final int notification_content_margin_start=0x7f0700a0;
    public static final int notification_large_icon_height=0x7f0700a1;
    public static final int notification_large_icon_width=0x7f0700a2;
    public static final int notification_main_column_padding_top=0x7f0700a3;
    public static final int notification_media_narrow_margin=0x7f0700a4;
    public static final int notification_right_icon_size=0x7f0700a5;
    public static final int notification_right_side_padding_top=0x7f0700a6;
    public static final int notification_small_icon_background_padding=0x7f0700a7;
    public static final int notification_small_icon_size_as_large=0x7f0700a8;
    public static final int notification_subtext_size=0x7f0700a9;
    public static final int notification_top_pad=0x7f0700aa;
    public static final int notification_top_pad_large_text=0x7f0700ab;
    public static final int subtitle_corner_radius=0x7f0700ac;
    public static final int subtitle_outline_width=0x7f0700ad;
    public static final int subtitle_shadow_offset=0x7f0700ae;
    public static final int subtitle_shadow_radius=0x7f0700af;
    public static final int text_margin=0x7f0700b0;
    public static final int tooltip_corner_radius=0x7f0700b1;
    public static final int tooltip_horizontal_padding=0x7f0700b2;
    public static final int tooltip_margin=0x7f0700b3;
    public static final int tooltip_precise_anchor_extra_offset=0x7f0700b4;
    public static final int tooltip_precise_anchor_threshold=0x7f0700b5;
    public static final int tooltip_vertical_padding=0x7f0700b6;
    public static final int tooltip_y_offset_non_touch=0x7f0700b7;
    public static final int tooltip_y_offset_touch=0x7f0700b8;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080000;
    public static final int abc_action_bar_item_background_material=0x7f080001;
    public static final int abc_btn_borderless_material=0x7f080002;
    public static final int abc_btn_check_material=0x7f080003;
    public static final int abc_btn_check_material_anim=0x7f080004;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f080005;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f080006;
    public static final int abc_btn_colored_material=0x7f080007;
    public static final int abc_btn_default_mtrl_shape=0x7f080008;
    public static final int abc_btn_radio_material=0x7f080009;
    public static final int abc_btn_radio_material_anim=0x7f08000a;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f08000b;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f08000c;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f08000d;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f08000e;
    public static final int abc_cab_background_internal_bg=0x7f08000f;
    public static final int abc_cab_background_top_material=0x7f080010;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f080011;
    public static final int abc_control_background_material=0x7f080012;
    public static final int abc_dialog_material_background=0x7f080013;
    public static final int abc_edit_text_material=0x7f080014;
    public static final int abc_ic_ab_back_material=0x7f080015;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f080016;
    public static final int abc_ic_clear_material=0x7f080017;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f080018;
    public static final int abc_ic_go_search_api_material=0x7f080019;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f08001a;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f08001b;
    public static final int abc_ic_menu_overflow_material=0x7f08001c;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f08001d;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f08001e;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f08001f;
    public static final int abc_ic_search_api_material=0x7f080020;
    public static final int abc_ic_star_black_16dp=0x7f080021;
    public static final int abc_ic_star_black_36dp=0x7f080022;
    public static final int abc_ic_star_black_48dp=0x7f080023;
    public static final int abc_ic_star_half_black_16dp=0x7f080024;
    public static final int abc_ic_star_half_black_36dp=0x7f080025;
    public static final int abc_ic_star_half_black_48dp=0x7f080026;
    public static final int abc_ic_voice_search_api_material=0x7f080027;
    public static final int abc_item_background_holo_dark=0x7f080028;
    public static final int abc_item_background_holo_light=0x7f080029;
    public static final int abc_list_divider_material=0x7f08002a;
    public static final int abc_list_divider_mtrl_alpha=0x7f08002b;
    public static final int abc_list_focused_holo=0x7f08002c;
    public static final int abc_list_longpressed_holo=0x7f08002d;
    public static final int abc_list_pressed_holo_dark=0x7f08002e;
    public static final int abc_list_pressed_holo_light=0x7f08002f;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f080030;
    public static final int abc_list_selector_background_transition_holo_light=0x7f080031;
    public static final int abc_list_selector_disabled_holo_dark=0x7f080032;
    public static final int abc_list_selector_disabled_holo_light=0x7f080033;
    public static final int abc_list_selector_holo_dark=0x7f080034;
    public static final int abc_list_selector_holo_light=0x7f080035;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080036;
    public static final int abc_popup_background_mtrl_mult=0x7f080037;
    public static final int abc_ratingbar_indicator_material=0x7f080038;
    public static final int abc_ratingbar_material=0x7f080039;
    public static final int abc_ratingbar_small_material=0x7f08003a;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f08003b;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f08003c;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f08003d;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f08003e;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f08003f;
    public static final int abc_seekbar_thumb_material=0x7f080040;
    public static final int abc_seekbar_tick_mark_material=0x7f080041;
    public static final int abc_seekbar_track_material=0x7f080042;
    public static final int abc_spinner_mtrl_am_alpha=0x7f080043;
    public static final int abc_spinner_textfield_background_material=0x7f080044;
    public static final int abc_switch_thumb_material=0x7f080045;
    public static final int abc_switch_track_mtrl_alpha=0x7f080046;
    public static final int abc_tab_indicator_material=0x7f080047;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f080048;
    public static final int abc_text_cursor_material=0x7f080049;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f08004a;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f08004b;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f08004c;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f08004d;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f08004e;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f08004f;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f080050;
    public static final int abc_textfield_default_mtrl_alpha=0x7f080051;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f080052;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f080053;
    public static final int abc_textfield_search_material=0x7f080054;
    public static final int abc_vector_test=0x7f080055;
    public static final int appicon=0x7f080056;
    public static final int btn_checkbox_checked_mtrl=0x7f080057;
    public static final int btn_checkbox_checked_to_unchecked_mtrl_animation=0x7f080058;
    public static final int btn_checkbox_unchecked_mtrl=0x7f080059;
    public static final int btn_checkbox_unchecked_to_checked_mtrl_animation=0x7f08005a;
    public static final int btn_radio_off_mtrl=0x7f08005b;
    public static final int btn_radio_off_to_on_mtrl_animation=0x7f08005c;
    public static final int btn_radio_on_mtrl=0x7f08005d;
    public static final int btn_radio_on_to_off_mtrl_animation=0x7f08005e;
    public static final int country_ac=0x7f08005f;
    public static final int country_ad=0x7f080060;
    public static final int country_ae=0x7f080061;
    public static final int country_af=0x7f080062;
    public static final int country_ag=0x7f080063;
    public static final int country_ai=0x7f080064;
    public static final int country_al=0x7f080065;
    public static final int country_am=0x7f080066;
    public static final int country_an=0x7f080067;
    public static final int country_ao=0x7f080068;
    public static final int country_aq=0x7f080069;
    public static final int country_ar=0x7f08006a;
    public static final int country_as=0x7f08006b;
    public static final int country_at=0x7f08006c;
    public static final int country_au=0x7f08006d;
    public static final int country_aw=0x7f08006e;
    public static final int country_ax=0x7f08006f;
    public static final int country_az=0x7f080070;
    public static final int country_ba=0x7f080071;
    public static final int country_bb=0x7f080072;
    public static final int country_bd=0x7f080073;
    public static final int country_be=0x7f080074;
    public static final int country_bf=0x7f080075;
    public static final int country_bg=0x7f080076;
    public static final int country_bh=0x7f080077;
    public static final int country_bi=0x7f080078;
    public static final int country_bj=0x7f080079;
    public static final int country_bl=0x7f08007a;
    public static final int country_bm=0x7f08007b;
    public static final int country_bn=0x7f08007c;
    public static final int country_bo=0x7f08007d;
    public static final int country_bq=0x7f08007e;
    public static final int country_br=0x7f08007f;
    public static final int country_bs=0x7f080080;
    public static final int country_bt=0x7f080081;
    public static final int country_bv=0x7f080082;
    public static final int country_bw=0x7f080083;
    public static final int country_by=0x7f080084;
    public static final int country_bz=0x7f080085;
    public static final int country_ca=0x7f080086;
    public static final int country_cc=0x7f080087;
    public static final int country_cd=0x7f080088;
    public static final int country_cf=0x7f080089;
    public static final int country_cg=0x7f08008a;
    public static final int country_ch=0x7f08008b;
    public static final int country_ci=0x7f08008c;
    public static final int country_ck=0x7f08008d;
    public static final int country_cl=0x7f08008e;
    public static final int country_cm=0x7f08008f;
    public static final int country_cn=0x7f080090;
    public static final int country_co=0x7f080091;
    public static final int country_cr=0x7f080092;
    public static final int country_cu=0x7f080093;
    public static final int country_cv=0x7f080094;
    public static final int country_cw=0x7f080095;
    public static final int country_cx=0x7f080096;
    public static final int country_cy=0x7f080097;
    public static final int country_cz=0x7f080098;
    public static final int country_de=0x7f080099;
    public static final int country_dg=0x7f08009a;
    public static final int country_dj=0x7f08009b;
    public static final int country_dk=0x7f08009c;
    public static final int country_dm=0x7f08009d;
    public static final int country_do=0x7f08009e;
    public static final int country_dz=0x7f08009f;
    public static final int country_ea=0x7f0800a0;
    public static final int country_ec=0x7f0800a1;
    public static final int country_ee=0x7f0800a2;
    public static final int country_eg=0x7f0800a3;
    public static final int country_eh=0x7f0800a4;
    public static final int country_er=0x7f0800a5;
    public static final int country_es=0x7f0800a6;
    public static final int country_et=0x7f0800a7;
    public static final int country_fi=0x7f0800a8;
    public static final int country_fj=0x7f0800a9;
    public static final int country_fk=0x7f0800aa;
    public static final int country_fm=0x7f0800ab;
    public static final int country_fo=0x7f0800ac;
    public static final int country_fr=0x7f0800ad;
    public static final int country_ga=0x7f0800ae;
    public static final int country_gb=0x7f0800af;
    public static final int country_gd=0x7f0800b0;
    public static final int country_ge=0x7f0800b1;
    public static final int country_gf=0x7f0800b2;
    public static final int country_gg=0x7f0800b3;
    public static final int country_gh=0x7f0800b4;
    public static final int country_gi=0x7f0800b5;
    public static final int country_gl=0x7f0800b6;
    public static final int country_gm=0x7f0800b7;
    public static final int country_gn=0x7f0800b8;
    public static final int country_gp=0x7f0800b9;
    public static final int country_gq=0x7f0800ba;
    public static final int country_gr=0x7f0800bb;
    public static final int country_gs=0x7f0800bc;
    public static final int country_gt=0x7f0800bd;
    public static final int country_gu=0x7f0800be;
    public static final int country_gw=0x7f0800bf;
    public static final int country_gy=0x7f0800c0;
    public static final int country_hk=0x7f0800c1;
    public static final int country_hm=0x7f0800c2;
    public static final int country_hn=0x7f0800c3;
    public static final int country_hr=0x7f0800c4;
    public static final int country_ht=0x7f0800c5;
    public static final int country_hu=0x7f0800c6;
    public static final int country_ic=0x7f0800c7;
    public static final int country_id=0x7f0800c8;
    public static final int country_ie=0x7f0800c9;
    public static final int country_il=0x7f0800ca;
    public static final int country_im=0x7f0800cb;
    public static final int country_in=0x7f0800cc;
    public static final int country_io=0x7f0800cd;
    public static final int country_iq=0x7f0800ce;
    public static final int country_ir=0x7f0800cf;
    public static final int country_is=0x7f0800d0;
    public static final int country_it=0x7f0800d1;
    public static final int country_je=0x7f0800d2;
    public static final int country_jm=0x7f0800d3;
    public static final int country_jo=0x7f0800d4;
    public static final int country_jp=0x7f0800d5;
    public static final int country_ke=0x7f0800d6;
    public static final int country_kg=0x7f0800d7;
    public static final int country_kh=0x7f0800d8;
    public static final int country_ki=0x7f0800d9;
    public static final int country_km=0x7f0800da;
    public static final int country_kn=0x7f0800db;
    public static final int country_kp=0x7f0800dc;
    public static final int country_kr=0x7f0800dd;
    public static final int country_kw=0x7f0800de;
    public static final int country_ky=0x7f0800df;
    public static final int country_kz=0x7f0800e0;
    public static final int country_la=0x7f0800e1;
    public static final int country_lb=0x7f0800e2;
    public static final int country_lc=0x7f0800e3;
    public static final int country_li=0x7f0800e4;
    public static final int country_lk=0x7f0800e5;
    public static final int country_lr=0x7f0800e6;
    public static final int country_ls=0x7f0800e7;
    public static final int country_lt=0x7f0800e8;
    public static final int country_lu=0x7f0800e9;
    public static final int country_lv=0x7f0800ea;
    public static final int country_ly=0x7f0800eb;
    public static final int country_ma=0x7f0800ec;
    public static final int country_mc=0x7f0800ed;
    public static final int country_md=0x7f0800ee;
    public static final int country_me=0x7f0800ef;
    public static final int country_mf=0x7f0800f0;
    public static final int country_mg=0x7f0800f1;
    public static final int country_mh=0x7f0800f2;
    public static final int country_mk=0x7f0800f3;
    public static final int country_ml=0x7f0800f4;
    public static final int country_mm=0x7f0800f5;
    public static final int country_mn=0x7f0800f6;
    public static final int country_mo=0x7f0800f7;
    public static final int country_mp=0x7f0800f8;
    public static final int country_mq=0x7f0800f9;
    public static final int country_mr=0x7f0800fa;
    public static final int country_ms=0x7f0800fb;
    public static final int country_mt=0x7f0800fc;
    public static final int country_mu=0x7f0800fd;
    public static final int country_mv=0x7f0800fe;
    public static final int country_mw=0x7f0800ff;
    public static final int country_mx=0x7f080100;
    public static final int country_my=0x7f080101;
    public static final int country_mz=0x7f080102;
    public static final int country_na=0x7f080103;
    public static final int country_nc=0x7f080104;
    public static final int country_ne=0x7f080105;
    public static final int country_nf=0x7f080106;
    public static final int country_ng=0x7f080107;
    public static final int country_ni=0x7f080108;
    public static final int country_nl=0x7f080109;
    public static final int country_no=0x7f08010a;
    public static final int country_np=0x7f08010b;
    public static final int country_nr=0x7f08010c;
    public static final int country_nu=0x7f08010d;
    public static final int country_nz=0x7f08010e;
    public static final int country_om=0x7f08010f;
    public static final int country_pa=0x7f080110;
    public static final int country_pe=0x7f080111;
    public static final int country_pf=0x7f080112;
    public static final int country_pg=0x7f080113;
    public static final int country_ph=0x7f080114;
    public static final int country_pk=0x7f080115;
    public static final int country_pl=0x7f080116;
    public static final int country_pm=0x7f080117;
    public static final int country_pn=0x7f080118;
    public static final int country_pr=0x7f080119;
    public static final int country_ps=0x7f08011a;
    public static final int country_pt=0x7f08011b;
    public static final int country_pw=0x7f08011c;
    public static final int country_py=0x7f08011d;
    public static final int country_qa=0x7f08011e;
    public static final int country_re=0x7f08011f;
    public static final int country_ro=0x7f080120;
    public static final int country_rs=0x7f080121;
    public static final int country_ru=0x7f080122;
    public static final int country_rw=0x7f080123;
    public static final int country_sa=0x7f080124;
    public static final int country_sb=0x7f080125;
    public static final int country_sc=0x7f080126;
    public static final int country_sd=0x7f080127;
    public static final int country_se=0x7f080128;
    public static final int country_sg=0x7f080129;
    public static final int country_sh=0x7f08012a;
    public static final int country_si=0x7f08012b;
    public static final int country_sj=0x7f08012c;
    public static final int country_sk=0x7f08012d;
    public static final int country_sl=0x7f08012e;
    public static final int country_sm=0x7f08012f;
    public static final int country_sn=0x7f080130;
    public static final int country_so=0x7f080131;
    public static final int country_sr=0x7f080132;
    public static final int country_ss=0x7f080133;
    public static final int country_st=0x7f080134;
    public static final int country_sv=0x7f080135;
    public static final int country_sx=0x7f080136;
    public static final int country_sy=0x7f080137;
    public static final int country_sz=0x7f080138;
    public static final int country_ta=0x7f080139;
    public static final int country_tc=0x7f08013a;
    public static final int country_td=0x7f08013b;
    public static final int country_tf=0x7f08013c;
    public static final int country_tg=0x7f08013d;
    public static final int country_th=0x7f08013e;
    public static final int country_tj=0x7f08013f;
    public static final int country_tk=0x7f080140;
    public static final int country_tl=0x7f080141;
    public static final int country_tm=0x7f080142;
    public static final int country_tn=0x7f080143;
    public static final int country_to=0x7f080144;
    public static final int country_tr=0x7f080145;
    public static final int country_tt=0x7f080146;
    public static final int country_tv=0x7f080147;
    public static final int country_tw=0x7f080148;
    public static final int country_tz=0x7f080149;
    public static final int country_ua=0x7f08014a;
    public static final int country_ug=0x7f08014b;
    public static final int country_um=0x7f08014c;
    public static final int country_us=0x7f08014d;
    public static final int country_uy=0x7f08014e;
    public static final int country_uz=0x7f08014f;
    public static final int country_va=0x7f080150;
    public static final int country_vc=0x7f080151;
    public static final int country_ve=0x7f080152;
    public static final int country_vg=0x7f080153;
    public static final int country_vi=0x7f080154;
    public static final int country_vn=0x7f080155;
    public static final int country_vu=0x7f080156;
    public static final int country_wf=0x7f080157;
    public static final int country_ws=0x7f080158;
    public static final int country_xk=0x7f080159;
    public static final int country_ye=0x7f08015a;
    public static final int country_yt=0x7f08015b;
    public static final int country_za=0x7f08015c;
    public static final int country_zm=0x7f08015d;
    public static final int country_zw=0x7f08015e;
    public static final int error=0x7f08015f;
    public static final int ic_arrow_expand=0x7f080160;
    public static final int ic_arrow_left=0x7f080161;
    public static final int ic_baseline_arrow_forward=0x7f080162;
    public static final int ic_edit=0x7f080163;
    public static final int ic_hold_phone_still=0x7f080164;
    public static final int icon_loading=0x7f080165;
    public static final int idnow_additionaldoc_bg_border=0x7f080166;
    public static final int idnow_button_extra=0x7f080167;
    public static final int idnow_button_extra_disable=0x7f080168;
    public static final int idnow_button_extra_pressed=0x7f080169;
    public static final int idnow_button_extra_selector=0x7f08016a;
    public static final int idnow_button_primary_selector=0x7f08016b;
    public static final int idnow_checkmark_green=0x7f08016c;
    public static final int idnow_checkmark_icon=0x7f08016d;
    public static final int idnow_crash_sorry=0x7f08016e;
    public static final int idnow_dialog_border=0x7f08016f;
    public static final int idnow_finish_layout_border=0x7f080170;
    public static final int idnow_green_checkmark=0x7f080171;
    public static final int idnow_ic_arrow_face_left=0x7f080172;
    public static final int idnow_ic_arrow_face_right=0x7f080173;
    public static final int idnow_ic_close=0x7f080174;
    public static final int idnow_ic_face_check_oval=0x7f080175;
    public static final int idnow_ic_finish=0x7f080176;
    public static final int idnow_ic_icons_search=0x7f080177;
    public static final int idnow_ic_liveness_check_oval_success=0x7f080178;
    public static final int idnow_icon_flashlight_on=0x7f080179;
    public static final int idnow_icon_warning=0x7f08017a;
    public static final int idnow_id_scan_frame_dash=0x7f08017b;
    public static final int idnow_instruction_background_border=0x7f08017c;
    public static final int idnow_popup_background_border=0x7f08017d;
    public static final int idnow_popup_cancel_feedback_background=0x7f08017e;
    public static final int idnow_retake_selector=0x7f08017f;
    public static final int idnow_search_field_border=0x7f080180;
    public static final int idnow_semi_trans_border=0x7f080181;
    public static final int idnow_shadow=0x7f080182;
    public static final int idnow_shape_checkbox=0x7f080183;
    public static final int idnow_user_feedback_bg_border=0x7f080184;
    public static final int idnow_user_feedback_warning_background=0x7f080185;
    public static final int idnow_white_bg_border=0x7f080186;
    public static final int idnow_white_bg_border_grey=0x7f080187;
    public static final int notification_action_background=0x7f080188;
    public static final int notification_bg=0x7f080189;
    public static final int notification_bg_low=0x7f08018a;
    public static final int notification_bg_low_normal=0x7f08018b;
    public static final int notification_bg_low_pressed=0x7f08018c;
    public static final int notification_bg_normal=0x7f08018d;
    public static final int notification_bg_normal_pressed=0x7f08018e;
    public static final int notification_icon_background=0x7f08018f;
    public static final int notification_template_icon_bg=0x7f080190;
    public static final int notification_template_icon_low_bg=0x7f080191;
    public static final int notification_tile_bg=0x7f080192;
    public static final int notify_panel_notification_icon_bg=0x7f080193;
    public static final int progressbar_drawable=0x7f080194;
    public static final int redbox_top_border_background=0x7f080195;
    public static final int tooltip_frame_dark=0x7f080196;
    public static final int tooltip_frame_light=0x7f080197;
    public static final int warning=0x7f080198;
    public static final int zoom_animated_result_background=0x7f080199;
    public static final int zoom_animated_success_foreground=0x7f08019a;
    public static final int zoom_animated_unsuccess_foreground=0x7f08019b;
    public static final int zoom_background_border=0x7f08019c;
    public static final int zoom_button_background=0x7f08019d;
    public static final int zoom_button_disabled_background=0x7f08019e;
    public static final int zoom_button_highlight_background=0x7f08019f;
    public static final int zoom_button_text_state=0x7f0801a0;
    public static final int zoom_gradient=0x7f0801a1;
    public static final int zoom_idscan_capture_instructions_background=0x7f0801a2;
    public static final int zoom_idscan_review_instructions_background=0x7f0801a3;
    public static final int zoom_internal_active_torch=0x7f0801a4;
    public static final int zoom_internal_branding_logo_id_check=0x7f0801a5;
    public static final int zoom_internal_camera=0x7f0801a6;
    public static final int zoom_internal_cancel=0x7f0801a7;
    public static final int zoom_internal_ideal=0x7f0801a8;
    public static final int zoom_internal_inactive_torch=0x7f0801a9;
    public static final int zoom_internal_logo=0x7f0801aa;
    public static final int zoom_internal_your_app_logo=0x7f0801ab;
    public static final int zoom_logo_big=0x7f0801ac;
    public static final int zoom_oval_ideal=0x7f0801ad;
    public static final int zoom_progress_bar=0x7f0801ae;
    public static final int zoom_ready_header_background=0x7f0801af;
    public static final int zoom_ready_subtext_background=0x7f0801b0;
    public static final int zoom_result_background_vector_drawable=0x7f0801b1;
    public static final int zoom_static_result_background_vector_drawable=0x7f0801b2;
    public static final int zoom_static_success_foreground_vector_drawable=0x7f0801b3;
    public static final int zoom_static_unsuccess_foreground_vector_drawable=0x7f0801b4;
    public static final int zoom_success_foreground_vector_drawable=0x7f0801b5;
    public static final int zoom_unsuccess_foreground_vector_drawable=0x7f0801b6;
  }
  public static final class id {
    public static final int ALT=0x7f090000;
    public static final int Both=0x7f090001;
    public static final int Butt=0x7f090002;
    public static final int CCW=0x7f090003;
    public static final int CTRL=0x7f090004;
    public static final int CW=0x7f090005;
    public static final int ChasingDots=0x7f090006;
    public static final int Circle=0x7f090007;
    public static final int CubeGrid=0x7f090008;
    public static final int DoubleBounce=0x7f090009;
    public static final int End=0x7f09000a;
    public static final int FUNCTION=0x7f09000b;
    public static final int FadingCircle=0x7f09000c;
    public static final int FoldingCube=0x7f09000d;
    public static final int META=0x7f09000e;
    public static final int MultiplePulse=0x7f09000f;
    public static final int MultiplePulseRing=0x7f090010;
    public static final int None=0x7f090011;
    public static final int Percent=0x7f090012;
    public static final int Pulse=0x7f090013;
    public static final int PulseRing=0x7f090014;
    public static final int RotatingCircle=0x7f090015;
    public static final int RotatingPlane=0x7f090016;
    public static final int Round=0x7f090017;
    public static final int SHIFT=0x7f090018;
    public static final int SYM=0x7f090019;
    public static final int Square=0x7f09001a;
    public static final int Start=0x7f09001b;
    public static final int Text=0x7f09001c;
    public static final int ThreeBounce=0x7f09001d;
    public static final int Value=0x7f09001e;
    public static final int WanderingCubes=0x7f09001f;
    public static final int Wave=0x7f090020;
    public static final int abort_layout_root=0x7f090021;
    public static final int acceptPictureButton=0x7f090022;
    public static final int accessBottomText=0x7f090023;
    public static final int accessIcon=0x7f090024;
    public static final int accessImage=0x7f090025;
    public static final int accessTopText=0x7f090026;
    public static final int accessibility_action_clickable_span=0x7f090027;
    public static final int accessibility_actions=0x7f090028;
    public static final int accessibility_custom_action_0=0x7f090029;
    public static final int accessibility_custom_action_1=0x7f09002a;
    public static final int accessibility_custom_action_10=0x7f09002b;
    public static final int accessibility_custom_action_11=0x7f09002c;
    public static final int accessibility_custom_action_12=0x7f09002d;
    public static final int accessibility_custom_action_13=0x7f09002e;
    public static final int accessibility_custom_action_14=0x7f09002f;
    public static final int accessibility_custom_action_15=0x7f090030;
    public static final int accessibility_custom_action_16=0x7f090031;
    public static final int accessibility_custom_action_17=0x7f090032;
    public static final int accessibility_custom_action_18=0x7f090033;
    public static final int accessibility_custom_action_19=0x7f090034;
    public static final int accessibility_custom_action_2=0x7f090035;
    public static final int accessibility_custom_action_20=0x7f090036;
    public static final int accessibility_custom_action_21=0x7f090037;
    public static final int accessibility_custom_action_22=0x7f090038;
    public static final int accessibility_custom_action_23=0x7f090039;
    public static final int accessibility_custom_action_24=0x7f09003a;
    public static final int accessibility_custom_action_25=0x7f09003b;
    public static final int accessibility_custom_action_26=0x7f09003c;
    public static final int accessibility_custom_action_27=0x7f09003d;
    public static final int accessibility_custom_action_28=0x7f09003e;
    public static final int accessibility_custom_action_29=0x7f09003f;
    public static final int accessibility_custom_action_3=0x7f090040;
    public static final int accessibility_custom_action_30=0x7f090041;
    public static final int accessibility_custom_action_31=0x7f090042;
    public static final int accessibility_custom_action_4=0x7f090043;
    public static final int accessibility_custom_action_5=0x7f090044;
    public static final int accessibility_custom_action_6=0x7f090045;
    public static final int accessibility_custom_action_7=0x7f090046;
    public static final int accessibility_custom_action_8=0x7f090047;
    public static final int accessibility_custom_action_9=0x7f090048;
    public static final int accessibility_hint=0x7f090049;
    public static final int accessibility_label=0x7f09004a;
    public static final int accessibility_role=0x7f09004b;
    public static final int accessibility_state=0x7f09004c;
    public static final int accessibility_value=0x7f09004d;
    public static final int action0=0x7f09004e;
    public static final int action_bar=0x7f09004f;
    public static final int action_bar_activity_content=0x7f090050;
    public static final int action_bar_container=0x7f090051;
    public static final int action_bar_root=0x7f090052;
    public static final int action_bar_spinner=0x7f090053;
    public static final int action_bar_subtitle=0x7f090054;
    public static final int action_bar_title=0x7f090055;
    public static final int action_container=0x7f090056;
    public static final int action_context_bar=0x7f090057;
    public static final int action_divider=0x7f090058;
    public static final int action_image=0x7f090059;
    public static final int action_menu_divider=0x7f09005a;
    public static final int action_menu_presenter=0x7f09005b;
    public static final int action_mode_bar=0x7f09005c;
    public static final int action_mode_bar_stub=0x7f09005d;
    public static final int action_mode_close_button=0x7f09005e;
    public static final int action_text=0x7f09005f;
    public static final int actions=0x7f090060;
    public static final int activity_chooser_view_content=0x7f090061;
    public static final int activity_idnow_root=0x7f090062;
    public static final int add=0x7f090063;
    public static final int addition_address_root=0x7f090064;
    public static final int address_item_base_line=0x7f090065;
    public static final int address_item_field=0x7f090066;
    public static final int address_item_icon=0x7f090067;
    public static final int address_item_input=0x7f090068;
    public static final int address_item_title=0x7f090069;
    public static final int address_list_info=0x7f09006a;
    public static final int address_title=0x7f09006b;
    public static final int alertIcon=0x7f09006c;
    public static final int alertMessage=0x7f09006d;
    public static final int alertTitle=0x7f09006e;
    public static final int all=0x7f09006f;
    public static final int always=0x7f090070;
    public static final int animation_instruction=0x7f090071;
    public static final int arrow=0x7f090072;
    public static final int arrowsContainer=0x7f090073;
    public static final int async=0x7f090074;
    public static final int authContainer=0x7f090075;
    public static final int authReasonText=0x7f090076;
    public static final int automatic=0x7f090077;
    public static final int backButton=0x7f090078;
    public static final int backgroundColor=0x7f090079;
    public static final int backgroundCover=0x7f09007a;
    public static final int barrier=0x7f09007b;
    public static final int beginning=0x7f09007c;
    public static final int blocking=0x7f09007d;
    public static final int borderCover=0x7f09007e;
    public static final int border_overlay=0x7f09007f;
    public static final int bottom=0x7f090080;
    public static final int bottomLayout=0x7f090081;
    public static final int bottomTips=0x7f090082;
    public static final int brandingLogoBottom=0x7f090083;
    public static final int brandingLogoContainer=0x7f090084;
    public static final int btn_confirm=0x7f090085;
    public static final int btn_continue=0x7f090086;
    public static final int btn_reject=0x7f090087;
    public static final int buttonNotSelected=0x7f090088;
    public static final int buttonPanel=0x7f090089;
    public static final int buttonSelected=0x7f09008a;
    public static final int buttonStartIdent=0x7f09008b;
    public static final int button_continue=0x7f09008c;
    public static final int button_redo=0x7f09008d;
    public static final int cameraContainer=0x7f09008e;
    public static final int cancel=0x7f09008f;
    public static final int cancel_action=0x7f090090;
    public static final int cancel_button=0x7f090091;
    public static final int cancel_ident_button=0x7f090092;
    public static final int catalyst_redbox_title=0x7f090093;
    public static final int center=0x7f090094;
    public static final int centerContentFrameLayout=0x7f090095;
    public static final int centerContentView=0x7f090096;
    public static final int centerCrop=0x7f090097;
    public static final int centerInside=0x7f090098;
    public static final int center_horizontal=0x7f090099;
    public static final int center_vertical=0x7f09009a;
    public static final int chains=0x7f09009b;
    public static final int checkScreenDocumentHeader=0x7f09009c;
    public static final int checkbox=0x7f09009d;
    public static final int checked=0x7f09009e;
    public static final int chronometer=0x7f09009f;
    public static final int clip_horizontal=0x7f0900a0;
    public static final int clip_vertical=0x7f0900a1;
    public static final int collapseActionView=0x7f0900a2;
    public static final int complex_loading_description=0x7f0900a3;
    public static final int complex_loading_image=0x7f0900a4;
    public static final int complex_loading_title=0x7f0900a5;
    public static final int confirmation_title=0x7f0900a6;
    public static final int consentScreenHeader=0x7f0900a7;
    public static final int content=0x7f0900a8;
    public static final int contentLayout=0x7f0900a9;
    public static final int contentPanel=0x7f0900aa;
    public static final int continue_ident_button=0x7f0900ab;
    public static final int countrySelectionLayout=0x7f0900ac;
    public static final int country_divider=0x7f0900ad;
    public static final int country_item=0x7f0900ae;
    public static final int country_item_root=0x7f0900af;
    public static final int country_list_title=0x7f0900b0;
    public static final int country_search=0x7f0900b1;
    public static final int country_search_icon=0x7f0900b2;
    public static final int country_title=0x7f0900b3;
    public static final int custom=0x7f0900b4;
    public static final int customActivityIndicator=0x7f0900b5;
    public static final int customImageContent=0x7f0900b6;
    public static final int customLocationBackButton=0x7f0900b7;
    public static final int customPanel=0x7f0900b8;
    public static final int decor_content_parent=0x7f0900b9;
    public static final int default_activity_button=0x7f0900ba;
    public static final int dialog_button=0x7f0900bb;
    public static final int dimensions=0x7f0900bc;
    public static final int direct=0x7f0900bd;
    public static final int disableHome=0x7f0900be;
    public static final int divider=0x7f0900bf;
    public static final int document_type_title=0x7f0900c0;
    public static final int doneButton=0x7f0900c1;
    public static final int edit_query=0x7f0900c2;
    public static final int end=0x7f0900c3;
    public static final int end_padder=0x7f0900c4;
    public static final int expand_activities_button=0x7f0900c5;
    public static final int expandable_list=0x7f0900c6;
    public static final int expanded_menu=0x7f0900c7;
    public static final int eye_focus_dot=0x7f0900c8;
    public static final int face_oval_layout=0x7f0900c9;
    public static final int face_oval_success=0x7f0900ca;
    public static final int face_success_layout=0x7f0900cb;
    public static final int feedbackIconsHeader=0x7f0900cc;
    public static final int feedbackIconsHeaderCustom=0x7f0900cd;
    public static final int feedbackIconsLayout=0x7f0900ce;
    public static final int feedback_title=0x7f0900cf;
    public static final int feedback_why=0x7f0900d0;
    public static final int fill=0x7f0900d1;
    public static final int fill_horizontal=0x7f0900d2;
    public static final int fill_vertical=0x7f0900d3;
    public static final int finish_btn_close=0x7f0900d4;
    public static final int finish_btn_ok=0x7f0900d5;
    public static final int finish_button=0x7f0900d6;
    public static final int finish_imageView=0x7f0900d7;
    public static final int finish_message=0x7f0900d8;
    public static final int finish_msg=0x7f0900d9;
    public static final int finish_root=0x7f0900da;
    public static final int finish_title=0x7f0900db;
    public static final int fitBottomStart=0x7f0900dc;
    public static final int fitCenter=0x7f0900dd;
    public static final int fitEnd=0x7f0900de;
    public static final int fitStart=0x7f0900df;
    public static final int fitXY=0x7f0900e0;
    public static final int flashButton=0x7f0900e1;
    public static final int flashlight=0x7f0900e2;
    public static final int flipper_skip_empty_view_group_traversal=0x7f0900e3;
    public static final int flipper_skip_view_traversal=0x7f0900e4;
    public static final int focusCrop=0x7f0900e5;
    public static final int focusMessageContainer=0x7f0900e6;
    public static final int forever=0x7f0900e7;
    public static final int fps_text=0x7f0900e8;
    public static final int ft_root_layout=0x7f0900e9;
    public static final int god_layout=0x7f0900ea;
    public static final int gone=0x7f0900eb;
    public static final int group_divider=0x7f0900ec;
    public static final int group_title=0x7f0900ed;
    public static final int groups=0x7f0900ee;
    public static final int guidanceTransitionView=0x7f0900ef;
    public static final int hardware=0x7f0900f0;
    public static final int hello_title=0x7f0900f1;
    public static final int hold_phone_still_image=0x7f0900f2;
    public static final int hold_still_message=0x7f0900f3;
    public static final int hold_still_popup=0x7f0900f4;
    public static final int hologram_text=0x7f0900f5;
    public static final int home=0x7f0900f6;
    public static final int homeAsUp=0x7f0900f7;
    public static final int icon=0x7f0900f8;
    public static final int iconMessage1=0x7f0900f9;
    public static final int iconMessage2=0x7f0900fa;
    public static final int iconMessageCustom=0x7f0900fb;
    public static final int icon_group=0x7f0900fc;
    public static final int idCaptureFrameView=0x7f0900fd;
    public static final int idScanCameraContainer=0x7f0900fe;
    public static final int idScanCameraLayout=0x7f0900ff;
    public static final int idScanCameraTransitionView=0x7f090100;
    public static final int idScanCancelButton=0x7f090101;
    public static final int idScanCaptureInstructionsText=0x7f090102;
    public static final int idScanCroppedFrame=0x7f090103;
    public static final int idScanInstructionsContainer=0x7f090104;
    public static final int idScanInterfaceButtonLayout=0x7f090105;
    public static final int idScanInterfaceLayout=0x7f090106;
    public static final int idScanLayout=0x7f090107;
    public static final int idScanReviewInstructionsText=0x7f090108;
    public static final int idScanSelectionBrandingImage=0x7f090109;
    public static final int idScanSelectionBrandingImageLayout=0x7f09010a;
    public static final int idScanSelectionButtonLayout=0x7f09010b;
    public static final int idScanSelectionHeader=0x7f09010c;
    public static final int idScanTypeLayout=0x7f09010d;
    public static final int idScanTypeLayoutBackground=0x7f09010e;
    public static final int idScanTypeLayoutContent=0x7f09010f;
    public static final int id_continue=0x7f090110;
    public static final int id_document_divider=0x7f090111;
    public static final int id_list_privacy_root=0x7f090112;
    public static final int id_selection_continue=0x7f090113;
    public static final int id_selection_country_parent=0x7f090114;
    public static final int id_selection_country_title=0x7f090115;
    public static final int id_selection_document_parent=0x7f090116;
    public static final int id_selection_document_title=0x7f090117;
    public static final int id_selection_header=0x7f090118;
    public static final int id_selection_root=0x7f090119;
    public static final int id_selection_title=0x7f09011a;
    public static final int idcard_border=0x7f09011b;
    public static final int idealImageSlideshowView=0x7f09011c;
    public static final int idealOval=0x7f09011d;
    public static final int idealZoomImage=0x7f09011e;
    public static final int idealZoomImageBorder=0x7f09011f;
    public static final int idealZoomText=0x7f090120;
    public static final int idnow_checkmark=0x7f090121;
    public static final int idnow_close_button=0x7f090122;
    public static final int idnow_complex_loading_layout=0x7f090123;
    public static final int idnow_country_flag=0x7f090124;
    public static final int idnow_loading_layout=0x7f090125;
    public static final int idnow_success_text=0x7f090126;
    public static final int ifRoom=0x7f090127;
    public static final int image=0x7f090128;
    public static final int image_loading=0x7f090129;
    public static final int image_sorry=0x7f09012a;
    public static final int info=0x7f09012b;
    public static final int initialRetryHeader=0x7f09012c;
    public static final int initialRetrySubtext=0x7f09012d;
    public static final int instrucion_popup=0x7f09012e;
    public static final int instruction_arrow_left=0x7f09012f;
    public static final int instruction_arrow_right=0x7f090130;
    public static final int instruction_controller_layout=0x7f090131;
    public static final int instruction_layout=0x7f090132;
    public static final int instruction_message=0x7f090133;
    public static final int instruction_root=0x7f090134;
    public static final int instruction_title=0x7f090135;
    public static final int instructionsBackground=0x7f090136;
    public static final int intro_instruction_start=0x7f090137;
    public static final int intro_item_image=0x7f090138;
    public static final int intro_item_instruction=0x7f090139;
    public static final int intro_list_item_layout=0x7f09013a;
    public static final int intro_list_linear=0x7f09013b;
    public static final int intro_root=0x7f09013c;
    public static final int intro_title=0x7f09013d;
    public static final int invisible=0x7f09013e;
    public static final int italic=0x7f09013f;
    public static final int item_number=0x7f090140;
    public static final int item_title=0x7f090141;
    public static final int item_touch_helper_previous_elevation=0x7f090142;
    public static final int left=0x7f090143;
    public static final int left_bottom=0x7f090144;
    public static final int left_top=0x7f090145;
    public static final int line1=0x7f090146;
    public static final int line3=0x7f090147;
    public static final int listMode=0x7f090148;
    public static final int list_country=0x7f090149;
    public static final int list_divider_top=0x7f09014a;
    public static final int list_document_type=0x7f09014b;
    public static final int list_item=0x7f09014c;
    public static final int list_reasons=0x7f09014d;
    public static final int list_result=0x7f09014e;
    public static final int ln_layout_root=0x7f09014f;
    public static final int lottie_layer_name=0x7f090150;
    public static final int main_layout=0x7f090151;
    public static final int manual_capture=0x7f090152;
    public static final int media_actions=0x7f090153;
    public static final int message=0x7f090154;
    public static final int message_body_view=0x7f090155;
    public static final int middle=0x7f090156;
    public static final int msg=0x7f090157;
    public static final int multiply=0x7f090158;
    public static final int never=0x7f090159;
    public static final int no_button=0x7f09015a;
    public static final int none=0x7f09015b;
    public static final int normal=0x7f09015c;
    public static final int notification_background=0x7f09015d;
    public static final int notification_main_column=0x7f09015e;
    public static final int notification_main_column_container=0x7f09015f;
    public static final int ocr_id_cancel=0x7f090160;
    public static final int ocr_id_license_class_title=0x7f090161;
    public static final int ocr_id_ok=0x7f090162;
    public static final int ocr_id_text=0x7f090163;
    public static final int ocr_id_title=0x7f090164;
    public static final int ocr_result_body_root=0x7f090165;
    public static final int ocr_result_bottom=0x7f090166;
    public static final int ocr_result_buttons=0x7f090167;
    public static final int ocr_result_header=0x7f090168;
    public static final int ocr_result_root=0x7f090169;
    public static final int ocr_result_title=0x7f09016a;
    public static final int off=0x7f09016b;
    public static final int on=0x7f09016c;
    public static final int openTestUIButton=0x7f09016d;
    public static final int other_reason=0x7f09016e;
    public static final int outerContainer=0x7f09016f;
    public static final int overlayBackgroundView=0x7f090170;
    public static final int packed=0x7f090171;
    public static final int parent=0x7f090172;
    public static final int parentPanel=0x7f090173;
    public static final int passportButton=0x7f090174;
    public static final int percent=0x7f090175;
    public static final int photoIdButton=0x7f090176;
    public static final int preEnrollHeader=0x7f090177;
    public static final int preview_image=0x7f090178;
    public static final int privacy_item_body_checkbox=0x7f090179;
    public static final int progressBarLayout=0x7f09017a;
    public static final int progressFill=0x7f09017b;
    public static final int progressGlow=0x7f09017c;
    public static final int progressTextView=0x7f09017d;
    public static final int progress_circular=0x7f09017e;
    public static final int progress_horizontal=0x7f09017f;
    public static final int progressbar=0x7f090180;
    public static final int radio=0x7f090181;
    public static final int ratingBar=0x7f090182;
    public static final int react_test_id=0x7f090183;
    public static final int readyScreenContent=0x7f090184;
    public static final int readyScreenHeader=0x7f090185;
    public static final int readyScreenSubtext=0x7f090186;
    public static final int realtime_video=0x7f090187;
    public static final int reason_item=0x7f090188;
    public static final int reason_item_radio=0x7f090189;
    public static final int restart=0x7f09018a;
    public static final int restart_button=0x7f09018b;
    public static final int resultAnimationBackground=0x7f09018c;
    public static final int resultAnimationForeground=0x7f09018d;
    public static final int resultFrame=0x7f09018e;
    public static final int resultTextView=0x7f09018f;
    public static final int retakePictureButton=0x7f090190;
    public static final int retake_animation=0x7f090191;
    public static final int retake_layout=0x7f090192;
    public static final int retake_text=0x7f090193;
    public static final int reverse=0x7f090194;
    public static final int reviewButtonSeparator=0x7f090195;
    public static final int reviewButtonsContainer=0x7f090196;
    public static final int reviewImageView=0x7f090197;
    public static final int right=0x7f090198;
    public static final int right_bottom=0x7f090199;
    public static final int right_icon=0x7f09019a;
    public static final int right_side=0x7f09019b;
    public static final int right_top=0x7f09019c;
    public static final int rn_frame_file=0x7f09019d;
    public static final int rn_frame_method=0x7f09019e;
    public static final int rn_redbox_dismiss_button=0x7f09019f;
    public static final int rn_redbox_line_separator=0x7f0901a0;
    public static final int rn_redbox_loading_indicator=0x7f0901a1;
    public static final int rn_redbox_reload_button=0x7f0901a2;
    public static final int rn_redbox_report_button=0x7f0901a3;
    public static final int rn_redbox_report_label=0x7f0901a4;
    public static final int rn_redbox_stack=0x7f0901a5;
    public static final int scanningbar=0x7f0901a6;
    public static final int screen=0x7f0901a7;
    public static final int scrollIndicatorDown=0x7f0901a8;
    public static final int scrollIndicatorUp=0x7f0901a9;
    public static final int scrollView=0x7f0901aa;
    public static final int scroll_layout=0x7f0901ab;
    public static final int searchLayout=0x7f0901ac;
    public static final int search_badge=0x7f0901ad;
    public static final int search_bar=0x7f0901ae;
    public static final int search_button=0x7f0901af;
    public static final int search_close_btn=0x7f0901b0;
    public static final int search_edit_frame=0x7f0901b1;
    public static final int search_go_btn=0x7f0901b2;
    public static final int search_mag_icon=0x7f0901b3;
    public static final int search_plate=0x7f0901b4;
    public static final int search_src_text=0x7f0901b5;
    public static final int search_text=0x7f0901b6;
    public static final int search_voice_btn=0x7f0901b7;
    public static final int select_dialog_listview=0x7f0901b8;
    public static final int selfie_instruction_checkmark=0x7f0901b9;
    public static final int selfie_instruction_image=0x7f0901ba;
    public static final int selfie_instructions_layout_root=0x7f0901bb;
    public static final int selfie_instructions_text=0x7f0901bc;
    public static final int selfie_instructions_text_layout=0x7f0901bd;
    public static final int shortcut=0x7f0901be;
    public static final int showCustom=0x7f0901bf;
    public static final int showHome=0x7f0901c0;
    public static final int showTitle=0x7f0901c1;
    public static final int shutterEffectContainer=0x7f0901c2;
    public static final int sideBySideLayout=0x7f0901c3;
    public static final int signupContainer=0x7f0901c4;
    public static final int software=0x7f0901c5;
    public static final int spacer=0x7f0901c6;
    public static final int spinKitActivityIndicator=0x7f0901c7;
    public static final int spinner_text=0x7f0901c8;
    public static final int split_action_bar=0x7f0901c9;
    public static final int spread=0x7f0901ca;
    public static final int spread_inside=0x7f0901cb;
    public static final int src_atop=0x7f0901cc;
    public static final int src_in=0x7f0901cd;
    public static final int src_over=0x7f0901ce;
    public static final int standard=0x7f0901cf;
    public static final int start=0x7f0901d0;
    public static final int statusRoot=0x7f0901d1;
    public static final int status_bar_latest_event_content=0x7f0901d2;
    public static final int stop_layout=0x7f0901d3;
    public static final int stop_signal=0x7f0901d4;
    public static final int stop_text=0x7f0901d5;
    public static final int subZoomFrame=0x7f0901d6;
    public static final int submenuarrow=0x7f0901d7;
    public static final int submit_area=0x7f0901d8;
    public static final int tabMode=0x7f0901d9;
    public static final int tag_accessibility_actions=0x7f0901da;
    public static final int tag_accessibility_clickable_spans=0x7f0901db;
    public static final int tag_accessibility_heading=0x7f0901dc;
    public static final int tag_accessibility_pane_title=0x7f0901dd;
    public static final int tag_screen_reader_focusable=0x7f0901de;
    public static final int tag_transition_group=0x7f0901df;
    public static final int tag_unhandled_key_event_manager=0x7f0901e0;
    public static final int tag_unhandled_key_listeners=0x7f0901e1;
    public static final int takePictureButton=0x7f0901e2;
    public static final int tapToFocusMessageText=0x7f0901e3;
    public static final int text=0x7f0901e4;
    public static final int text2=0x7f0901e5;
    public static final int textSpacerNoButtons=0x7f0901e6;
    public static final int textSpacerNoTitle=0x7f0901e7;
    public static final int textTermsOfService=0x7f0901e8;
    public static final int textViewPrivacyPolicy=0x7f0901e9;
    public static final int text_retry=0x7f0901ea;
    public static final int text_sorry=0x7f0901eb;
    public static final int time=0x7f0901ec;
    public static final int title=0x7f0901ed;
    public static final int titleDividerNoCustom=0x7f0901ee;
    public static final int title_line=0x7f0901ef;
    public static final int title_template=0x7f0901f0;
    public static final int title_view=0x7f0901f1;
    public static final int top=0x7f0901f2;
    public static final int topPanel=0x7f0901f3;
    public static final int transitionView=0x7f0901f4;
    public static final int unchecked=0x7f0901f5;
    public static final int uniform=0x7f0901f6;
    public static final int up=0x7f0901f7;
    public static final int uploadProgressBar=0x7f0901f8;
    public static final int useLogo=0x7f0901f9;
    public static final int user_feedback_content_layout=0x7f0901fa;
    public static final int user_feedback_image=0x7f0901fb;
    public static final int user_feedback_image_layout=0x7f0901fc;
    public static final int user_feedback_message=0x7f0901fd;
    public static final int user_feedback_parent=0x7f0901fe;
    public static final int user_feedback_root_layout=0x7f0901ff;
    public static final int user_feedback_title=0x7f090200;
    public static final int user_input_root_layout=0x7f090201;
    public static final int verifying_text=0x7f090202;
    public static final int view_tag_instance_handle=0x7f090203;
    public static final int view_tag_native_id=0x7f090204;
    public static final int viewpager=0x7f090205;
    public static final int warning_button=0x7f090206;
    public static final int warning_layout_root=0x7f090207;
    public static final int warning_message=0x7f090208;
    public static final int withText=0x7f090209;
    public static final int wrap=0x7f09020a;
    public static final int wrap_content=0x7f09020b;
    public static final int yes_button=0x7f09020c;
    public static final int yourZoomImage=0x7f09020d;
    public static final int yourZoomImageBorder=0x7f09020e;
    public static final int yourZoomText=0x7f09020f;
    public static final int zoomBackButton=0x7f090210;
    public static final int zoomDialogActionButton=0x7f090211;
    public static final int zoomDialogBackground=0x7f090212;
    public static final int zoomDialogForeground=0x7f090213;
    public static final int zoomDialogHeader=0x7f090214;
    public static final int zoomDialogIconSubtext=0x7f090215;
    public static final int zoomDialogImage=0x7f090216;
    public static final int zoomDialogText1=0x7f090217;
    public static final int zoomDialogText2=0x7f090218;
    public static final int zoomDialogText3=0x7f090219;
    public static final int zoomDialogText4=0x7f09021a;
    public static final int zoomFeedbackContainer=0x7f09021b;
    public static final int zoomFeedbackText=0x7f09021c;
    public static final int zoomFrameShadowView=0x7f09021d;
    public static final int zoomIconLayout=0x7f09021e;
    public static final int zoomIntroLogo=0x7f09021f;
    public static final int zoomLogo=0x7f090220;
    public static final int zoomLogoContainer=0x7f090221;
    public static final int zoomLogoText=0x7f090222;
    public static final int zoomOval=0x7f090223;
    public static final int zoomProgressBar=0x7f090224;
    public static final int zoomResultBackground=0x7f090225;
    public static final int zoomResultContainer=0x7f090226;
    public static final int zoomResultLayout=0x7f090227;
    public static final int zoomSessionLayout=0x7f090228;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0a0000;
    public static final int abc_config_activityShortDur=0x7f0a0001;
    public static final int cancel_button_image_alpha=0x7f0a0002;
    public static final int config_tooltipAnimTime=0x7f0a0003;
    public static final int react_native_dev_server_port=0x7f0a0004;
    public static final int react_native_inspector_proxy_port=0x7f0a0005;
    public static final int status_bar_notification_info_maxnum=0x7f0a0006;
    public static final int zoom_path_duration=0x7f0a0007;
  }
  public static final class interpolator {
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_0=0x7f0b0000;
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_1=0x7f0b0001;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x7f0b0002;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x7f0b0003;
    public static final int btn_radio_to_off_mtrl_animation_interpolator_0=0x7f0b0004;
    public static final int btn_radio_to_on_mtrl_animation_interpolator_0=0x7f0b0005;
    public static final int fast_out_slow_in=0x7f0b0006;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0c0000;
    public static final int abc_action_bar_up_container=0x7f0c0001;
    public static final int abc_action_menu_item_layout=0x7f0c0002;
    public static final int abc_action_menu_layout=0x7f0c0003;
    public static final int abc_action_mode_bar=0x7f0c0004;
    public static final int abc_action_mode_close_item_material=0x7f0c0005;
    public static final int abc_activity_chooser_view=0x7f0c0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0c0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0c0008;
    public static final int abc_alert_dialog_material=0x7f0c0009;
    public static final int abc_alert_dialog_title_material=0x7f0c000a;
    public static final int abc_cascading_menu_item_layout=0x7f0c000b;
    public static final int abc_dialog_title_material=0x7f0c000c;
    public static final int abc_expanded_menu_layout=0x7f0c000d;
    public static final int abc_list_menu_item_checkbox=0x7f0c000e;
    public static final int abc_list_menu_item_icon=0x7f0c000f;
    public static final int abc_list_menu_item_layout=0x7f0c0010;
    public static final int abc_list_menu_item_radio=0x7f0c0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0c0012;
    public static final int abc_popup_menu_item_layout=0x7f0c0013;
    public static final int abc_screen_content_include=0x7f0c0014;
    public static final int abc_screen_simple=0x7f0c0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0c0016;
    public static final int abc_screen_toolbar=0x7f0c0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0c0018;
    public static final int abc_search_view=0x7f0c0019;
    public static final int abc_select_dialog_material=0x7f0c001a;
    public static final int abc_tooltip=0x7f0c001b;
    public static final int country_item_layout=0x7f0c001c;
    public static final int custom_dialog=0x7f0c001d;
    public static final int dev_loading_view=0x7f0c001e;
    public static final int document_type_group=0x7f0c001f;
    public static final int document_type_item=0x7f0c0020;
    public static final int face_instruction_layout=0x7f0c0021;
    public static final int fps_view=0x7f0c0022;
    public static final int fragment_country=0x7f0c0023;
    public static final int fragment_country_list=0x7f0c0024;
    public static final int fragment_document_type=0x7f0c0025;
    public static final int fragment_factec=0x7f0c0026;
    public static final int fragment_idnow_addition_adress=0x7f0c0027;
    public static final int fragment_idnow_intro=0x7f0c0028;
    public static final int fragment_idnow_list_country=0x7f0c0029;
    public static final int fragment_idnow_ln=0x7f0c002a;
    public static final int fragment_idnow_manual_selfie=0x7f0c002b;
    public static final int fragment_idnow_user_confirm=0x7f0c002c;
    public static final int fragment_idnow_user_feedback=0x7f0c002d;
    public static final int fragment_manual_classification=0x7f0c002e;
    public static final int fragment_manualcapture_doc=0x7f0c002f;
    public static final int fragment_warning_popup=0x7f0c0030;
    public static final int idnow_activity=0x7f0c0031;
    public static final int idnow_activity_crash_handling=0x7f0c0032;
    public static final int idnow_activity_privacy=0x7f0c0033;
    public static final int idnow_activity_with_test_god_button=0x7f0c0034;
    public static final int idnow_address_item_input_layout=0x7f0c0035;
    public static final int idnow_address_item_layout=0x7f0c0036;
    public static final int idnow_cancel_reason_item_layout=0x7f0c0037;
    public static final int idnow_close_button_layout=0x7f0c0038;
    public static final int idnow_complex_loading=0x7f0c0039;
    public static final int idnow_continue_layout=0x7f0c003a;
    public static final int idnow_fragment_analyzing=0x7f0c003b;
    public static final int idnow_fragment_cancel_feedback=0x7f0c003c;
    public static final int idnow_fragment_confirmation_popup=0x7f0c003d;
    public static final int idnow_fragment_finish=0x7f0c003e;
    public static final int idnow_fragment_finishdialog=0x7f0c003f;
    public static final int idnow_fragment_idselection=0x7f0c0040;
    public static final int idnow_fragment_ocr_result=0x7f0c0041;
    public static final int idnow_intro_list_item=0x7f0c0042;
    public static final int idnow_loading_layout=0x7f0c0043;
    public static final int idnow_manual_capture_message_layout=0x7f0c0044;
    public static final int idnow_ocr_result_footer_item=0x7f0c0045;
    public static final int idnow_ocr_result_header_item=0x7f0c0046;
    public static final int idnow_ocr_result_item_body=0x7f0c0047;
    public static final int idnow_popup_rating=0x7f0c0048;
    public static final int idnow_retake_layout=0x7f0c0049;
    public static final int idnow_spinner_item_layout=0x7f0c004a;
    public static final int ln_message_instruction_layout=0x7f0c004b;
    public static final int notification_action=0x7f0c004c;
    public static final int notification_action_tombstone=0x7f0c004d;
    public static final int notification_media_action=0x7f0c004e;
    public static final int notification_media_cancel_action=0x7f0c004f;
    public static final int notification_template_big_media=0x7f0c0050;
    public static final int notification_template_big_media_custom=0x7f0c0051;
    public static final int notification_template_big_media_narrow=0x7f0c0052;
    public static final int notification_template_big_media_narrow_custom=0x7f0c0053;
    public static final int notification_template_custom_big=0x7f0c0054;
    public static final int notification_template_icon_group=0x7f0c0055;
    public static final int notification_template_lines_media=0x7f0c0056;
    public static final int notification_template_media=0x7f0c0057;
    public static final int notification_template_media_custom=0x7f0c0058;
    public static final int notification_template_part_chronometer=0x7f0c0059;
    public static final int notification_template_part_time=0x7f0c005a;
    public static final int redbox_item_frame=0x7f0c005b;
    public static final int redbox_item_title=0x7f0c005c;
    public static final int redbox_view=0x7f0c005d;
    public static final int select_dialog_item_material=0x7f0c005e;
    public static final int select_dialog_multichoice_material=0x7f0c005f;
    public static final int select_dialog_singlechoice_material=0x7f0c0060;
    public static final int star_rating_layout=0x7f0c0061;
    public static final int support_simple_spinner_dropdown_item=0x7f0c0062;
    public static final int zoom_alert_dialog=0x7f0c0063;
    public static final int zoom_auth_activity=0x7f0c0064;
    public static final int zoom_dialog_fragment=0x7f0c0065;
    public static final int zoom_enroll_activity=0x7f0c0066;
    public static final int zoom_fragment=0x7f0c0067;
    public static final int zoom_fragment_initial_retry=0x7f0c0068;
    public static final int zoom_fragment_pre_enroll_center_content=0x7f0c0069;
    public static final int zoom_results_fragment=0x7f0c006a;
    public static final int zoom_status_fragment=0x7f0c006b;
  }
  public static final class mipmap {
    public static final int ic_launcher=0x7f0d0000;
    public static final int ic_launcher_round=0x7f0d0001;
  }
  public static final class raw {
    public static final int aid_adddoc_driverlic=0x7f0e0000;
    public static final int aid_adddoc_iddoc=0x7f0e0001;
    public static final int aid_adddoc_passport=0x7f0e0002;
    public static final int aid_adddoc_residence=0x7f0e0003;
    public static final int animation_checkbox=0x7f0e0004;
    public static final int animation_checkmark=0x7f0e0005;
    public static final int animation_close_button=0x7f0e0006;
    public static final int animation_finished=0x7f0e0007;
    public static final int animation_flashlight=0x7f0e0008;
    public static final int animation_front_id_zoom=0x7f0e0009;
    public static final int animation_intro_id_doc=0x7f0e000a;
    public static final int animation_intro_lighting=0x7f0e000b;
    public static final int animation_intro_selfie=0x7f0e000c;
    public static final int animation_loading=0x7f0e000d;
    public static final int animation_security_features=0x7f0e000e;
    public static final int animation_selfie_wink=0x7f0e000f;
    public static final int animation_ultility_bill=0x7f0e0010;
    public static final int back_id=0x7f0e0011;
    public static final int bank_doc=0x7f0e0012;
    public static final int camera_capture=0x7f0e0013;
    public static final int driver_license=0x7f0e0014;
    public static final int front_id=0x7f0e0015;
    public static final int head_turn=0x7f0e0016;
    public static final int left_arrow=0x7f0e0017;
    public static final int liveness_dot=0x7f0e0018;
    public static final int paper_id_back=0x7f0e0019;
    public static final int passport_id=0x7f0e001a;
    public static final int retake_btn=0x7f0e001b;
    public static final int right_arrow=0x7f0e001c;
    public static final int security_redcircle=0x7f0e001d;
    public static final int securityfeature=0x7f0e001e;
    public static final int stop_sign=0x7f0e001f;
  }
  public static final class string {
    public static final int abc_action_bar_home_description=0x7f0f0000;
    public static final int abc_action_bar_up_description=0x7f0f0001;
    public static final int abc_action_menu_overflow_description=0x7f0f0002;
    public static final int abc_action_mode_done=0x7f0f0003;
    public static final int abc_activity_chooser_view_see_all=0x7f0f0004;
    public static final int abc_activitychooserview_choose_application=0x7f0f0005;
    public static final int abc_capital_off=0x7f0f0006;
    public static final int abc_capital_on=0x7f0f0007;
    public static final int abc_menu_alt_shortcut_label=0x7f0f0008;
    public static final int abc_menu_ctrl_shortcut_label=0x7f0f0009;
    public static final int abc_menu_delete_shortcut_label=0x7f0f000a;
    public static final int abc_menu_enter_shortcut_label=0x7f0f000b;
    public static final int abc_menu_function_shortcut_label=0x7f0f000c;
    public static final int abc_menu_meta_shortcut_label=0x7f0f000d;
    public static final int abc_menu_shift_shortcut_label=0x7f0f000e;
    public static final int abc_menu_space_shortcut_label=0x7f0f000f;
    public static final int abc_menu_sym_shortcut_label=0x7f0f0010;
    public static final int abc_prepend_shortcut_label=0x7f0f0011;
    public static final int abc_search_hint=0x7f0f0012;
    public static final int abc_searchview_description_clear=0x7f0f0013;
    public static final int abc_searchview_description_query=0x7f0f0014;
    public static final int abc_searchview_description_search=0x7f0f0015;
    public static final int abc_searchview_description_submit=0x7f0f0016;
    public static final int abc_searchview_description_voice=0x7f0f0017;
    public static final int abc_shareactionprovider_share_with=0x7f0f0018;
    public static final int abc_shareactionprovider_share_with_application=0x7f0f0019;
    public static final int abc_toolbar_collapse_description=0x7f0f001a;
    public static final int alert_description=0x7f0f001b;
    public static final int app_name=0x7f0f001c;
    public static final int button_description=0x7f0f001d;
    public static final int catalyst_change_bundle_location=0x7f0f001e;
    public static final int catalyst_copy_button=0x7f0f001f;
    public static final int catalyst_debug=0x7f0f0020;
    public static final int catalyst_debug_chrome=0x7f0f0021;
    public static final int catalyst_debug_chrome_stop=0x7f0f0022;
    public static final int catalyst_debug_connecting=0x7f0f0023;
    public static final int catalyst_debug_error=0x7f0f0024;
    public static final int catalyst_debug_nuclide=0x7f0f0025;
    public static final int catalyst_debug_nuclide_error=0x7f0f0026;
    public static final int catalyst_debug_stop=0x7f0f0027;
    public static final int catalyst_dismiss_button=0x7f0f0028;
    public static final int catalyst_heap_capture=0x7f0f0029;
    public static final int catalyst_hot_reloading=0x7f0f002a;
    public static final int catalyst_hot_reloading_auto_disable=0x7f0f002b;
    public static final int catalyst_hot_reloading_auto_enable=0x7f0f002c;
    public static final int catalyst_hot_reloading_stop=0x7f0f002d;
    public static final int catalyst_inspector=0x7f0f002e;
    public static final int catalyst_loading_from_url=0x7f0f002f;
    public static final int catalyst_perf_monitor=0x7f0f0030;
    public static final int catalyst_perf_monitor_stop=0x7f0f0031;
    public static final int catalyst_reload=0x7f0f0032;
    public static final int catalyst_reload_button=0x7f0f0033;
    public static final int catalyst_reload_error=0x7f0f0034;
    public static final int catalyst_report_button=0x7f0f0035;
    public static final int catalyst_sample_profiler_disable=0x7f0f0036;
    public static final int catalyst_sample_profiler_enable=0x7f0f0037;
    public static final int catalyst_settings=0x7f0f0038;
    public static final int catalyst_settings_title=0x7f0f0039;
    public static final int combobox_description=0x7f0f003a;
    public static final int header_description=0x7f0f003b;
    public static final int idnow_crash_retry=0x7f0f003c;
    public static final int idnow_message_start_ident_failed=0x7f0f003d;
    public static final int idnow_network_connection=0x7f0f003e;
    public static final int idnow_ok=0x7f0f003f;
    public static final int idnow_restart=0x7f0f0040;
    public static final int idnow_sorry=0x7f0f0041;
    public static final int image_description=0x7f0f0042;
    public static final int imagebutton_description=0x7f0f0043;
    public static final int link_description=0x7f0f0044;
    public static final int menu_description=0x7f0f0045;
    public static final int menubar_description=0x7f0f0046;
    public static final int menuitem_description=0x7f0f0047;
    public static final int progressbar_description=0x7f0f0048;
    public static final int radiogroup_description=0x7f0f0049;
    public static final int rn_tab_description=0x7f0f004a;
    public static final int scrollbar_description=0x7f0f004b;
    public static final int search_description=0x7f0f004c;
    public static final int search_menu_title=0x7f0f004d;
    public static final int spinbutton_description=0x7f0f004e;
    public static final int state_busy_description=0x7f0f004f;
    public static final int state_collapsed_description=0x7f0f0050;
    public static final int state_expanded_description=0x7f0f0051;
    public static final int state_mixed_description=0x7f0f0052;
    public static final int state_off_description=0x7f0f0053;
    public static final int state_on_description=0x7f0f0054;
    public static final int status_bar_notification_info_overflow=0x7f0f0055;
    public static final int summary_description=0x7f0f0056;
    public static final int tablist_description=0x7f0f0057;
    public static final int timer_description=0x7f0f0058;
    public static final int toolbar_description=0x7f0f0059;
    public static final int zoom_accessibility_cancel_button=0x7f0f005a;
    public static final int zoom_accessibility_torch_button=0x7f0f005b;
    public static final int zoom_action_accept_photo=0x7f0f005c;
    public static final int zoom_action_im_ready=0x7f0f005d;
    public static final int zoom_action_ok=0x7f0f005e;
    public static final int zoom_action_retake_photo=0x7f0f005f;
    public static final int zoom_action_select_id_card=0x7f0f0060;
    public static final int zoom_action_select_passport=0x7f0f0061;
    public static final int zoom_action_take_photo=0x7f0f0062;
    public static final int zoom_camera_permission_enable_camera=0x7f0f0063;
    public static final int zoom_camera_permission_header=0x7f0f0064;
    public static final int zoom_camera_permission_launch_settings=0x7f0f0065;
    public static final int zoom_camera_permission_message_auth=0x7f0f0066;
    public static final int zoom_camera_permission_message_enroll=0x7f0f0067;
    public static final int zoom_feedback_center_face=0x7f0f0068;
    public static final int zoom_feedback_face_not_found=0x7f0f0069;
    public static final int zoom_feedback_face_not_looking_straight_ahead=0x7f0f006a;
    public static final int zoom_feedback_face_not_upright=0x7f0f006b;
    public static final int zoom_feedback_hold_steady=0x7f0f006c;
    public static final int zoom_feedback_move_phone_away=0x7f0f006d;
    public static final int zoom_feedback_move_phone_closer=0x7f0f006e;
    public static final int zoom_feedback_move_phone_even_closer=0x7f0f006f;
    public static final int zoom_feedback_move_phone_to_eye_level=0x7f0f0070;
    public static final int zoom_feedback_use_even_lighting=0x7f0f0071;
    public static final int zoom_idscan_capture_hold_steady_message=0x7f0f0072;
    public static final int zoom_idscan_capture_id_card_back_instruction_message=0x7f0f0073;
    public static final int zoom_idscan_capture_id_card_front_instruction_message=0x7f0f0074;
    public static final int zoom_idscan_capture_passport_instruction_message=0x7f0f0075;
    public static final int zoom_idscan_capture_tap_to_focus_message=0x7f0f0076;
    public static final int zoom_idscan_review_id_card_back_instruction_message=0x7f0f0077;
    public static final int zoom_idscan_review_id_card_front_instruction_message=0x7f0f0078;
    public static final int zoom_idscan_review_passport_instruction_message=0x7f0f0079;
    public static final int zoom_idscan_type_selection_header=0x7f0f007a;
    public static final int zoom_instructions_header_ready=0x7f0f007b;
    public static final int zoom_instructions_message_ready=0x7f0f007c;
    public static final int zoom_result_facemap_upload_message=0x7f0f007d;
    public static final int zoom_result_idscan_unsuccess_message=0x7f0f007e;
    public static final int zoom_result_idscan_upload_message=0x7f0f007f;
    public static final int zoom_result_success_message=0x7f0f0080;
    public static final int zoom_retry_header=0x7f0f0081;
    public static final int zoom_retry_ideal_image_label=0x7f0f0082;
    public static final int zoom_retry_instruction_message_1=0x7f0f0083;
    public static final int zoom_retry_instruction_message_2=0x7f0f0084;
    public static final int zoom_retry_instruction_message_3=0x7f0f0085;
    public static final int zoom_retry_subheader_message=0x7f0f0086;
    public static final int zoom_retry_your_image_label=0x7f0f0087;
    public static final int zoom_sdk_icon_attention_fill=0x7f0f0088;
    public static final int zoom_sdk_icon_camera_fill=0x7f0f0089;
    public static final int zoom_sdk_icon_caution=0x7f0f008a;
    public static final int zoom_sdk_icon_check=0x7f0f008b;
    public static final int zoom_sdk_icon_close=0x7f0f008c;
    public static final int zoom_sdk_icon_close_circle=0x7f0f008d;
    public static final int zoom_sdk_icon_close_circle_fill=0x7f0f008e;
    public static final int zoom_sdk_icon_fingerprint=0x7f0f008f;
    public static final int zoom_sdk_icon_icon_unlock=0x7f0f0090;
    public static final int zoom_sdk_icon_info=0x7f0f0091;
    public static final int zoom_sdk_icon_keypad=0x7f0f0092;
    public static final int zoom_sdk_icon_left=0x7f0f0093;
    public static final int zoom_sdk_icon_light=0x7f0f0094;
    public static final int zoom_sdk_icon_light_fill=0x7f0f0095;
    public static final int zoom_sdk_icon_lock=0x7f0f0096;
    public static final int zoom_sdk_icon_mid_enroll_glasses=0x7f0f0097;
    public static final int zoom_sdk_icon_moon=0x7f0f0098;
    public static final int zoom_sdk_icon_moon_fill=0x7f0f0099;
    public static final int zoom_sdk_icon_one_circle=0x7f0f009a;
    public static final int zoom_sdk_icon_phone_check_fill=0x7f0f009b;
    public static final int zoom_sdk_icon_phone_zoom=0x7f0f009c;
    public static final int zoom_sdk_icon_redo=0x7f0f009d;
    public static final int zoom_sdk_icon_selfie=0x7f0f009e;
    public static final int zoom_sdk_icon_settings=0x7f0f009f;
    public static final int zoom_sdk_icon_three_circle=0x7f0f00a0;
    public static final int zoom_sdk_icon_thumbs_up_fill=0x7f0f00a1;
    public static final int zoom_sdk_icon_two_circle=0x7f0f00a2;
    public static final int zoom_sdk_icon_undetermined=0x7f0f00a3;
    public static final int zoom_sdk_icon_user_alert=0x7f0f00a4;
    public static final int zoom_sdk_icon_user_fail_fill=0x7f0f00a5;
    public static final int zoom_sdk_icon_user_retry=0x7f0f00a6;
    public static final int zoom_sdk_icon_wifi_icon=0x7f0f00a7;
    public static final int zoom_sdk_icon_zoom_logo_dev=0x7f0f00a8;
    public static final int zoom_sdk_icon_zoom_logo_prod=0x7f0f00a9;
  }
  public static final class style {
    public static final int AlertDialog_AppCompat=0x7f100000;
    public static final int AlertDialog_AppCompat_Light=0x7f100001;
    public static final int Animation_AppCompat_Dialog=0x7f100002;
    public static final int Animation_AppCompat_DropDownUp=0x7f100003;
    public static final int Animation_AppCompat_Tooltip=0x7f100004;
    public static final int Animation_Catalyst_LogBox=0x7f100005;
    public static final int Animation_Catalyst_RedBox=0x7f100006;
    public static final int AppTheme=0x7f100007;
    public static final int Base_AlertDialog_AppCompat=0x7f100008;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f100009;
    public static final int Base_Animation_AppCompat_Dialog=0x7f10000a;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f10000b;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f10000c;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f10000d;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f10000e;
    public static final int Base_TextAppearance_AppCompat=0x7f10000f;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f100010;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f100011;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f100012;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f100013;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f100014;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f100015;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f100016;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f100017;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f100018;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f100019;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f10001a;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f10001b;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f10001c;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f10001d;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f10001e;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f10001f;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f100020;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f100021;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f100022;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f100023;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f100024;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f100025;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f100026;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f100027;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f100028;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f100029;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f10002a;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f10002b;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f10002c;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f10002d;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f10002e;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f10002f;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f100030;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f100031;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f100032;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f100033;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f100034;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f100035;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f100036;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f100037;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f100038;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f100039;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f10003a;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f10003b;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f10003c;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f10003d;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f10003e;
    public static final int Base_Theme_AppCompat=0x7f10003f;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f100040;
    public static final int Base_Theme_AppCompat_Dialog=0x7f100041;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f100042;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f100043;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f100044;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f100045;
    public static final int Base_Theme_AppCompat_Light=0x7f100046;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f100047;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f100048;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f100049;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f10004a;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f10004b;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f10004c;
    public static final int Base_ThemeOverlay_AppCompat=0x7f10004d;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f10004e;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f10004f;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f100050;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f100051;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f100052;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f100053;
    public static final int Base_V21_Theme_AppCompat=0x7f100054;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f100055;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f100056;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f100057;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f100058;
    public static final int Base_V22_Theme_AppCompat=0x7f100059;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f10005a;
    public static final int Base_V23_Theme_AppCompat=0x7f10005b;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f10005c;
    public static final int Base_V26_Theme_AppCompat=0x7f10005d;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f10005e;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f10005f;
    public static final int Base_V28_Theme_AppCompat=0x7f100060;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f100061;
    public static final int Base_V7_Theme_AppCompat=0x7f100062;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f100063;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f100064;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f100065;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f100066;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f100067;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f100068;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f100069;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f10006a;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f10006b;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f10006c;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f10006d;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f10006e;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f10006f;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f100070;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f100071;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f100072;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f100073;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f100074;
    public static final int Base_Widget_AppCompat_Button=0x7f100075;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f100076;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f100077;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f100078;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f100079;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f10007a;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f10007b;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f10007c;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f10007d;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f10007e;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f10007f;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f100080;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f100081;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f100082;
    public static final int Base_Widget_AppCompat_EditText=0x7f100083;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f100084;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f100085;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f100086;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f100087;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f100088;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f100089;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f10008a;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f10008b;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f10008c;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f10008d;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f10008e;
    public static final int Base_Widget_AppCompat_ListView=0x7f10008f;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f100090;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f100091;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f100092;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f100093;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f100094;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f100095;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f100096;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f100097;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f100098;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f100099;
    public static final int Base_Widget_AppCompat_SearchView=0x7f10009a;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f10009b;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f10009c;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f10009d;
    public static final int Base_Widget_AppCompat_Spinner=0x7f10009e;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f10009f;
    public static final int Base_Widget_AppCompat_TextView=0x7f1000a0;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1000a1;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1000a2;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1000a3;
    public static final int CalendarDatePickerDialog=0x7f1000a4;
    public static final int CalendarDatePickerStyle=0x7f1000a5;
    public static final int ClockTimePickerDialog=0x7f1000a6;
    public static final int ClockTimePickerStyle=0x7f1000a7;
    public static final int DialogAnimationFade=0x7f1000a8;
    public static final int DialogAnimationSlide=0x7f1000a9;
    public static final int IDNowDialog=0x7f1000aa;
    public static final int IDNowFullScreen=0x7f1000ab;
    public static final int IDNowNoActionBar=0x7f1000ac;
    public static final int IDnowTextViewCommon=0x7f1000ad;
    public static final int Platform_AppCompat=0x7f1000ae;
    public static final int Platform_AppCompat_Light=0x7f1000af;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f1000b0;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f1000b1;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f1000b2;
    public static final int Platform_V21_AppCompat=0x7f1000b3;
    public static final int Platform_V21_AppCompat_Light=0x7f1000b4;
    public static final int Platform_V25_AppCompat=0x7f1000b5;
    public static final int Platform_V25_AppCompat_Light=0x7f1000b6;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f1000b7;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f1000b8;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f1000b9;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f1000ba;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f1000bb;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f1000bc;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f1000bd;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f1000be;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f1000bf;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f1000c0;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f1000c1;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f1000c2;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f1000c3;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f1000c4;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f1000c5;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f1000c6;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f1000c7;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f1000c8;
    public static final int SpinKitView=0x7f1000c9;
    public static final int SpinKitView_ChasingDots=0x7f1000ca;
    public static final int SpinKitView_Circle=0x7f1000cb;
    public static final int SpinKitView_CubeGrid=0x7f1000cc;
    public static final int SpinKitView_DoubleBounce=0x7f1000cd;
    public static final int SpinKitView_FadingCircle=0x7f1000ce;
    public static final int SpinKitView_FoldingCube=0x7f1000cf;
    public static final int SpinKitView_Large=0x7f1000d0;
    public static final int SpinKitView_Large_ChasingDots=0x7f1000d1;
    public static final int SpinKitView_Large_Circle=0x7f1000d2;
    public static final int SpinKitView_Large_CubeGrid=0x7f1000d3;
    public static final int SpinKitView_Large_DoubleBounce=0x7f1000d4;
    public static final int SpinKitView_Large_FadingCircle=0x7f1000d5;
    public static final int SpinKitView_Large_FoldingCube=0x7f1000d6;
    public static final int SpinKitView_Large_MultiplePulse=0x7f1000d7;
    public static final int SpinKitView_Large_MultiplePulseRing=0x7f1000d8;
    public static final int SpinKitView_Large_Pulse=0x7f1000d9;
    public static final int SpinKitView_Large_PulseRing=0x7f1000da;
    public static final int SpinKitView_Large_RotatingCircle=0x7f1000db;
    public static final int SpinKitView_Large_RotatingPlane=0x7f1000dc;
    public static final int SpinKitView_Large_ThreeBounce=0x7f1000dd;
    public static final int SpinKitView_Large_WanderingCubes=0x7f1000de;
    public static final int SpinKitView_Large_Wave=0x7f1000df;
    public static final int SpinKitView_MultiplePulse=0x7f1000e0;
    public static final int SpinKitView_MultiplePulseRing=0x7f1000e1;
    public static final int SpinKitView_Pulse=0x7f1000e2;
    public static final int SpinKitView_PulseRing=0x7f1000e3;
    public static final int SpinKitView_RotatingCircle=0x7f1000e4;
    public static final int SpinKitView_RotatingPlane=0x7f1000e5;
    public static final int SpinKitView_Small=0x7f1000e6;
    public static final int SpinKitView_Small_ChasingDots=0x7f1000e7;
    public static final int SpinKitView_Small_Circle=0x7f1000e8;
    public static final int SpinKitView_Small_CubeGrid=0x7f1000e9;
    public static final int SpinKitView_Small_DoubleBounce=0x7f1000ea;
    public static final int SpinKitView_Small_FadingCircle=0x7f1000eb;
    public static final int SpinKitView_Small_FoldingCube=0x7f1000ec;
    public static final int SpinKitView_Small_MultiplePulse=0x7f1000ed;
    public static final int SpinKitView_Small_MultiplePulseRing=0x7f1000ee;
    public static final int SpinKitView_Small_Pulse=0x7f1000ef;
    public static final int SpinKitView_Small_PulseRing=0x7f1000f0;
    public static final int SpinKitView_Small_RotatingCircle=0x7f1000f1;
    public static final int SpinKitView_Small_RotatingPlane=0x7f1000f2;
    public static final int SpinKitView_Small_ThreeBounce=0x7f1000f3;
    public static final int SpinKitView_Small_WanderingCubes=0x7f1000f4;
    public static final int SpinKitView_Small_Wave=0x7f1000f5;
    public static final int SpinKitView_ThreeBounce=0x7f1000f6;
    public static final int SpinKitView_WanderingCubes=0x7f1000f7;
    public static final int SpinKitView_Wave=0x7f1000f8;
    public static final int SpinnerDatePickerDialog=0x7f1000f9;
    public static final int SpinnerDatePickerStyle=0x7f1000fa;
    public static final int SpinnerTimePickerDialog=0x7f1000fb;
    public static final int SpinnerTimePickerStyle=0x7f1000fc;
    public static final int TextAppearance_AppCompat=0x7f1000fd;
    public static final int TextAppearance_AppCompat_Body1=0x7f1000fe;
    public static final int TextAppearance_AppCompat_Body2=0x7f1000ff;
    public static final int TextAppearance_AppCompat_Button=0x7f100100;
    public static final int TextAppearance_AppCompat_Caption=0x7f100101;
    public static final int TextAppearance_AppCompat_Display1=0x7f100102;
    public static final int TextAppearance_AppCompat_Display2=0x7f100103;
    public static final int TextAppearance_AppCompat_Display3=0x7f100104;
    public static final int TextAppearance_AppCompat_Display4=0x7f100105;
    public static final int TextAppearance_AppCompat_Headline=0x7f100106;
    public static final int TextAppearance_AppCompat_Inverse=0x7f100107;
    public static final int TextAppearance_AppCompat_Large=0x7f100108;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f100109;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f10010a;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f10010b;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f10010c;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f10010d;
    public static final int TextAppearance_AppCompat_Medium=0x7f10010e;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f10010f;
    public static final int TextAppearance_AppCompat_Menu=0x7f100110;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f100111;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f100112;
    public static final int TextAppearance_AppCompat_Small=0x7f100113;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f100114;
    public static final int TextAppearance_AppCompat_Subhead=0x7f100115;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f100116;
    public static final int TextAppearance_AppCompat_Title=0x7f100117;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f100118;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f100119;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f10011a;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f10011b;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f10011c;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f10011d;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f10011e;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f10011f;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f100120;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f100121;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f100122;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f100123;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f100124;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f100125;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f100126;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f100127;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f100128;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f100129;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f10012a;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f10012b;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f10012c;
    public static final int TextAppearance_Compat_Notification=0x7f10012d;
    public static final int TextAppearance_Compat_Notification_Info=0x7f10012e;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f10012f;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f100130;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f100131;
    public static final int TextAppearance_Compat_Notification_Media=0x7f100132;
    public static final int TextAppearance_Compat_Notification_Time=0x7f100133;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f100134;
    public static final int TextAppearance_Compat_Notification_Title=0x7f100135;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f100136;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f100137;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f100138;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f100139;
    public static final int Theme=0x7f10013a;
    public static final int Theme_AppCompat=0x7f10013b;
    public static final int Theme_AppCompat_CompactMenu=0x7f10013c;
    public static final int Theme_AppCompat_DayNight=0x7f10013d;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f10013e;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f10013f;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f100140;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f100141;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f100142;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f100143;
    public static final int Theme_AppCompat_Dialog=0x7f100144;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f100145;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f100146;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f100147;
    public static final int Theme_AppCompat_Light=0x7f100148;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f100149;
    public static final int Theme_AppCompat_Light_Dialog=0x7f10014a;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f10014b;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f10014c;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f10014d;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f10014e;
    public static final int Theme_AppCompat_NoActionBar=0x7f10014f;
    public static final int Theme_AppCompat_Translucent=0x7f100150;
    public static final int Theme_Catalyst=0x7f100151;
    public static final int Theme_Catalyst_LogBox=0x7f100152;
    public static final int Theme_Catalyst_RedBox=0x7f100153;
    public static final int Theme_FullScreenDialog=0x7f100154;
    public static final int Theme_FullScreenDialogAnimatedFade=0x7f100155;
    public static final int Theme_FullScreenDialogAnimatedSlide=0x7f100156;
    public static final int Theme_ReactNative_AppCompat_Light=0x7f100157;
    public static final int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen=0x7f100158;
    public static final int ThemeOverlay_AppCompat=0x7f100159;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f10015a;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f10015b;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f10015c;
    public static final int ThemeOverlay_AppCompat_DayNight=0x7f10015d;
    public static final int ThemeOverlay_AppCompat_DayNight_ActionBar=0x7f10015e;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f10015f;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f100160;
    public static final int ThemeOverlay_AppCompat_Light=0x7f100161;
    public static final int Widget_AppCompat_ActionBar=0x7f100162;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f100163;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f100164;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f100165;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f100166;
    public static final int Widget_AppCompat_ActionButton=0x7f100167;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f100168;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f100169;
    public static final int Widget_AppCompat_ActionMode=0x7f10016a;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f10016b;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f10016c;
    public static final int Widget_AppCompat_Button=0x7f10016d;
    public static final int Widget_AppCompat_Button_Borderless=0x7f10016e;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f10016f;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f100170;
    public static final int Widget_AppCompat_Button_Colored=0x7f100171;
    public static final int Widget_AppCompat_Button_Small=0x7f100172;
    public static final int Widget_AppCompat_ButtonBar=0x7f100173;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f100174;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f100175;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f100176;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f100177;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f100178;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f100179;
    public static final int Widget_AppCompat_EditText=0x7f10017a;
    public static final int Widget_AppCompat_ImageButton=0x7f10017b;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f10017c;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f10017d;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f10017e;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f10017f;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f100180;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f100181;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f100182;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f100183;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f100184;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f100185;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f100186;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f100187;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f100188;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f100189;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f10018a;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f10018b;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f10018c;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f10018d;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f10018e;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f10018f;
    public static final int Widget_AppCompat_Light_SearchView=0x7f100190;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f100191;
    public static final int Widget_AppCompat_ListMenuView=0x7f100192;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f100193;
    public static final int Widget_AppCompat_ListView=0x7f100194;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f100195;
    public static final int Widget_AppCompat_ListView_Menu=0x7f100196;
    public static final int Widget_AppCompat_PopupMenu=0x7f100197;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f100198;
    public static final int Widget_AppCompat_PopupWindow=0x7f100199;
    public static final int Widget_AppCompat_ProgressBar=0x7f10019a;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f10019b;
    public static final int Widget_AppCompat_RatingBar=0x7f10019c;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f10019d;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f10019e;
    public static final int Widget_AppCompat_SearchView=0x7f10019f;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f1001a0;
    public static final int Widget_AppCompat_SeekBar=0x7f1001a1;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f1001a2;
    public static final int Widget_AppCompat_Spinner=0x7f1001a3;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f1001a4;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f1001a5;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f1001a6;
    public static final int Widget_AppCompat_TextView=0x7f1001a7;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f1001a8;
    public static final int Widget_AppCompat_Toolbar=0x7f1001a9;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f1001aa;
    public static final int Widget_Compat_NotificationActionContainer=0x7f1001ab;
    public static final int Widget_Compat_NotificationActionText=0x7f1001ac;
    public static final int Widget_GifMoviewView=0x7f1001ad;
    public static final int Widget_Support_CoordinatorLayout=0x7f1001ae;
    public static final int redboxButton=0x7f1001af;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.autoidentreactsample:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.autoidentreactsample:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.autoidentreactsample:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.autoidentreactsample:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.autoidentreactsample:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.autoidentreactsample:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.autoidentreactsample:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.autoidentreactsample:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.autoidentreactsample:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.autoidentreactsample:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.autoidentreactsample:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.autoidentreactsample:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.autoidentreactsample:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.autoidentreactsample:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.autoidentreactsample:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.autoidentreactsample:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.autoidentreactsample:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.autoidentreactsample:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.autoidentreactsample:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.autoidentreactsample:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.autoidentreactsample:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.autoidentreactsample:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.autoidentreactsample:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.autoidentreactsample:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.autoidentreactsample:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.autoidentreactsample:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.autoidentreactsample:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.autoidentreactsample:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.autoidentreactsample:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f040037, 0x7f040039, 0x7f04003a, 0x7f040067, 
      0x7f040068, 0x7f040069, 0x7f04006a, 0x7f04006b, 
      0x7f04006c, 0x7f0400a1, 0x7f0400a6, 0x7f0400a7, 
      0x7f0400ba, 0x7f0400d5, 0x7f0400d6, 0x7f0400d7, 
      0x7f0400d8, 0x7f0400d9, 0x7f0400e1, 0x7f0400e4, 
      0x7f040131, 0x7f040149, 0x7f040158, 0x7f04015f, 
      0x7f040160, 0x7f040190, 0x7f040193, 0x7f0401af, 
      0x7f0401b8
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.autoidentreactsample:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.autoidentreactsample:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.autoidentreactsample:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.autoidentreactsample:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.autoidentreactsample:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.autoidentreactsample:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f040037, 0x7f040039, 0x7f040054, 0x7f0400d5, 
      0x7f040193, 0x7f0401b8
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.autoidentreactsample:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.autoidentreactsample:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f0400bc, 0x7f0400e2
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.autoidentreactsample:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.autoidentreactsample:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.autoidentreactsample:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.autoidentreactsample:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.autoidentreactsample:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.autoidentreactsample:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.autoidentreactsample:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f040048, 0x7f040049, 0x7f040126, 
      0x7f040127, 0x7f040146, 0x7f040181, 0x7f040182
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.autoidentreactsample:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.autoidentreactsample:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.autoidentreactsample:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f040188, 0x7f0401ad, 0x7f0401ae
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.autoidentreactsample:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.autoidentreactsample:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.autoidentreactsample:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f0401aa, 0x7f0401ab, 0x7f0401ac
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.autoidentreactsample:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.autoidentreactsample:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.autoidentreactsample:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.autoidentreactsample:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.autoidentreactsample:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.autoidentreactsample:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.autoidentreactsample:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.autoidentreactsample:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.autoidentreactsample:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.autoidentreactsample:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.autoidentreactsample:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.autoidentreactsample:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.autoidentreactsample:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.autoidentreactsample:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.autoidentreactsample:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.autoidentreactsample:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.autoidentreactsample:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.autoidentreactsample:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.autoidentreactsample:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.autoidentreactsample:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f040032, 0x7f040033, 0x7f040034, 
      0x7f040035, 0x7f040036, 0x7f0400ab, 0x7f0400ac, 
      0x7f0400ad, 0x7f0400ae, 0x7f0400b0, 0x7f0400b1, 
      0x7f0400b2, 0x7f0400b3, 0x7f0400c5, 0x7f0400c7, 
      0x7f0400cf, 0x7f0400e6, 0x7f040121, 0x7f040199, 
      0x7f0401a4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableBottomCompat
     */
    public static final int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableEndCompat
     */
    public static final int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableLeftCompat
     */
    public static final int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableRightCompat
     */
    public static final int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableStartCompat
     */
    public static final int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableTint
     */
    public static final int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:drawableTintMode
     */
    public static final int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:drawableTopCompat
     */
    public static final int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontVariationSettings
     */
    public static final int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:textLocale
     */
    public static final int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.autoidentreactsample:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.autoidentreactsample:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.autoidentreactsample:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.autoidentreactsample:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.autoidentreactsample:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.autoidentreactsample:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.autoidentreactsample:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.autoidentreactsample:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.autoidentreactsample:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.autoidentreactsample:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.autoidentreactsample:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.autoidentreactsample:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.autoidentreactsample:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.autoidentreactsample:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.autoidentreactsample:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.autoidentreactsample:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.autoidentreactsample:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.autoidentreactsample:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.autoidentreactsample:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.autoidentreactsample:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.autoidentreactsample:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.autoidentreactsample:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.autoidentreactsample:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.autoidentreactsample:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.autoidentreactsample:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.autoidentreactsample:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.autoidentreactsample:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.autoidentreactsample:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.autoidentreactsample:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.autoidentreactsample:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.autoidentreactsample:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.autoidentreactsample:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.autoidentreactsample:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.autoidentreactsample:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.autoidentreactsample:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.autoidentreactsample:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.autoidentreactsample:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.autoidentreactsample:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.autoidentreactsample:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.autoidentreactsample:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.autoidentreactsample:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.autoidentreactsample:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.autoidentreactsample:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.autoidentreactsample:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.autoidentreactsample:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.autoidentreactsample:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.autoidentreactsample:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.autoidentreactsample:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.autoidentreactsample:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.autoidentreactsample:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.autoidentreactsample:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.autoidentreactsample:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.autoidentreactsample:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.autoidentreactsample:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.autoidentreactsample:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.autoidentreactsample:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.autoidentreactsample:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.autoidentreactsample:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.autoidentreactsample:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.autoidentreactsample:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.autoidentreactsample:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.autoidentreactsample:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.autoidentreactsample:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.autoidentreactsample:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.autoidentreactsample:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.autoidentreactsample:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.autoidentreactsample:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.autoidentreactsample:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.autoidentreactsample:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.autoidentreactsample:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.autoidentreactsample:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.autoidentreactsample:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.autoidentreactsample:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.autoidentreactsample:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.autoidentreactsample:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.autoidentreactsample:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.autoidentreactsample:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.autoidentreactsample:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.autoidentreactsample:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.autoidentreactsample:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.autoidentreactsample:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.autoidentreactsample:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.autoidentreactsample:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.autoidentreactsample:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.autoidentreactsample:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.autoidentreactsample:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.autoidentreactsample:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.autoidentreactsample:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.autoidentreactsample:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.autoidentreactsample:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.autoidentreactsample:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.autoidentreactsample:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.autoidentreactsample:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.autoidentreactsample:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.autoidentreactsample:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.autoidentreactsample:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.autoidentreactsample:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.autoidentreactsample:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.autoidentreactsample:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.autoidentreactsample:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.autoidentreactsample:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.autoidentreactsample:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.autoidentreactsample:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.autoidentreactsample:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.autoidentreactsample:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.autoidentreactsample:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.autoidentreactsample:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.autoidentreactsample:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.autoidentreactsample:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.autoidentreactsample:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.autoidentreactsample:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.autoidentreactsample:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.autoidentreactsample:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.autoidentreactsample:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.autoidentreactsample:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.autoidentreactsample:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.autoidentreactsample:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.autoidentreactsample:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.autoidentreactsample:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.autoidentreactsample:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.autoidentreactsample:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.autoidentreactsample:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.autoidentreactsample:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f040003, 0x7f040004, 
      0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008, 
      0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c, 
      0x7f04000d, 0x7f04000e, 0x7f04000f, 0x7f040011, 
      0x7f040012, 0x7f040013, 0x7f040014, 0x7f040015, 
      0x7f040016, 0x7f040017, 0x7f040018, 0x7f040019, 
      0x7f04001a, 0x7f04001b, 0x7f04001c, 0x7f04001d, 
      0x7f04001e, 0x7f04001f, 0x7f040020, 0x7f040021, 
      0x7f040024, 0x7f040028, 0x7f040029, 0x7f04002a, 
      0x7f04002b, 0x7f040031, 0x7f040040, 0x7f040041, 
      0x7f040042, 0x7f040043, 0x7f040044, 0x7f040045, 
      0x7f04004a, 0x7f04004b, 0x7f04004f, 0x7f040051, 
      0x7f040058, 0x7f040059, 0x7f04005a, 0x7f04005b, 
      0x7f04005c, 0x7f04005d, 0x7f04005e, 0x7f04005f, 
      0x7f040060, 0x7f040061, 0x7f04006d, 0x7f0400a3, 
      0x7f0400a4, 0x7f0400a5, 0x7f0400a8, 0x7f0400aa, 
      0x7f0400b5, 0x7f0400b6, 0x7f0400b7, 0x7f0400b8, 
      0x7f0400b9, 0x7f0400d7, 0x7f0400e0, 0x7f040122, 
      0x7f040123, 0x7f040124, 0x7f040125, 0x7f040128, 
      0x7f040129, 0x7f04012a, 0x7f04012b, 0x7f04012c, 
      0x7f04012d, 0x7f04012e, 0x7f04012f, 0x7f040130, 
      0x7f040151, 0x7f040152, 0x7f040153, 0x7f040157, 
      0x7f040159, 0x7f040163, 0x7f040164, 0x7f040165, 
      0x7f040166, 0x7f04017a, 0x7f04017b, 0x7f04017c, 
      0x7f04017d, 0x7f040185, 0x7f040186, 0x7f040197, 
      0x7f04019a, 0x7f04019b, 0x7f04019c, 0x7f04019d, 
      0x7f04019e, 0x7f04019f, 0x7f0401a0, 0x7f0401a1, 
      0x7f0401a2, 0x7f0401a3, 0x7f0401b9, 0x7f0401ba, 
      0x7f0401bb, 0x7f0401bc, 0x7f0401c3, 0x7f0401c5, 
      0x7f0401c6, 0x7f0401c7, 0x7f0401c8, 0x7f0401c9, 
      0x7f0401ca, 0x7f0401cb, 0x7f0401cc, 0x7f0401cd, 
      0x7f0401ce
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=59;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=60;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=62;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=63;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=64;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=65;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=66;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=67;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=68;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=69;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=70;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=71;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listChoiceIndicatorMultipleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated=72;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listChoiceIndicatorSingleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated=73;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=74;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=76;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=77;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=78;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=79;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemPaddingEnd
     */
    public static final int AppCompatTheme_listPreferredItemPaddingEnd=80;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:listPreferredItemPaddingStart
     */
    public static final int AppCompatTheme_listPreferredItemPaddingStart=83;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=84;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=85;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=86;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=87;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=88;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=89;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=90;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=91;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=92;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=93;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=94;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=95;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=96;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=97;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=98;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=100;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=101;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=103;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=104;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=107;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=108;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=109;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=110;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=111;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=112;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=113;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=114;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=115;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=117;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.autoidentreactsample:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=118;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.autoidentreactsample:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=119;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.autoidentreactsample:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.autoidentreactsample:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=121;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.autoidentreactsample:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=122;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.autoidentreactsample:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=123;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=124;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.autoidentreactsample:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f04002c
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.autoidentreactsample:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f04002d
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.autoidentreactsample:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.autoidentreactsample:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.autoidentreactsample:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f040046, 0x7f04004c, 0x7f04004d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonCompat
     */
    public static final int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:buttonTint
     */
    public static final int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a ConstraintLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierAllowsGoneWidgets com.autoidentreactsample:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierDirection com.autoidentreactsample:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_chainUseRtl com.autoidentreactsample:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraintSet com.autoidentreactsample:constraintSet}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraint_referenced_ids com.autoidentreactsample:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedHeight com.autoidentreactsample:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedWidth com.autoidentreactsample:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_creator com.autoidentreactsample:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf com.autoidentreactsample:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_creator com.autoidentreactsample:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf com.autoidentreactsample:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toTopOf com.autoidentreactsample:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircle com.autoidentreactsample:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleAngle com.autoidentreactsample:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleRadius com.autoidentreactsample:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintDimensionRatio com.autoidentreactsample:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toEndOf com.autoidentreactsample:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toStartOf com.autoidentreactsample:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_begin com.autoidentreactsample:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_end com.autoidentreactsample:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_percent com.autoidentreactsample:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_default com.autoidentreactsample:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_max com.autoidentreactsample:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_min com.autoidentreactsample:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_percent com.autoidentreactsample:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_bias com.autoidentreactsample:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle com.autoidentreactsample:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_weight com.autoidentreactsample:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_creator com.autoidentreactsample:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf com.autoidentreactsample:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toRightOf com.autoidentreactsample:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_creator com.autoidentreactsample:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toLeftOf com.autoidentreactsample:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toRightOf com.autoidentreactsample:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toEndOf com.autoidentreactsample:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toStartOf com.autoidentreactsample:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_creator com.autoidentreactsample:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toBottomOf com.autoidentreactsample:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toTopOf com.autoidentreactsample:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_bias com.autoidentreactsample:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_chainStyle com.autoidentreactsample:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_weight com.autoidentreactsample:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_default com.autoidentreactsample:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_max com.autoidentreactsample:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_min com.autoidentreactsample:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_percent com.autoidentreactsample:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteX com.autoidentreactsample:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteY com.autoidentreactsample:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginBottom com.autoidentreactsample:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginEnd com.autoidentreactsample:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginLeft com.autoidentreactsample:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginRight com.autoidentreactsample:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginStart com.autoidentreactsample:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginTop com.autoidentreactsample:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_optimizationLevel com.autoidentreactsample:layout_optimizationLevel}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_Layout_android_orientation
     * @see #ConstraintLayout_Layout_android_maxWidth
     * @see #ConstraintLayout_Layout_android_maxHeight
     * @see #ConstraintLayout_Layout_android_minWidth
     * @see #ConstraintLayout_Layout_android_minHeight
     * @see #ConstraintLayout_Layout_barrierAllowsGoneWidgets
     * @see #ConstraintLayout_Layout_barrierDirection
     * @see #ConstraintLayout_Layout_chainUseRtl
     * @see #ConstraintLayout_Layout_constraintSet
     * @see #ConstraintLayout_Layout_constraint_referenced_ids
     * @see #ConstraintLayout_Layout_layout_constrainedHeight
     * @see #ConstraintLayout_Layout_layout_constrainedWidth
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_creator
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_creator
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintCircle
     * @see #ConstraintLayout_Layout_layout_constraintCircleAngle
     * @see #ConstraintLayout_Layout_layout_constraintCircleRadius
     * @see #ConstraintLayout_Layout_layout_constraintDimensionRatio
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintGuide_begin
     * @see #ConstraintLayout_Layout_layout_constraintGuide_end
     * @see #ConstraintLayout_Layout_layout_constraintGuide_percent
     * @see #ConstraintLayout_Layout_layout_constraintHeight_default
     * @see #ConstraintLayout_Layout_layout_constraintHeight_max
     * @see #ConstraintLayout_Layout_layout_constraintHeight_min
     * @see #ConstraintLayout_Layout_layout_constraintHeight_percent
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_bias
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_weight
     * @see #ConstraintLayout_Layout_layout_constraintLeft_creator
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_creator
     * @see #ConstraintLayout_Layout_layout_constraintRight_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintTop_creator
     * @see #ConstraintLayout_Layout_layout_constraintTop_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintTop_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintVertical_bias
     * @see #ConstraintLayout_Layout_layout_constraintVertical_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintVertical_weight
     * @see #ConstraintLayout_Layout_layout_constraintWidth_default
     * @see #ConstraintLayout_Layout_layout_constraintWidth_max
     * @see #ConstraintLayout_Layout_layout_constraintWidth_min
     * @see #ConstraintLayout_Layout_layout_constraintWidth_percent
     * @see #ConstraintLayout_Layout_layout_editor_absoluteX
     * @see #ConstraintLayout_Layout_layout_editor_absoluteY
     * @see #ConstraintLayout_Layout_layout_goneMarginBottom
     * @see #ConstraintLayout_Layout_layout_goneMarginEnd
     * @see #ConstraintLayout_Layout_layout_goneMarginLeft
     * @see #ConstraintLayout_Layout_layout_goneMarginRight
     * @see #ConstraintLayout_Layout_layout_goneMarginStart
     * @see #ConstraintLayout_Layout_layout_goneMarginTop
     * @see #ConstraintLayout_Layout_layout_optimizationLevel
     */
    public static final int[] ConstraintLayout_Layout={
      0x010100c4, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x7f04003e, 0x7f04003f, 0x7f04004e, 
      0x7f040063, 0x7f040064, 0x7f0400ec, 0x7f0400ed, 
      0x7f0400ee, 0x7f0400ef, 0x7f0400f0, 0x7f0400f1, 
      0x7f0400f2, 0x7f0400f3, 0x7f0400f4, 0x7f0400f5, 
      0x7f0400f6, 0x7f0400f7, 0x7f0400f8, 0x7f0400f9, 
      0x7f0400fa, 0x7f0400fb, 0x7f0400fc, 0x7f0400fd, 
      0x7f0400fe, 0x7f0400ff, 0x7f040100, 0x7f040101, 
      0x7f040102, 0x7f040103, 0x7f040104, 0x7f040105, 
      0x7f040106, 0x7f040107, 0x7f040108, 0x7f040109, 
      0x7f04010a, 0x7f04010b, 0x7f04010c, 0x7f04010d, 
      0x7f04010e, 0x7f04010f, 0x7f040110, 0x7f040111, 
      0x7f040112, 0x7f040113, 0x7f040114, 0x7f040116, 
      0x7f040117, 0x7f040118, 0x7f040119, 0x7f04011a, 
      0x7f04011b, 0x7f04011c, 0x7f04011d, 0x7f040120
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ConstraintLayout_Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int ConstraintLayout_Layout_android_maxWidth=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int ConstraintLayout_Layout_android_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ConstraintLayout_Layout_android_minWidth=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int ConstraintLayout_Layout_android_minHeight=4;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:barrierAllowsGoneWidgets
     */
    public static final int ConstraintLayout_Layout_barrierAllowsGoneWidgets=5;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:barrierDirection
     */
    public static final int ConstraintLayout_Layout_barrierDirection=6;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:chainUseRtl
     */
    public static final int ConstraintLayout_Layout_chainUseRtl=7;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#constraintSet}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:constraintSet
     */
    public static final int ConstraintLayout_Layout_constraintSet=8;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:constraint_referenced_ids
     */
    public static final int ConstraintLayout_Layout_constraint_referenced_ids=9;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:layout_constrainedHeight
     */
    public static final int ConstraintLayout_Layout_layout_constrainedHeight=10;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:layout_constrainedWidth
     */
    public static final int ConstraintLayout_Layout_layout_constrainedWidth=11;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintBaseline_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintBaseline_creator=12;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintBaseline_toBaselineOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf=13;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintBottom_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_creator=14;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintBottom_toBottomOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf=15;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintBottom_toTopOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_toTopOf=16;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintCircle
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircle=17;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintCircleAngle
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircleAngle=18;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_constraintCircleRadius
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircleRadius=19;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:layout_constraintDimensionRatio
     */
    public static final int ConstraintLayout_Layout_layout_constraintDimensionRatio=20;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintEnd_toEndOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintEnd_toEndOf=21;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintEnd_toStartOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintEnd_toStartOf=22;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_constraintGuide_begin
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_begin=23;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_constraintGuide_end
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_end=24;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintGuide_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_percent=25;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_default
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_default=26;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_max
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_max=27;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_min
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_min=28;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_percent=29;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintHorizontal_bias
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_bias=30;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHorizontal_chainStyle
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle=31;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintHorizontal_weight
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_weight=32;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintLeft_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_creator=33;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintLeft_toLeftOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf=34;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintLeft_toRightOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_toRightOf=35;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintRight_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_creator=36;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintRight_toLeftOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_toLeftOf=37;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintRight_toRightOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_toRightOf=38;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintStart_toEndOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintStart_toEndOf=39;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintStart_toStartOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintStart_toStartOf=40;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintTop_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_creator=41;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintTop_toBottomOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_toBottomOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintTop_toTopOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_toTopOf=43;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintVertical_bias
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_bias=44;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintVertical_chainStyle
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_chainStyle=45;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintVertical_weight
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_weight=46;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_default
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_default=47;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_max
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_max=48;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_min
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_min=49;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_percent=50;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_editor_absoluteX
     */
    public static final int ConstraintLayout_Layout_layout_editor_absoluteX=51;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_editor_absoluteY
     */
    public static final int ConstraintLayout_Layout_layout_editor_absoluteY=52;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginBottom
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginBottom=53;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginEnd
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginEnd=54;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginLeft
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginLeft=55;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginRight
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginRight=56;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginStart
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginStart=57;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginTop
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginTop=58;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_optimizationLevel}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_optimizationLevel
     */
    public static final int ConstraintLayout_Layout_layout_optimizationLevel=59;
    /**
     * Attributes that can be used with a ConstraintLayout_placeholder.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_content com.autoidentreactsample:content}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_emptyVisibility com.autoidentreactsample:emptyVisibility}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_placeholder_content
     * @see #ConstraintLayout_placeholder_emptyVisibility
     */
    public static final int[] ConstraintLayout_placeholder={
      0x7f040065, 0x7f0400bb
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#content}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:content
     */
    public static final int ConstraintLayout_placeholder_content=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#emptyVisibility}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>0</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:emptyVisibility
     */
    public static final int ConstraintLayout_placeholder_emptyVisibility=1;
    /**
     * Attributes that can be used with a ConstraintSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintSet_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierAllowsGoneWidgets com.autoidentreactsample:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierDirection com.autoidentreactsample:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_chainUseRtl com.autoidentreactsample:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_constraint_referenced_ids com.autoidentreactsample:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedHeight com.autoidentreactsample:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedWidth com.autoidentreactsample:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_creator com.autoidentreactsample:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_toBaselineOf com.autoidentreactsample:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_creator com.autoidentreactsample:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toBottomOf com.autoidentreactsample:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toTopOf com.autoidentreactsample:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircle com.autoidentreactsample:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleAngle com.autoidentreactsample:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleRadius com.autoidentreactsample:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintDimensionRatio com.autoidentreactsample:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toEndOf com.autoidentreactsample:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toStartOf com.autoidentreactsample:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_begin com.autoidentreactsample:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_end com.autoidentreactsample:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_percent com.autoidentreactsample:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_default com.autoidentreactsample:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_max com.autoidentreactsample:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_min com.autoidentreactsample:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_percent com.autoidentreactsample:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_bias com.autoidentreactsample:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_chainStyle com.autoidentreactsample:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_weight com.autoidentreactsample:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_creator com.autoidentreactsample:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toLeftOf com.autoidentreactsample:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toRightOf com.autoidentreactsample:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_creator com.autoidentreactsample:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toLeftOf com.autoidentreactsample:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toRightOf com.autoidentreactsample:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toEndOf com.autoidentreactsample:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toStartOf com.autoidentreactsample:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_creator com.autoidentreactsample:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toBottomOf com.autoidentreactsample:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toTopOf com.autoidentreactsample:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_bias com.autoidentreactsample:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_chainStyle com.autoidentreactsample:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_weight com.autoidentreactsample:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_default com.autoidentreactsample:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_max com.autoidentreactsample:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_min com.autoidentreactsample:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_percent com.autoidentreactsample:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteX com.autoidentreactsample:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteY com.autoidentreactsample:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginBottom com.autoidentreactsample:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginEnd com.autoidentreactsample:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginLeft com.autoidentreactsample:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginRight com.autoidentreactsample:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginStart com.autoidentreactsample:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginTop com.autoidentreactsample:layout_goneMarginTop}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintSet_android_orientation
     * @see #ConstraintSet_android_id
     * @see #ConstraintSet_android_visibility
     * @see #ConstraintSet_android_layout_width
     * @see #ConstraintSet_android_layout_height
     * @see #ConstraintSet_android_layout_marginLeft
     * @see #ConstraintSet_android_layout_marginTop
     * @see #ConstraintSet_android_layout_marginRight
     * @see #ConstraintSet_android_layout_marginBottom
     * @see #ConstraintSet_android_maxWidth
     * @see #ConstraintSet_android_maxHeight
     * @see #ConstraintSet_android_minWidth
     * @see #ConstraintSet_android_minHeight
     * @see #ConstraintSet_android_alpha
     * @see #ConstraintSet_android_transformPivotX
     * @see #ConstraintSet_android_transformPivotY
     * @see #ConstraintSet_android_translationX
     * @see #ConstraintSet_android_translationY
     * @see #ConstraintSet_android_scaleX
     * @see #ConstraintSet_android_scaleY
     * @see #ConstraintSet_android_rotation
     * @see #ConstraintSet_android_rotationX
     * @see #ConstraintSet_android_rotationY
     * @see #ConstraintSet_android_layout_marginStart
     * @see #ConstraintSet_android_layout_marginEnd
     * @see #ConstraintSet_android_translationZ
     * @see #ConstraintSet_android_elevation
     * @see #ConstraintSet_barrierAllowsGoneWidgets
     * @see #ConstraintSet_barrierDirection
     * @see #ConstraintSet_chainUseRtl
     * @see #ConstraintSet_constraint_referenced_ids
     * @see #ConstraintSet_layout_constrainedHeight
     * @see #ConstraintSet_layout_constrainedWidth
     * @see #ConstraintSet_layout_constraintBaseline_creator
     * @see #ConstraintSet_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintSet_layout_constraintBottom_creator
     * @see #ConstraintSet_layout_constraintBottom_toBottomOf
     * @see #ConstraintSet_layout_constraintBottom_toTopOf
     * @see #ConstraintSet_layout_constraintCircle
     * @see #ConstraintSet_layout_constraintCircleAngle
     * @see #ConstraintSet_layout_constraintCircleRadius
     * @see #ConstraintSet_layout_constraintDimensionRatio
     * @see #ConstraintSet_layout_constraintEnd_toEndOf
     * @see #ConstraintSet_layout_constraintEnd_toStartOf
     * @see #ConstraintSet_layout_constraintGuide_begin
     * @see #ConstraintSet_layout_constraintGuide_end
     * @see #ConstraintSet_layout_constraintGuide_percent
     * @see #ConstraintSet_layout_constraintHeight_default
     * @see #ConstraintSet_layout_constraintHeight_max
     * @see #ConstraintSet_layout_constraintHeight_min
     * @see #ConstraintSet_layout_constraintHeight_percent
     * @see #ConstraintSet_layout_constraintHorizontal_bias
     * @see #ConstraintSet_layout_constraintHorizontal_chainStyle
     * @see #ConstraintSet_layout_constraintHorizontal_weight
     * @see #ConstraintSet_layout_constraintLeft_creator
     * @see #ConstraintSet_layout_constraintLeft_toLeftOf
     * @see #ConstraintSet_layout_constraintLeft_toRightOf
     * @see #ConstraintSet_layout_constraintRight_creator
     * @see #ConstraintSet_layout_constraintRight_toLeftOf
     * @see #ConstraintSet_layout_constraintRight_toRightOf
     * @see #ConstraintSet_layout_constraintStart_toEndOf
     * @see #ConstraintSet_layout_constraintStart_toStartOf
     * @see #ConstraintSet_layout_constraintTop_creator
     * @see #ConstraintSet_layout_constraintTop_toBottomOf
     * @see #ConstraintSet_layout_constraintTop_toTopOf
     * @see #ConstraintSet_layout_constraintVertical_bias
     * @see #ConstraintSet_layout_constraintVertical_chainStyle
     * @see #ConstraintSet_layout_constraintVertical_weight
     * @see #ConstraintSet_layout_constraintWidth_default
     * @see #ConstraintSet_layout_constraintWidth_max
     * @see #ConstraintSet_layout_constraintWidth_min
     * @see #ConstraintSet_layout_constraintWidth_percent
     * @see #ConstraintSet_layout_editor_absoluteX
     * @see #ConstraintSet_layout_editor_absoluteY
     * @see #ConstraintSet_layout_goneMarginBottom
     * @see #ConstraintSet_layout_goneMarginEnd
     * @see #ConstraintSet_layout_goneMarginLeft
     * @see #ConstraintSet_layout_goneMarginRight
     * @see #ConstraintSet_layout_goneMarginStart
     * @see #ConstraintSet_layout_goneMarginTop
     */
    public static final int[] ConstraintSet={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x0101031f, 0x01010320, 0x01010321, 
      0x01010322, 0x01010323, 0x01010324, 0x01010325, 
      0x01010326, 0x01010327, 0x01010328, 0x010103b5, 
      0x010103b6, 0x010103fa, 0x01010440, 0x7f04003e, 
      0x7f04003f, 0x7f04004e, 0x7f040064, 0x7f0400ec, 
      0x7f0400ed, 0x7f0400ee, 0x7f0400ef, 0x7f0400f0, 
      0x7f0400f1, 0x7f0400f2, 0x7f0400f3, 0x7f0400f4, 
      0x7f0400f5, 0x7f0400f6, 0x7f0400f7, 0x7f0400f8, 
      0x7f0400f9, 0x7f0400fa, 0x7f0400fb, 0x7f0400fc, 
      0x7f0400fd, 0x7f0400fe, 0x7f0400ff, 0x7f040100, 
      0x7f040101, 0x7f040102, 0x7f040103, 0x7f040104, 
      0x7f040105, 0x7f040106, 0x7f040107, 0x7f040108, 
      0x7f040109, 0x7f04010a, 0x7f04010b, 0x7f04010c, 
      0x7f04010d, 0x7f04010e, 0x7f04010f, 0x7f040110, 
      0x7f040111, 0x7f040112, 0x7f040113, 0x7f040114, 
      0x7f040116, 0x7f040117, 0x7f040118, 0x7f040119, 
      0x7f04011a, 0x7f04011b, 0x7f04011c, 0x7f04011d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ConstraintSet_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ConstraintSet_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int ConstraintSet_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int ConstraintSet_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int ConstraintSet_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int ConstraintSet_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int ConstraintSet_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int ConstraintSet_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int ConstraintSet_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int ConstraintSet_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int ConstraintSet_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ConstraintSet_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int ConstraintSet_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ConstraintSet_android_alpha=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int ConstraintSet_android_transformPivotX=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int ConstraintSet_android_transformPivotY=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int ConstraintSet_android_translationX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int ConstraintSet_android_translationY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int ConstraintSet_android_scaleX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int ConstraintSet_android_scaleY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int ConstraintSet_android_rotation=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int ConstraintSet_android_rotationX=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int ConstraintSet_android_rotationY=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int ConstraintSet_android_layout_marginStart=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int ConstraintSet_android_layout_marginEnd=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int ConstraintSet_android_translationZ=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int ConstraintSet_android_elevation=26;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:barrierAllowsGoneWidgets
     */
    public static final int ConstraintSet_barrierAllowsGoneWidgets=27;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:barrierDirection
     */
    public static final int ConstraintSet_barrierDirection=28;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:chainUseRtl
     */
    public static final int ConstraintSet_chainUseRtl=29;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:constraint_referenced_ids
     */
    public static final int ConstraintSet_constraint_referenced_ids=30;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:layout_constrainedHeight
     */
    public static final int ConstraintSet_layout_constrainedHeight=31;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:layout_constrainedWidth
     */
    public static final int ConstraintSet_layout_constrainedWidth=32;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintBaseline_creator
     */
    public static final int ConstraintSet_layout_constraintBaseline_creator=33;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintBaseline_toBaselineOf
     */
    public static final int ConstraintSet_layout_constraintBaseline_toBaselineOf=34;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintBottom_creator
     */
    public static final int ConstraintSet_layout_constraintBottom_creator=35;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintBottom_toBottomOf
     */
    public static final int ConstraintSet_layout_constraintBottom_toBottomOf=36;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintBottom_toTopOf
     */
    public static final int ConstraintSet_layout_constraintBottom_toTopOf=37;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintCircle
     */
    public static final int ConstraintSet_layout_constraintCircle=38;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintCircleAngle
     */
    public static final int ConstraintSet_layout_constraintCircleAngle=39;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_constraintCircleRadius
     */
    public static final int ConstraintSet_layout_constraintCircleRadius=40;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:layout_constraintDimensionRatio
     */
    public static final int ConstraintSet_layout_constraintDimensionRatio=41;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintEnd_toEndOf
     */
    public static final int ConstraintSet_layout_constraintEnd_toEndOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintEnd_toStartOf
     */
    public static final int ConstraintSet_layout_constraintEnd_toStartOf=43;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_constraintGuide_begin
     */
    public static final int ConstraintSet_layout_constraintGuide_begin=44;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_constraintGuide_end
     */
    public static final int ConstraintSet_layout_constraintGuide_end=45;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintGuide_percent
     */
    public static final int ConstraintSet_layout_constraintGuide_percent=46;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_default
     */
    public static final int ConstraintSet_layout_constraintHeight_default=47;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_max
     */
    public static final int ConstraintSet_layout_constraintHeight_max=48;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_min
     */
    public static final int ConstraintSet_layout_constraintHeight_min=49;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintHeight_percent
     */
    public static final int ConstraintSet_layout_constraintHeight_percent=50;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintHorizontal_bias
     */
    public static final int ConstraintSet_layout_constraintHorizontal_bias=51;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintHorizontal_chainStyle
     */
    public static final int ConstraintSet_layout_constraintHorizontal_chainStyle=52;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintHorizontal_weight
     */
    public static final int ConstraintSet_layout_constraintHorizontal_weight=53;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintLeft_creator
     */
    public static final int ConstraintSet_layout_constraintLeft_creator=54;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintLeft_toLeftOf
     */
    public static final int ConstraintSet_layout_constraintLeft_toLeftOf=55;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintLeft_toRightOf
     */
    public static final int ConstraintSet_layout_constraintLeft_toRightOf=56;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintRight_creator
     */
    public static final int ConstraintSet_layout_constraintRight_creator=57;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintRight_toLeftOf
     */
    public static final int ConstraintSet_layout_constraintRight_toLeftOf=58;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintRight_toRightOf
     */
    public static final int ConstraintSet_layout_constraintRight_toRightOf=59;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintStart_toEndOf
     */
    public static final int ConstraintSet_layout_constraintStart_toEndOf=60;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintStart_toStartOf
     */
    public static final int ConstraintSet_layout_constraintStart_toStartOf=61;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintTop_creator
     */
    public static final int ConstraintSet_layout_constraintTop_creator=62;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintTop_toBottomOf
     */
    public static final int ConstraintSet_layout_constraintTop_toBottomOf=63;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintTop_toTopOf
     */
    public static final int ConstraintSet_layout_constraintTop_toTopOf=64;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintVertical_bias
     */
    public static final int ConstraintSet_layout_constraintVertical_bias=65;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintVertical_chainStyle
     */
    public static final int ConstraintSet_layout_constraintVertical_chainStyle=66;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintVertical_weight
     */
    public static final int ConstraintSet_layout_constraintVertical_weight=67;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_default
     */
    public static final int ConstraintSet_layout_constraintWidth_default=68;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_max
     */
    public static final int ConstraintSet_layout_constraintWidth_max=69;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_min
     */
    public static final int ConstraintSet_layout_constraintWidth_min=70;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:layout_constraintWidth_percent
     */
    public static final int ConstraintSet_layout_constraintWidth_percent=71;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_editor_absoluteX
     */
    public static final int ConstraintSet_layout_editor_absoluteX=72;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_editor_absoluteY
     */
    public static final int ConstraintSet_layout_editor_absoluteY=73;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginBottom
     */
    public static final int ConstraintSet_layout_goneMarginBottom=74;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginEnd
     */
    public static final int ConstraintSet_layout_goneMarginEnd=75;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginLeft
     */
    public static final int ConstraintSet_layout_goneMarginLeft=76;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginRight
     */
    public static final int ConstraintSet_layout_goneMarginRight=77;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginStart
     */
    public static final int ConstraintSet_layout_goneMarginStart=78;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:layout_goneMarginTop
     */
    public static final int ConstraintSet_layout_goneMarginTop=79;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.autoidentreactsample:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.autoidentreactsample:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f0400e5, 0x7f04018b
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.autoidentreactsample:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.autoidentreactsample:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.autoidentreactsample:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.autoidentreactsample:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.autoidentreactsample:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.autoidentreactsample:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f0400e9, 0x7f0400ea, 0x7f0400eb, 
      0x7f040115, 0x7f04011e, 0x7f04011f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a CustomTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CustomTheme_gifMoviewViewStyle com.autoidentreactsample:gifMoviewViewStyle}</code></td><td></td></tr>
     * </table>
     * @see #CustomTheme_gifMoviewViewStyle
     */
    public static final int[] CustomTheme={
      0x7f0400d3
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#gifMoviewViewStyle}
     * attribute's value can be found in the {@link #CustomTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:gifMoviewViewStyle
     */
    public static final int CustomTheme_gifMoviewViewStyle=0;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.autoidentreactsample:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.autoidentreactsample:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.autoidentreactsample:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.autoidentreactsample:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.autoidentreactsample:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.autoidentreactsample:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.autoidentreactsample:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.autoidentreactsample:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f04002f, 0x7f040030, 0x7f04003d, 0x7f040057, 
      0x7f0400af, 0x7f0400d1, 0x7f040184, 0x7f0401a6
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.autoidentreactsample:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.autoidentreactsample:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.autoidentreactsample:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.autoidentreactsample:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.autoidentreactsample:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.autoidentreactsample:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f0400c8, 0x7f0400c9, 0x7f0400ca, 0x7f0400cb, 
      0x7f0400cc, 0x7f0400cd
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.autoidentreactsample:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.autoidentreactsample:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.autoidentreactsample:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.autoidentreactsample:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.autoidentreactsample:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f0400c6, 0x7f0400ce, 0x7f0400cf, 
      0x7f0400d0, 0x7f0401c1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a GenericDraweeHierarchy.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_actualImageScaleType com.autoidentreactsample:actualImageScaleType}</code></td><td>Scale type of the actual image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_backgroundImage com.autoidentreactsample:backgroundImage}</code></td><td>A drawable or color to be used as a background.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_fadeDuration com.autoidentreactsample:fadeDuration}</code></td><td>Fade duration in milliseconds.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_failureImage com.autoidentreactsample:failureImage}</code></td><td>A drawable to be be used as a failure image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_failureImageScaleType com.autoidentreactsample:failureImageScaleType}</code></td><td>Scale type of the failure image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_overlayImage com.autoidentreactsample:overlayImage}</code></td><td>A drawable or color to be used as an overlay.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_placeholderImage com.autoidentreactsample:placeholderImage}</code></td><td>A drawable or color to be be used as a placeholder.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_placeholderImageScaleType com.autoidentreactsample:placeholderImageScaleType}</code></td><td>Scale type of the placeholder image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_pressedStateOverlayImage com.autoidentreactsample:pressedStateOverlayImage}</code></td><td>A drawable or color to be used as a pressed-state-overlay</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_progressBarAutoRotateInterval com.autoidentreactsample:progressBarAutoRotateInterval}</code></td><td>Progress bar Auto Rotate interval in milliseconds</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_progressBarImage com.autoidentreactsample:progressBarImage}</code></td><td>A drawable to be be used as a progress bar.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_progressBarImageScaleType com.autoidentreactsample:progressBarImageScaleType}</code></td><td>Scale type of the progress bar.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_retryImage com.autoidentreactsample:retryImage}</code></td><td>A drawable to be be used as a retry image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_retryImageScaleType com.autoidentreactsample:retryImageScaleType}</code></td><td>Scale type of the retry image.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundAsCircle com.autoidentreactsample:roundAsCircle}</code></td><td>Round as circle.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomEnd com.autoidentreactsample:roundBottomEnd}</code></td><td>Round the bottom-end edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomLeft com.autoidentreactsample:roundBottomLeft}</code></td><td>Round the bottom-left corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomRight com.autoidentreactsample:roundBottomRight}</code></td><td>Round the bottom-right corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundBottomStart com.autoidentreactsample:roundBottomStart}</code></td><td>Round the bottom-start edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopEnd com.autoidentreactsample:roundTopEnd}</code></td><td>Round the top-end edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopLeft com.autoidentreactsample:roundTopLeft}</code></td><td>Round the top-left corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopRight com.autoidentreactsample:roundTopRight}</code></td><td>Round the top-right corner.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundTopStart com.autoidentreactsample:roundTopStart}</code></td><td>Round the top-start edge.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundWithOverlayColor com.autoidentreactsample:roundWithOverlayColor}</code></td><td>Round by overlying color.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundedCornerRadius com.autoidentreactsample:roundedCornerRadius}</code></td><td>Rounded corner radius.</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundingBorderColor com.autoidentreactsample:roundingBorderColor}</code></td><td>Rounding border color</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundingBorderPadding com.autoidentreactsample:roundingBorderPadding}</code></td><td>Rounding border padding</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_roundingBorderWidth com.autoidentreactsample:roundingBorderWidth}</code></td><td>Rounding border width</td></tr>
     * <tr><td><code>{@link #GenericDraweeHierarchy_viewAspectRatio com.autoidentreactsample:viewAspectRatio}</code></td><td>Aspect ratio (width / height) of the view, not necessarily of the images.</td></tr>
     * </table>
     * @see #GenericDraweeHierarchy_actualImageScaleType
     * @see #GenericDraweeHierarchy_backgroundImage
     * @see #GenericDraweeHierarchy_fadeDuration
     * @see #GenericDraweeHierarchy_failureImage
     * @see #GenericDraweeHierarchy_failureImageScaleType
     * @see #GenericDraweeHierarchy_overlayImage
     * @see #GenericDraweeHierarchy_placeholderImage
     * @see #GenericDraweeHierarchy_placeholderImageScaleType
     * @see #GenericDraweeHierarchy_pressedStateOverlayImage
     * @see #GenericDraweeHierarchy_progressBarAutoRotateInterval
     * @see #GenericDraweeHierarchy_progressBarImage
     * @see #GenericDraweeHierarchy_progressBarImageScaleType
     * @see #GenericDraweeHierarchy_retryImage
     * @see #GenericDraweeHierarchy_retryImageScaleType
     * @see #GenericDraweeHierarchy_roundAsCircle
     * @see #GenericDraweeHierarchy_roundBottomEnd
     * @see #GenericDraweeHierarchy_roundBottomLeft
     * @see #GenericDraweeHierarchy_roundBottomRight
     * @see #GenericDraweeHierarchy_roundBottomStart
     * @see #GenericDraweeHierarchy_roundTopEnd
     * @see #GenericDraweeHierarchy_roundTopLeft
     * @see #GenericDraweeHierarchy_roundTopRight
     * @see #GenericDraweeHierarchy_roundTopStart
     * @see #GenericDraweeHierarchy_roundWithOverlayColor
     * @see #GenericDraweeHierarchy_roundedCornerRadius
     * @see #GenericDraweeHierarchy_roundingBorderColor
     * @see #GenericDraweeHierarchy_roundingBorderPadding
     * @see #GenericDraweeHierarchy_roundingBorderWidth
     * @see #GenericDraweeHierarchy_viewAspectRatio
     */
    public static final int[] GenericDraweeHierarchy={
      0x7f040026, 0x7f040038, 0x7f0400bd, 0x7f0400be, 
      0x7f0400bf, 0x7f04014c, 0x7f040155, 0x7f040156, 
      0x7f04015b, 0x7f04015c, 0x7f04015d, 0x7f04015e, 
      0x7f040167, 0x7f040168, 0x7f04016a, 0x7f04016b, 
      0x7f04016c, 0x7f04016d, 0x7f04016e, 0x7f04016f, 
      0x7f040170, 0x7f040171, 0x7f040172, 0x7f040173, 
      0x7f040174, 0x7f040175, 0x7f040176, 0x7f040177, 
      0x7f0401c2
    };
    /**
     * <p>
     * @attr description
     * Scale type of the actual image.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:actualImageScaleType
     */
    public static final int GenericDraweeHierarchy_actualImageScaleType=0;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a background.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:backgroundImage
     */
    public static final int GenericDraweeHierarchy_backgroundImage=1;
    /**
     * <p>
     * @attr description
     * Fade duration in milliseconds.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:fadeDuration
     */
    public static final int GenericDraweeHierarchy_fadeDuration=2;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a failure image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:failureImage
     */
    public static final int GenericDraweeHierarchy_failureImage=3;
    /**
     * <p>
     * @attr description
     * Scale type of the failure image. Ignored if failureImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:failureImageScaleType
     */
    public static final int GenericDraweeHierarchy_failureImageScaleType=4;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as an overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:overlayImage
     */
    public static final int GenericDraweeHierarchy_overlayImage=5;
    /**
     * <p>
     * @attr description
     * A drawable or color to be be used as a placeholder.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:placeholderImage
     */
    public static final int GenericDraweeHierarchy_placeholderImage=6;
    /**
     * <p>
     * @attr description
     * Scale type of the placeholder image. Ignored if placeholderImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:placeholderImageScaleType
     */
    public static final int GenericDraweeHierarchy_placeholderImageScaleType=7;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a pressed-state-overlay
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:pressedStateOverlayImage
     */
    public static final int GenericDraweeHierarchy_pressedStateOverlayImage=8;
    /**
     * <p>
     * @attr description
     * Progress bar Auto Rotate interval in milliseconds
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:progressBarAutoRotateInterval
     */
    public static final int GenericDraweeHierarchy_progressBarAutoRotateInterval=9;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:progressBarImage
     */
    public static final int GenericDraweeHierarchy_progressBarImage=10;
    /**
     * <p>
     * @attr description
     * Scale type of the progress bar. Ignored if progressBarImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:progressBarImageScaleType
     */
    public static final int GenericDraweeHierarchy_progressBarImageScaleType=11;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a retry image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:retryImage
     */
    public static final int GenericDraweeHierarchy_retryImage=12;
    /**
     * <p>
     * @attr description
     * Scale type of the retry image. Ignored if retryImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:retryImageScaleType
     */
    public static final int GenericDraweeHierarchy_retryImageScaleType=13;
    /**
     * <p>
     * @attr description
     * Round as circle.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundAsCircle
     */
    public static final int GenericDraweeHierarchy_roundAsCircle=14;
    /**
     * <p>
     * @attr description
     * Round the bottom-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomEnd
     */
    public static final int GenericDraweeHierarchy_roundBottomEnd=15;
    /**
     * <p>
     * @attr description
     * Round the bottom-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomLeft
     */
    public static final int GenericDraweeHierarchy_roundBottomLeft=16;
    /**
     * <p>
     * @attr description
     * Round the bottom-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomRight
     */
    public static final int GenericDraweeHierarchy_roundBottomRight=17;
    /**
     * <p>
     * @attr description
     * Round the bottom-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomStart
     */
    public static final int GenericDraweeHierarchy_roundBottomStart=18;
    /**
     * <p>
     * @attr description
     * Round the top-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopEnd
     */
    public static final int GenericDraweeHierarchy_roundTopEnd=19;
    /**
     * <p>
     * @attr description
     * Round the top-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopLeft
     */
    public static final int GenericDraweeHierarchy_roundTopLeft=20;
    /**
     * <p>
     * @attr description
     * Round the top-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopRight
     */
    public static final int GenericDraweeHierarchy_roundTopRight=21;
    /**
     * <p>
     * @attr description
     * Round the top-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopStart
     */
    public static final int GenericDraweeHierarchy_roundTopStart=22;
    /**
     * <p>
     * @attr description
     * Round by overlying color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:roundWithOverlayColor
     */
    public static final int GenericDraweeHierarchy_roundWithOverlayColor=23;
    /**
     * <p>
     * @attr description
     * Rounded corner radius. Ignored if roundAsCircle is used.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:roundedCornerRadius
     */
    public static final int GenericDraweeHierarchy_roundedCornerRadius=24;
    /**
     * <p>
     * @attr description
     * Rounding border color
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:roundingBorderColor
     */
    public static final int GenericDraweeHierarchy_roundingBorderColor=25;
    /**
     * <p>
     * @attr description
     * Rounding border padding
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:roundingBorderPadding
     */
    public static final int GenericDraweeHierarchy_roundingBorderPadding=26;
    /**
     * <p>
     * @attr description
     * Rounding border width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:roundingBorderWidth
     */
    public static final int GenericDraweeHierarchy_roundingBorderWidth=27;
    /**
     * <p>
     * @attr description
     * Aspect ratio (width / height) of the view, not necessarily of the images.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:viewAspectRatio
     */
    public static final int GenericDraweeHierarchy_viewAspectRatio=28;
    /**
     * Attributes that can be used with a GifMoviewView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GifMoviewView_gif com.autoidentreactsample:gif}</code></td><td></td></tr>
     * <tr><td><code>{@link #GifMoviewView_paused com.autoidentreactsample:paused}</code></td><td></td></tr>
     * </table>
     * @see #GifMoviewView_gif
     * @see #GifMoviewView_paused
     */
    public static final int[] GifMoviewView={
      0x7f0400d2, 0x7f040154
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#gif}
     * attribute's value can be found in the {@link #GifMoviewView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:gif
     */
    public static final int GifMoviewView_gif=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#paused}
     * attribute's value can be found in the {@link #GifMoviewView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:paused
     */
    public static final int GifMoviewView_paused=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a IDnowAnimCheckBox.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #IDnowAnimCheckBox_checked com.autoidentreactsample:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowAnimCheckBox_circle_color com.autoidentreactsample:circle_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowAnimCheckBox_stroke_color com.autoidentreactsample:stroke_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowAnimCheckBox_stroke_width com.autoidentreactsample:stroke_width}</code></td><td></td></tr>
     * </table>
     * @see #IDnowAnimCheckBox_checked
     * @see #IDnowAnimCheckBox_circle_color
     * @see #IDnowAnimCheckBox_stroke_color
     * @see #IDnowAnimCheckBox_stroke_width
     */
    public static final int[] IDnowAnimCheckBox={
      0x7f040050, 0x7f040052, 0x7f04018c, 0x7f04018d
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#checked}
     * attribute's value can be found in the {@link #IDnowAnimCheckBox} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:checked
     */
    public static final int IDnowAnimCheckBox_checked=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#circle_color}
     * attribute's value can be found in the {@link #IDnowAnimCheckBox} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:circle_color
     */
    public static final int IDnowAnimCheckBox_circle_color=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#stroke_color}
     * attribute's value can be found in the {@link #IDnowAnimCheckBox} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:stroke_color
     */
    public static final int IDnowAnimCheckBox_stroke_color=2;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#stroke_width}
     * attribute's value can be found in the {@link #IDnowAnimCheckBox} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:stroke_width
     */
    public static final int IDnowAnimCheckBox_stroke_width=3;
    /**
     * Attributes that can be used with a IDnowButtonAttrs.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #IDnowButtonAttrs_idnow_buttonColor com.autoidentreactsample:idnow_buttonColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowButtonAttrs_idnow_cornerRadius com.autoidentreactsample:idnow_cornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowButtonAttrs_idnow_textColor com.autoidentreactsample:idnow_textColor}</code></td><td></td></tr>
     * </table>
     * @see #IDnowButtonAttrs_idnow_buttonColor
     * @see #IDnowButtonAttrs_idnow_cornerRadius
     * @see #IDnowButtonAttrs_idnow_textColor
     */
    public static final int[] IDnowButtonAttrs={
      0x7f0400dd, 0x7f0400de, 0x7f0400df
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#idnow_buttonColor}
     * attribute's value can be found in the {@link #IDnowButtonAttrs} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:idnow_buttonColor
     */
    public static final int IDnowButtonAttrs_idnow_buttonColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#idnow_cornerRadius}
     * attribute's value can be found in the {@link #IDnowButtonAttrs} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:idnow_cornerRadius
     */
    public static final int IDnowButtonAttrs_idnow_cornerRadius=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#idnow_textColor}
     * attribute's value can be found in the {@link #IDnowButtonAttrs} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:idnow_textColor
     */
    public static final int IDnowButtonAttrs_idnow_textColor=2;
    /**
     * Attributes that can be used with a IDnowCircleProgressViewStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_autoTextColor com.autoidentreactsample:cpv_autoTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_autoTextSize com.autoidentreactsample:cpv_autoTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barColor com.autoidentreactsample:cpv_barColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barColor1 com.autoidentreactsample:cpv_barColor1}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barColor2 com.autoidentreactsample:cpv_barColor2}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barColor3 com.autoidentreactsample:cpv_barColor3}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barStartEndLine com.autoidentreactsample:cpv_barStartEndLine}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barStartEndLineColor com.autoidentreactsample:cpv_barStartEndLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barStartEndLineSweep com.autoidentreactsample:cpv_barStartEndLineSweep}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barStartEndLineWidth com.autoidentreactsample:cpv_barStartEndLineWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barStrokeCap com.autoidentreactsample:cpv_barStrokeCap}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_barWidth com.autoidentreactsample:cpv_barWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_blockCount com.autoidentreactsample:cpv_blockCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_blockScale com.autoidentreactsample:cpv_blockScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_decimalFormat com.autoidentreactsample:cpv_decimalFormat}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_direction com.autoidentreactsample:cpv_direction}</code></td><td>Progress Bar</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_fillColor com.autoidentreactsample:cpv_fillColor}</code></td><td>Background color</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_innerContourColor com.autoidentreactsample:cpv_innerContourColor}</code></td><td>Inner Contour</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_innerContourSize com.autoidentreactsample:cpv_innerContourSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_maxValue com.autoidentreactsample:cpv_maxValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_maxValueAllowed com.autoidentreactsample:cpv_maxValueAllowed}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_minValueAllowed com.autoidentreactsample:cpv_minValueAllowed}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_outerContourColor com.autoidentreactsample:cpv_outerContourColor}</code></td><td>Outer Contour</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_outerContourSize com.autoidentreactsample:cpv_outerContourSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_rimColor com.autoidentreactsample:cpv_rimColor}</code></td><td>Rim</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_rimWidth com.autoidentreactsample:cpv_rimWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_roundToBlock com.autoidentreactsample:cpv_roundToBlock}</code></td><td>Block</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_roundToWholeNumber com.autoidentreactsample:cpv_roundToWholeNumber}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_seekMode com.autoidentreactsample:cpv_seekMode}</code></td><td>Seek mode</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_showTextInSpinningMode com.autoidentreactsample:cpv_showTextInSpinningMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_showUnit com.autoidentreactsample:cpv_showUnit}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_spin com.autoidentreactsample:cpv_spin}</code></td><td>Spinner</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_spinBarLength com.autoidentreactsample:cpv_spinBarLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_spinColor com.autoidentreactsample:cpv_spinColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_spinSpeed com.autoidentreactsample:cpv_spinSpeed}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_startAngle com.autoidentreactsample:cpv_startAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_text com.autoidentreactsample:cpv_text}</code></td><td>Text</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_textColor com.autoidentreactsample:cpv_textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_textMode com.autoidentreactsample:cpv_textMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_textScale com.autoidentreactsample:cpv_textScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_textSize com.autoidentreactsample:cpv_textSize}</code></td><td>Text sizes</td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_textTypeface com.autoidentreactsample:cpv_textTypeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unit com.autoidentreactsample:cpv_unit}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unitColor com.autoidentreactsample:cpv_unitColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unitPosition com.autoidentreactsample:cpv_unitPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unitScale com.autoidentreactsample:cpv_unitScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unitSize com.autoidentreactsample:cpv_unitSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unitToTextScale com.autoidentreactsample:cpv_unitToTextScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_unitTypeface com.autoidentreactsample:cpv_unitTypeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #IDnowCircleProgressViewStyle_cpv_value com.autoidentreactsample:cpv_value}</code></td><td></td></tr>
     * </table>
     * @see #IDnowCircleProgressViewStyle_cpv_autoTextColor
     * @see #IDnowCircleProgressViewStyle_cpv_autoTextSize
     * @see #IDnowCircleProgressViewStyle_cpv_barColor
     * @see #IDnowCircleProgressViewStyle_cpv_barColor1
     * @see #IDnowCircleProgressViewStyle_cpv_barColor2
     * @see #IDnowCircleProgressViewStyle_cpv_barColor3
     * @see #IDnowCircleProgressViewStyle_cpv_barStartEndLine
     * @see #IDnowCircleProgressViewStyle_cpv_barStartEndLineColor
     * @see #IDnowCircleProgressViewStyle_cpv_barStartEndLineSweep
     * @see #IDnowCircleProgressViewStyle_cpv_barStartEndLineWidth
     * @see #IDnowCircleProgressViewStyle_cpv_barStrokeCap
     * @see #IDnowCircleProgressViewStyle_cpv_barWidth
     * @see #IDnowCircleProgressViewStyle_cpv_blockCount
     * @see #IDnowCircleProgressViewStyle_cpv_blockScale
     * @see #IDnowCircleProgressViewStyle_cpv_decimalFormat
     * @see #IDnowCircleProgressViewStyle_cpv_direction
     * @see #IDnowCircleProgressViewStyle_cpv_fillColor
     * @see #IDnowCircleProgressViewStyle_cpv_innerContourColor
     * @see #IDnowCircleProgressViewStyle_cpv_innerContourSize
     * @see #IDnowCircleProgressViewStyle_cpv_maxValue
     * @see #IDnowCircleProgressViewStyle_cpv_maxValueAllowed
     * @see #IDnowCircleProgressViewStyle_cpv_minValueAllowed
     * @see #IDnowCircleProgressViewStyle_cpv_outerContourColor
     * @see #IDnowCircleProgressViewStyle_cpv_outerContourSize
     * @see #IDnowCircleProgressViewStyle_cpv_rimColor
     * @see #IDnowCircleProgressViewStyle_cpv_rimWidth
     * @see #IDnowCircleProgressViewStyle_cpv_roundToBlock
     * @see #IDnowCircleProgressViewStyle_cpv_roundToWholeNumber
     * @see #IDnowCircleProgressViewStyle_cpv_seekMode
     * @see #IDnowCircleProgressViewStyle_cpv_showTextInSpinningMode
     * @see #IDnowCircleProgressViewStyle_cpv_showUnit
     * @see #IDnowCircleProgressViewStyle_cpv_spin
     * @see #IDnowCircleProgressViewStyle_cpv_spinBarLength
     * @see #IDnowCircleProgressViewStyle_cpv_spinColor
     * @see #IDnowCircleProgressViewStyle_cpv_spinSpeed
     * @see #IDnowCircleProgressViewStyle_cpv_startAngle
     * @see #IDnowCircleProgressViewStyle_cpv_text
     * @see #IDnowCircleProgressViewStyle_cpv_textColor
     * @see #IDnowCircleProgressViewStyle_cpv_textMode
     * @see #IDnowCircleProgressViewStyle_cpv_textScale
     * @see #IDnowCircleProgressViewStyle_cpv_textSize
     * @see #IDnowCircleProgressViewStyle_cpv_textTypeface
     * @see #IDnowCircleProgressViewStyle_cpv_unit
     * @see #IDnowCircleProgressViewStyle_cpv_unitColor
     * @see #IDnowCircleProgressViewStyle_cpv_unitPosition
     * @see #IDnowCircleProgressViewStyle_cpv_unitScale
     * @see #IDnowCircleProgressViewStyle_cpv_unitSize
     * @see #IDnowCircleProgressViewStyle_cpv_unitToTextScale
     * @see #IDnowCircleProgressViewStyle_cpv_unitTypeface
     * @see #IDnowCircleProgressViewStyle_cpv_value
     */
    public static final int[] IDnowCircleProgressViewStyle={
      0x7f04006f, 0x7f040070, 0x7f040071, 0x7f040072, 
      0x7f040073, 0x7f040074, 0x7f040075, 0x7f040076, 
      0x7f040077, 0x7f040078, 0x7f040079, 0x7f04007a, 
      0x7f04007b, 0x7f04007c, 0x7f04007d, 0x7f04007e, 
      0x7f04007f, 0x7f040080, 0x7f040081, 0x7f040082, 
      0x7f040083, 0x7f040084, 0x7f040085, 0x7f040086, 
      0x7f040087, 0x7f040088, 0x7f040089, 0x7f04008a, 
      0x7f04008b, 0x7f04008c, 0x7f04008d, 0x7f04008e, 
      0x7f04008f, 0x7f040090, 0x7f040091, 0x7f040092, 
      0x7f040093, 0x7f040094, 0x7f040095, 0x7f040096, 
      0x7f040097, 0x7f040098, 0x7f040099, 0x7f04009a, 
      0x7f04009b, 0x7f04009c, 0x7f04009d, 0x7f04009e, 
      0x7f04009f, 0x7f0400a0
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_autoTextColor}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_autoTextColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_autoTextColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_autoTextSize}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_autoTextSize
     */
    public static final int IDnowCircleProgressViewStyle_cpv_autoTextSize=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barColor}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_barColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barColor1}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_barColor1
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barColor1=3;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barColor2}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_barColor2
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barColor2=4;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barColor3}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_barColor3
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barColor3=5;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barStartEndLine}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Both</td><td>3</td><td></td></tr>
     * <tr><td>End</td><td>2</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:cpv_barStartEndLine
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barStartEndLine=6;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barStartEndLineColor}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_barStartEndLineColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barStartEndLineColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barStartEndLineSweep}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_barStartEndLineSweep
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barStartEndLineSweep=8;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barStartEndLineWidth}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_barStartEndLineWidth
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barStartEndLineWidth=9;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barStrokeCap}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Butt</td><td>0</td><td></td></tr>
     * <tr><td>Round</td><td>1</td><td></td></tr>
     * <tr><td>Square</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:cpv_barStrokeCap
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barStrokeCap=10;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_barWidth}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_barWidth
     */
    public static final int IDnowCircleProgressViewStyle_cpv_barWidth=11;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_blockCount}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:cpv_blockCount
     */
    public static final int IDnowCircleProgressViewStyle_cpv_blockCount=12;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_blockScale}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_blockScale
     */
    public static final int IDnowCircleProgressViewStyle_cpv_blockScale=13;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_decimalFormat}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:cpv_decimalFormat
     */
    public static final int IDnowCircleProgressViewStyle_cpv_decimalFormat=14;
    /**
     * <p>
     * @attr description
     * Progress Bar
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>CCW</td><td>1</td><td></td></tr>
     * <tr><td>CW</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:cpv_direction
     */
    public static final int IDnowCircleProgressViewStyle_cpv_direction=15;
    /**
     * <p>
     * @attr description
     * Background color
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_fillColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_fillColor=16;
    /**
     * <p>
     * @attr description
     * Inner Contour
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_innerContourColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_innerContourColor=17;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_innerContourSize}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_innerContourSize
     */
    public static final int IDnowCircleProgressViewStyle_cpv_innerContourSize=18;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_maxValue}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_maxValue
     */
    public static final int IDnowCircleProgressViewStyle_cpv_maxValue=19;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_maxValueAllowed}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_maxValueAllowed
     */
    public static final int IDnowCircleProgressViewStyle_cpv_maxValueAllowed=20;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_minValueAllowed}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_minValueAllowed
     */
    public static final int IDnowCircleProgressViewStyle_cpv_minValueAllowed=21;
    /**
     * <p>
     * @attr description
     * Outer Contour
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_outerContourColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_outerContourColor=22;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_outerContourSize}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_outerContourSize
     */
    public static final int IDnowCircleProgressViewStyle_cpv_outerContourSize=23;
    /**
     * <p>
     * @attr description
     * Rim
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_rimColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_rimColor=24;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_rimWidth}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_rimWidth
     */
    public static final int IDnowCircleProgressViewStyle_cpv_rimWidth=25;
    /**
     * <p>
     * @attr description
     * Block
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_roundToBlock
     */
    public static final int IDnowCircleProgressViewStyle_cpv_roundToBlock=26;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_roundToWholeNumber}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_roundToWholeNumber
     */
    public static final int IDnowCircleProgressViewStyle_cpv_roundToWholeNumber=27;
    /**
     * <p>
     * @attr description
     * Seek mode
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_seekMode
     */
    public static final int IDnowCircleProgressViewStyle_cpv_seekMode=28;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_showTextInSpinningMode}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_showTextInSpinningMode
     */
    public static final int IDnowCircleProgressViewStyle_cpv_showTextInSpinningMode=29;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_showUnit}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_showUnit
     */
    public static final int IDnowCircleProgressViewStyle_cpv_showUnit=30;
    /**
     * <p>
     * @attr description
     * Spinner
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:cpv_spin
     */
    public static final int IDnowCircleProgressViewStyle_cpv_spin=31;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_spinBarLength}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_spinBarLength
     */
    public static final int IDnowCircleProgressViewStyle_cpv_spinBarLength=32;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_spinColor}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_spinColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_spinColor=33;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_spinSpeed}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_spinSpeed
     */
    public static final int IDnowCircleProgressViewStyle_cpv_spinSpeed=34;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_startAngle}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:cpv_startAngle
     */
    public static final int IDnowCircleProgressViewStyle_cpv_startAngle=35;
    /**
     * <p>
     * @attr description
     * Text
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:cpv_text
     */
    public static final int IDnowCircleProgressViewStyle_cpv_text=36;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_textColor}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_textColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_textColor=37;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_textMode}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Percent</td><td>1</td><td></td></tr>
     * <tr><td>Text</td><td>0</td><td></td></tr>
     * <tr><td>Value</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:cpv_textMode
     */
    public static final int IDnowCircleProgressViewStyle_cpv_textMode=38;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_textScale}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_textScale
     */
    public static final int IDnowCircleProgressViewStyle_cpv_textScale=39;
    /**
     * <p>
     * @attr description
     * Text sizes
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_textSize
     */
    public static final int IDnowCircleProgressViewStyle_cpv_textSize=40;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_textTypeface}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:cpv_textTypeface
     */
    public static final int IDnowCircleProgressViewStyle_cpv_textTypeface=41;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unit}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:cpv_unit
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unit=42;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unitColor}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:cpv_unitColor
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unitColor=43;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unitPosition}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>left_bottom</td><td>4</td><td></td></tr>
     * <tr><td>left_top</td><td>2</td><td></td></tr>
     * <tr><td>right_bottom</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:cpv_unitPosition
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unitPosition=44;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unitScale}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_unitScale
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unitScale=45;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unitSize}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:cpv_unitSize
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unitSize=46;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unitToTextScale}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_unitToTextScale
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unitToTextScale=47;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_unitTypeface}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:cpv_unitTypeface
     */
    public static final int IDnowCircleProgressViewStyle_cpv_unitTypeface=48;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#cpv_value}
     * attribute's value can be found in the {@link #IDnowCircleProgressViewStyle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:cpv_value
     */
    public static final int IDnowCircleProgressViewStyle_cpv_value=49;
    /**
     * Attributes that can be used with a LinearConstraintLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearConstraintLayout_android_orientation android:orientation}</code></td><td></td></tr>
     * </table>
     * @see #LinearConstraintLayout_android_orientation
     */
    public static final int[] LinearConstraintLayout={
      0x010100c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #LinearConstraintLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearConstraintLayout_android_orientation=0;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.autoidentreactsample:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.autoidentreactsample:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.autoidentreactsample:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.autoidentreactsample:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f0400a7, 0x7f0400a9, 0x7f040144, 
      0x7f04017f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a LottieAnimationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_autoPlay com.autoidentreactsample:lottie_autoPlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_cacheComposition com.autoidentreactsample:lottie_cacheComposition}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_colorFilter com.autoidentreactsample:lottie_colorFilter}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove com.autoidentreactsample:lottie_enableMergePathsForKitKatAndAbove}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_fallbackRes com.autoidentreactsample:lottie_fallbackRes}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_fileName com.autoidentreactsample:lottie_fileName}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_imageAssetsFolder com.autoidentreactsample:lottie_imageAssetsFolder}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_loop com.autoidentreactsample:lottie_loop}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_progress com.autoidentreactsample:lottie_progress}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_rawRes com.autoidentreactsample:lottie_rawRes}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_renderMode com.autoidentreactsample:lottie_renderMode}</code></td><td>These values must be kept in sync with the RenderMode enum</td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_repeatCount com.autoidentreactsample:lottie_repeatCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_repeatMode com.autoidentreactsample:lottie_repeatMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_scale com.autoidentreactsample:lottie_scale}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_speed com.autoidentreactsample:lottie_speed}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_url com.autoidentreactsample:lottie_url}</code></td><td></td></tr>
     * </table>
     * @see #LottieAnimationView_lottie_autoPlay
     * @see #LottieAnimationView_lottie_cacheComposition
     * @see #LottieAnimationView_lottie_colorFilter
     * @see #LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove
     * @see #LottieAnimationView_lottie_fallbackRes
     * @see #LottieAnimationView_lottie_fileName
     * @see #LottieAnimationView_lottie_imageAssetsFolder
     * @see #LottieAnimationView_lottie_loop
     * @see #LottieAnimationView_lottie_progress
     * @see #LottieAnimationView_lottie_rawRes
     * @see #LottieAnimationView_lottie_renderMode
     * @see #LottieAnimationView_lottie_repeatCount
     * @see #LottieAnimationView_lottie_repeatMode
     * @see #LottieAnimationView_lottie_scale
     * @see #LottieAnimationView_lottie_speed
     * @see #LottieAnimationView_lottie_url
     */
    public static final int[] LottieAnimationView={
      0x7f040133, 0x7f040134, 0x7f040135, 0x7f040136, 
      0x7f040137, 0x7f040138, 0x7f040139, 0x7f04013a, 
      0x7f04013b, 0x7f04013c, 0x7f04013d, 0x7f04013e, 
      0x7f04013f, 0x7f040140, 0x7f040141, 0x7f040142
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_autoPlay}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:lottie_autoPlay
     */
    public static final int LottieAnimationView_lottie_autoPlay=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_cacheComposition}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:lottie_cacheComposition
     */
    public static final int LottieAnimationView_lottie_cacheComposition=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_colorFilter}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:lottie_colorFilter
     */
    public static final int LottieAnimationView_lottie_colorFilter=2;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_enableMergePathsForKitKatAndAbove}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:lottie_enableMergePathsForKitKatAndAbove
     */
    public static final int LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove=3;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_fallbackRes}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:lottie_fallbackRes
     */
    public static final int LottieAnimationView_lottie_fallbackRes=4;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_fileName}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:lottie_fileName
     */
    public static final int LottieAnimationView_lottie_fileName=5;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_imageAssetsFolder}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:lottie_imageAssetsFolder
     */
    public static final int LottieAnimationView_lottie_imageAssetsFolder=6;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_loop}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:lottie_loop
     */
    public static final int LottieAnimationView_lottie_loop=7;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_progress}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:lottie_progress
     */
    public static final int LottieAnimationView_lottie_progress=8;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_rawRes}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:lottie_rawRes
     */
    public static final int LottieAnimationView_lottie_rawRes=9;
    /**
     * <p>
     * @attr description
     * These values must be kept in sync with the RenderMode enum
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>hardware</td><td>1</td><td></td></tr>
     * <tr><td>software</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:lottie_renderMode
     */
    public static final int LottieAnimationView_lottie_renderMode=10;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_repeatCount}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:lottie_repeatCount
     */
    public static final int LottieAnimationView_lottie_repeatCount=11;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_repeatMode}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>restart</td><td>1</td><td></td></tr>
     * <tr><td>reverse</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:lottie_repeatMode
     */
    public static final int LottieAnimationView_lottie_repeatMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_scale}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:lottie_scale
     */
    public static final int LottieAnimationView_lottie_scale=13;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_speed}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:lottie_speed
     */
    public static final int LottieAnimationView_lottie_speed=14;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#lottie_url}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:lottie_url
     */
    public static final int LottieAnimationView_lottie_url=15;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.autoidentreactsample:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.autoidentreactsample:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.autoidentreactsample:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.autoidentreactsample:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.autoidentreactsample:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.autoidentreactsample:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.autoidentreactsample:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.autoidentreactsample:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.autoidentreactsample:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.autoidentreactsample:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f040010, 0x7f040022, 0x7f040023, 
      0x7f04002e, 0x7f040066, 0x7f0400da, 0x7f0400db, 
      0x7f04014a, 0x7f04017e, 0x7f0401bd
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.autoidentreactsample:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.autoidentreactsample:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f04015a, 
      0x7f04018e
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.autoidentreactsample:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f04014b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.autoidentreactsample:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f04018a
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.autoidentreactsample:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.autoidentreactsample:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f04014d, 0x7f040150
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.autoidentreactsample:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.autoidentreactsample:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.autoidentreactsample:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.autoidentreactsample:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.autoidentreactsample:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.autoidentreactsample:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.autoidentreactsample:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.autoidentreactsample:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.autoidentreactsample:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100f1, 0x7f0400c0, 0x7f0400c1, 
      0x7f0400c2, 0x7f0400c3, 0x7f0400c4, 0x7f0400e8, 
      0x7f040169, 0x7f040183, 0x7f040189
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=6;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:layoutManager
     */
    public static final int RecyclerView_layoutManager=7;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=8;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:spanCount
     */
    public static final int RecyclerView_spanCount=9;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=10;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.autoidentreactsample:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.autoidentreactsample:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.autoidentreactsample:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.autoidentreactsample:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.autoidentreactsample:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.autoidentreactsample:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.autoidentreactsample:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.autoidentreactsample:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.autoidentreactsample:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.autoidentreactsample:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.autoidentreactsample:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.autoidentreactsample:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.autoidentreactsample:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f040053, 0x7f040062, 0x7f0400a2, 0x7f0400d4, 
      0x7f0400dc, 0x7f0400e7, 0x7f040161, 0x7f040162, 
      0x7f040178, 0x7f040179, 0x7f04018f, 0x7f040194, 
      0x7f0401c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SimpleDraweeView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SimpleDraweeView_actualImageResource com.autoidentreactsample:actualImageResource}</code></td><td>An image reference</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_actualImageScaleType com.autoidentreactsample:actualImageScaleType}</code></td><td>Scale type of the actual image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_actualImageUri com.autoidentreactsample:actualImageUri}</code></td><td>An image uri .</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_backgroundImage com.autoidentreactsample:backgroundImage}</code></td><td>A drawable or color to be used as a background.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_fadeDuration com.autoidentreactsample:fadeDuration}</code></td><td>Fade duration in milliseconds.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_failureImage com.autoidentreactsample:failureImage}</code></td><td>A drawable to be be used as a failure image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_failureImageScaleType com.autoidentreactsample:failureImageScaleType}</code></td><td>Scale type of the failure image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_overlayImage com.autoidentreactsample:overlayImage}</code></td><td>A drawable or color to be used as an overlay.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_placeholderImage com.autoidentreactsample:placeholderImage}</code></td><td>A drawable or color to be be used as a placeholder.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_placeholderImageScaleType com.autoidentreactsample:placeholderImageScaleType}</code></td><td>Scale type of the placeholder image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_pressedStateOverlayImage com.autoidentreactsample:pressedStateOverlayImage}</code></td><td>A drawable or color to be used as a pressed-state-overlay</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_progressBarAutoRotateInterval com.autoidentreactsample:progressBarAutoRotateInterval}</code></td><td>Progress bar Auto Rotate interval in milliseconds</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_progressBarImage com.autoidentreactsample:progressBarImage}</code></td><td>A drawable to be be used as a progress bar.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_progressBarImageScaleType com.autoidentreactsample:progressBarImageScaleType}</code></td><td>Scale type of the progress bar.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_retryImage com.autoidentreactsample:retryImage}</code></td><td>A drawable to be be used as a retry image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_retryImageScaleType com.autoidentreactsample:retryImageScaleType}</code></td><td>Scale type of the retry image.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundAsCircle com.autoidentreactsample:roundAsCircle}</code></td><td>Round as circle.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomEnd com.autoidentreactsample:roundBottomEnd}</code></td><td>Round the bottom-end edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomLeft com.autoidentreactsample:roundBottomLeft}</code></td><td>Round the bottom-left corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomRight com.autoidentreactsample:roundBottomRight}</code></td><td>Round the bottom-right corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundBottomStart com.autoidentreactsample:roundBottomStart}</code></td><td>Round the bottom-start edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopEnd com.autoidentreactsample:roundTopEnd}</code></td><td>Round the top-end edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopLeft com.autoidentreactsample:roundTopLeft}</code></td><td>Round the top-left corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopRight com.autoidentreactsample:roundTopRight}</code></td><td>Round the top-right corner.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundTopStart com.autoidentreactsample:roundTopStart}</code></td><td>Round the top-start edge.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundWithOverlayColor com.autoidentreactsample:roundWithOverlayColor}</code></td><td>Round by overlying color.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundedCornerRadius com.autoidentreactsample:roundedCornerRadius}</code></td><td>Rounded corner radius.</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundingBorderColor com.autoidentreactsample:roundingBorderColor}</code></td><td>Rounding border color</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundingBorderPadding com.autoidentreactsample:roundingBorderPadding}</code></td><td>Rounding border padding</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_roundingBorderWidth com.autoidentreactsample:roundingBorderWidth}</code></td><td>Rounding border width</td></tr>
     * <tr><td><code>{@link #SimpleDraweeView_viewAspectRatio com.autoidentreactsample:viewAspectRatio}</code></td><td>Aspect ratio (width / height) of the view, not necessarily of the images.</td></tr>
     * </table>
     * @see #SimpleDraweeView_actualImageResource
     * @see #SimpleDraweeView_actualImageScaleType
     * @see #SimpleDraweeView_actualImageUri
     * @see #SimpleDraweeView_backgroundImage
     * @see #SimpleDraweeView_fadeDuration
     * @see #SimpleDraweeView_failureImage
     * @see #SimpleDraweeView_failureImageScaleType
     * @see #SimpleDraweeView_overlayImage
     * @see #SimpleDraweeView_placeholderImage
     * @see #SimpleDraweeView_placeholderImageScaleType
     * @see #SimpleDraweeView_pressedStateOverlayImage
     * @see #SimpleDraweeView_progressBarAutoRotateInterval
     * @see #SimpleDraweeView_progressBarImage
     * @see #SimpleDraweeView_progressBarImageScaleType
     * @see #SimpleDraweeView_retryImage
     * @see #SimpleDraweeView_retryImageScaleType
     * @see #SimpleDraweeView_roundAsCircle
     * @see #SimpleDraweeView_roundBottomEnd
     * @see #SimpleDraweeView_roundBottomLeft
     * @see #SimpleDraweeView_roundBottomRight
     * @see #SimpleDraweeView_roundBottomStart
     * @see #SimpleDraweeView_roundTopEnd
     * @see #SimpleDraweeView_roundTopLeft
     * @see #SimpleDraweeView_roundTopRight
     * @see #SimpleDraweeView_roundTopStart
     * @see #SimpleDraweeView_roundWithOverlayColor
     * @see #SimpleDraweeView_roundedCornerRadius
     * @see #SimpleDraweeView_roundingBorderColor
     * @see #SimpleDraweeView_roundingBorderPadding
     * @see #SimpleDraweeView_roundingBorderWidth
     * @see #SimpleDraweeView_viewAspectRatio
     */
    public static final int[] SimpleDraweeView={
      0x7f040025, 0x7f040026, 0x7f040027, 0x7f040038, 
      0x7f0400bd, 0x7f0400be, 0x7f0400bf, 0x7f04014c, 
      0x7f040155, 0x7f040156, 0x7f04015b, 0x7f04015c, 
      0x7f04015d, 0x7f04015e, 0x7f040167, 0x7f040168, 
      0x7f04016a, 0x7f04016b, 0x7f04016c, 0x7f04016d, 
      0x7f04016e, 0x7f04016f, 0x7f040170, 0x7f040171, 
      0x7f040172, 0x7f040173, 0x7f040174, 0x7f040175, 
      0x7f040176, 0x7f040177, 0x7f0401c2
    };
    /**
     * <p>
     * @attr description
     * An image reference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:actualImageResource
     */
    public static final int SimpleDraweeView_actualImageResource=0;
    /**
     * <p>
     * @attr description
     * Scale type of the actual image.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:actualImageScaleType
     */
    public static final int SimpleDraweeView_actualImageScaleType=1;
    /**
     * <p>
     * @attr description
     * An image uri .
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:actualImageUri
     */
    public static final int SimpleDraweeView_actualImageUri=2;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a background.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:backgroundImage
     */
    public static final int SimpleDraweeView_backgroundImage=3;
    /**
     * <p>
     * @attr description
     * Fade duration in milliseconds.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:fadeDuration
     */
    public static final int SimpleDraweeView_fadeDuration=4;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a failure image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:failureImage
     */
    public static final int SimpleDraweeView_failureImage=5;
    /**
     * <p>
     * @attr description
     * Scale type of the failure image. Ignored if failureImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:failureImageScaleType
     */
    public static final int SimpleDraweeView_failureImageScaleType=6;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as an overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:overlayImage
     */
    public static final int SimpleDraweeView_overlayImage=7;
    /**
     * <p>
     * @attr description
     * A drawable or color to be be used as a placeholder.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:placeholderImage
     */
    public static final int SimpleDraweeView_placeholderImage=8;
    /**
     * <p>
     * @attr description
     * Scale type of the placeholder image. Ignored if placeholderImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:placeholderImageScaleType
     */
    public static final int SimpleDraweeView_placeholderImageScaleType=9;
    /**
     * <p>
     * @attr description
     * A drawable or color to be used as a pressed-state-overlay
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:pressedStateOverlayImage
     */
    public static final int SimpleDraweeView_pressedStateOverlayImage=10;
    /**
     * <p>
     * @attr description
     * Progress bar Auto Rotate interval in milliseconds
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.autoidentreactsample:progressBarAutoRotateInterval
     */
    public static final int SimpleDraweeView_progressBarAutoRotateInterval=11;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:progressBarImage
     */
    public static final int SimpleDraweeView_progressBarImage=12;
    /**
     * <p>
     * @attr description
     * Scale type of the progress bar. Ignored if progressBarImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:progressBarImageScaleType
     */
    public static final int SimpleDraweeView_progressBarImageScaleType=13;
    /**
     * <p>
     * @attr description
     * A drawable to be be used as a retry image.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:retryImage
     */
    public static final int SimpleDraweeView_retryImage=14;
    /**
     * <p>
     * @attr description
     * Scale type of the retry image. Ignored if retryImage is not specified.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>4</td><td></td></tr>
     * <tr><td>centerCrop</td><td>6</td><td></td></tr>
     * <tr><td>centerInside</td><td>5</td><td></td></tr>
     * <tr><td>fitBottomStart</td><td>8</td><td></td></tr>
     * <tr><td>fitCenter</td><td>2</td><td></td></tr>
     * <tr><td>fitEnd</td><td>3</td><td></td></tr>
     * <tr><td>fitStart</td><td>1</td><td></td></tr>
     * <tr><td>fitXY</td><td>0</td><td></td></tr>
     * <tr><td>focusCrop</td><td>7</td><td></td></tr>
     * <tr><td>none</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:retryImageScaleType
     */
    public static final int SimpleDraweeView_retryImageScaleType=15;
    /**
     * <p>
     * @attr description
     * Round as circle.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundAsCircle
     */
    public static final int SimpleDraweeView_roundAsCircle=16;
    /**
     * <p>
     * @attr description
     * Round the bottom-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomEnd
     */
    public static final int SimpleDraweeView_roundBottomEnd=17;
    /**
     * <p>
     * @attr description
     * Round the bottom-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomLeft
     */
    public static final int SimpleDraweeView_roundBottomLeft=18;
    /**
     * <p>
     * @attr description
     * Round the bottom-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomRight
     */
    public static final int SimpleDraweeView_roundBottomRight=19;
    /**
     * <p>
     * @attr description
     * Round the bottom-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundBottomStart
     */
    public static final int SimpleDraweeView_roundBottomStart=20;
    /**
     * <p>
     * @attr description
     * Round the top-end edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopEnd
     */
    public static final int SimpleDraweeView_roundTopEnd=21;
    /**
     * <p>
     * @attr description
     * Round the top-left corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopLeft
     */
    public static final int SimpleDraweeView_roundTopLeft=22;
    /**
     * <p>
     * @attr description
     * Round the top-right corner. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopRight
     */
    public static final int SimpleDraweeView_roundTopRight=23;
    /**
     * <p>
     * @attr description
     * Round the top-start edge. Ignored if roundAsCircle is used.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:roundTopStart
     */
    public static final int SimpleDraweeView_roundTopStart=24;
    /**
     * <p>
     * @attr description
     * Round by overlying color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:roundWithOverlayColor
     */
    public static final int SimpleDraweeView_roundWithOverlayColor=25;
    /**
     * <p>
     * @attr description
     * Rounded corner radius. Ignored if roundAsCircle is used.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:roundedCornerRadius
     */
    public static final int SimpleDraweeView_roundedCornerRadius=26;
    /**
     * <p>
     * @attr description
     * Rounding border color
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:roundingBorderColor
     */
    public static final int SimpleDraweeView_roundingBorderColor=27;
    /**
     * <p>
     * @attr description
     * Rounding border padding
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:roundingBorderPadding
     */
    public static final int SimpleDraweeView_roundingBorderPadding=28;
    /**
     * <p>
     * @attr description
     * Rounding border width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:roundingBorderWidth
     */
    public static final int SimpleDraweeView_roundingBorderWidth=29;
    /**
     * <p>
     * @attr description
     * Aspect ratio (width / height) of the view, not necessarily of the images.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.autoidentreactsample:viewAspectRatio
     */
    public static final int SimpleDraweeView_viewAspectRatio=30;
    /**
     * Attributes that can be used with a SpinKitView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SpinKitView_SpinKit_Color com.autoidentreactsample:SpinKit_Color}</code></td><td></td></tr>
     * <tr><td><code>{@link #SpinKitView_SpinKit_Style com.autoidentreactsample:SpinKit_Style}</code></td><td></td></tr>
     * </table>
     * @see #SpinKitView_SpinKit_Color
     * @see #SpinKitView_SpinKit_Style
     */
    public static final int[] SpinKitView={
      0x7f040001, 0x7f040002
    };
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#SpinKit_Color}
     * attribute's value can be found in the {@link #SpinKitView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:SpinKit_Color
     */
    public static final int SpinKitView_SpinKit_Color=0;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#SpinKit_Style}
     * attribute's value can be found in the {@link #SpinKitView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ChasingDots</td><td>5</td><td></td></tr>
     * <tr><td>Circle</td><td>7</td><td></td></tr>
     * <tr><td>CubeGrid</td><td>8</td><td></td></tr>
     * <tr><td>DoubleBounce</td><td>1</td><td></td></tr>
     * <tr><td>FadingCircle</td><td>9</td><td></td></tr>
     * <tr><td>FoldingCube</td><td>a</td><td></td></tr>
     * <tr><td>MultiplePulse</td><td>c</td><td></td></tr>
     * <tr><td>MultiplePulseRing</td><td>e</td><td></td></tr>
     * <tr><td>Pulse</td><td>4</td><td></td></tr>
     * <tr><td>PulseRing</td><td>d</td><td></td></tr>
     * <tr><td>RotatingCircle</td><td>b</td><td></td></tr>
     * <tr><td>RotatingPlane</td><td>0</td><td></td></tr>
     * <tr><td>ThreeBounce</td><td>6</td><td></td></tr>
     * <tr><td>WanderingCubes</td><td>3</td><td></td></tr>
     * <tr><td>Wave</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:SpinKit_Style
     */
    public static final int SpinKitView_SpinKit_Style=1;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.autoidentreactsample:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f040158
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.autoidentreactsample:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.autoidentreactsample:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.autoidentreactsample:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.autoidentreactsample:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.autoidentreactsample:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.autoidentreactsample:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.autoidentreactsample:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.autoidentreactsample:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.autoidentreactsample:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.autoidentreactsample:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.autoidentreactsample:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f040180, 
      0x7f040187, 0x7f040195, 0x7f040196, 0x7f040198, 
      0x7f0401a7, 0x7f0401a8, 0x7f0401a9, 0x7f0401be, 
      0x7f0401bf, 0x7f0401c0
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.autoidentreactsample:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.autoidentreactsample:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.autoidentreactsample:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.autoidentreactsample:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x7f0400c7, 0x7f0400cf, 0x7f040199, 0x7f0401a4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static final int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontFamily
     */
    public static final int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:fontVariationSettings
     */
    public static final int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.autoidentreactsample:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:textLocale
     */
    public static final int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.autoidentreactsample:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.autoidentreactsample:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.autoidentreactsample:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.autoidentreactsample:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.autoidentreactsample:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.autoidentreactsample:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.autoidentreactsample:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.autoidentreactsample:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.autoidentreactsample:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.autoidentreactsample:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.autoidentreactsample:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.autoidentreactsample:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.autoidentreactsample:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.autoidentreactsample:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.autoidentreactsample:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.autoidentreactsample:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.autoidentreactsample:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.autoidentreactsample:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.autoidentreactsample:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.autoidentreactsample:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.autoidentreactsample:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.autoidentreactsample:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.autoidentreactsample:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.autoidentreactsample:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.autoidentreactsample:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.autoidentreactsample:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.autoidentreactsample:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.autoidentreactsample:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f040047, 0x7f040055, 
      0x7f040056, 0x7f040067, 0x7f040068, 0x7f040069, 
      0x7f04006a, 0x7f04006b, 0x7f04006c, 0x7f040131, 
      0x7f040132, 0x7f040143, 0x7f040145, 0x7f040147, 
      0x7f040148, 0x7f040158, 0x7f040190, 0x7f040191, 
      0x7f040192, 0x7f0401af, 0x7f0401b0, 0x7f0401b1, 
      0x7f0401b2, 0x7f0401b3, 0x7f0401b4, 0x7f0401b5, 
      0x7f0401b6, 0x7f0401b7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:menu
     */
    public static final int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:navigationIcon
     */
    public static final int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:popupTheme
     */
    public static final int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:subtitle
     */
    public static final int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.autoidentreactsample:title
     */
    public static final int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:titleMargin
     */
    public static final int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.autoidentreactsample.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:titleTextColor
     */
    public static final int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.autoidentreactsample:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.autoidentreactsample:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.autoidentreactsample:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f04014e, 0x7f04014f, 
      0x7f0401a5
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.autoidentreactsample:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.autoidentreactsample:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.autoidentreactsample:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.autoidentreactsample:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f04003b, 0x7f04003c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.autoidentreactsample:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.autoidentreactsample:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
    public static final int[] ZoomOval={
    };
  }
  public static final class xml {
    public static final int rn_dev_preferences=0x7f120000;
  }
}